// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module net_to_app (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        from_net_V_dout,
        from_net_V_empty_n,
        from_net_V_read,
        to_app_V_din,
        to_app_V_full_n,
        to_app_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [80:0] from_net_V_dout;
input   from_net_V_empty_n;
output   from_net_V_read;
output  [128:0] to_app_V_din;
input   to_app_V_full_n;
output   to_app_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg from_net_V_read;
reg[128:0] to_app_V_din;
reg to_app_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [1:0] nta_state_V_load_load_fu_218_p1;
wire   [0:0] last_V_1_load_load_fu_222_p1;
wire   [0:0] grp_nbreadreq_fu_114_p3;
reg    ap_predicate_op9_read_state1;
reg    ap_predicate_op17_read_state1;
reg    ap_predicate_op61_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] nta_state_V_load_reg_682;
reg   [0:0] last_V_1_load_reg_686;
reg   [0:0] tmp_1_reg_694;
reg    ap_predicate_op105_write_state2;
reg   [0:0] tmp_reg_713;
reg   [0:0] tmp_12_reg_724;
reg    ap_predicate_op110_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] nta_state_V;
reg   [0:0] last_V_1;
reg   [31:0] byte_counter;
reg   [15:0] dest_V;
reg   [7:0] id_V;
reg   [39:0] user_V;
reg    from_net_V_blk_n;
wire    ap_block_pp0_stage0;
reg    to_app_V_blk_n;
wire   [63:0] packetOut_data_V_fu_236_p1;
reg   [63:0] packetOut_data_V_reg_698;
reg   [7:0] packetOut_keep_V_reg_703;
reg   [0:0] packetOut_last_V_reg_708;
reg   [80:0] tmp28_reg_717;
wire   [0:0] tmp_12_fu_536_p2;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18;
wire   [0:0] ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135;
wire   [0:0] tmp_s_fu_542_p2;
wire   [0:0] byte_counter_flag_s_fu_454_p2;
reg   [31:0] ap_phi_mux_byte_counter_new_3_phi_fu_170_p18;
wire   [31:0] ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167;
wire   [31:0] byte_counter_new_s_fu_461_p3;
wire   [128:0] tmp_315_fu_632_p7;
reg    ap_block_pp0_stage0_01001;
wire   [128:0] tmp_12_2_fu_667_p6;
wire   [1:0] storemerge_fu_476_p3;
wire   [15:0] tmp_26_fu_548_p1;
wire   [39:0] p_Result_s_14_fu_584_p3;
wire   [0:0] tmp_16_fu_250_p3;
wire   [31:0] tmp_5_fu_258_p2;
wire   [31:0] tmp_11_byte_counter_s_fu_264_p3;
wire   [0:0] tmp_17_fu_272_p3;
wire   [31:0] tmp_11_1_fu_280_p2;
wire   [31:0] byte_counter_new_4_fu_286_p3;
wire   [0:0] tmp_18_fu_294_p3;
wire   [31:0] tmp_11_2_fu_302_p2;
wire   [31:0] tmp_11_2_byte_counte_fu_308_p3;
wire   [0:0] tmp_19_fu_316_p3;
wire   [31:0] tmp_11_3_fu_324_p2;
wire   [31:0] byte_counter_new_6_fu_330_p3;
wire   [0:0] tmp_20_fu_338_p3;
wire   [31:0] tmp_11_4_fu_346_p2;
wire   [31:0] tmp_11_4_byte_counte_fu_352_p3;
wire   [0:0] tmp_21_fu_360_p3;
wire   [31:0] tmp_11_5_fu_368_p2;
wire   [31:0] byte_counter_new_8_fu_374_p3;
wire   [0:0] tmp_22_fu_382_p3;
wire   [31:0] tmp_11_6_fu_390_p2;
wire   [31:0] tmp_11_6_byte_counte_fu_396_p3;
wire   [0:0] tmp3_fu_424_p2;
wire   [0:0] tmp2_fu_418_p2;
wire   [0:0] tmp_23_fu_404_p3;
wire   [0:0] tmp6_fu_442_p2;
wire   [0:0] tmp5_fu_436_p2;
wire   [0:0] tmp4_fu_448_p2;
wire   [0:0] tmp1_fu_430_p2;
wire   [31:0] tmp_11_7_fu_412_p2;
wire   [0:0] tmp_4_fu_470_p2;
wire   [7:0] p_Result_s_fu_490_p4;
wire   [0:0] tmp_7_fu_506_p2;
wire   [0:0] tmp_6_fu_500_p2;
wire   [0:0] tmp_9_fu_518_p2;
wire   [0:0] tmp_8_fu_512_p2;
wire   [0:0] tmp_11_fu_530_p2;
wire   [0:0] tmp_10_fu_524_p2;
wire   [3:0] p_Result_2_fu_574_p4;
wire   [7:0] packetOut_dest_V_fu_620_p1;
wire   [3:0] p_Result_9_fu_655_p4;
wire   [7:0] envlp_out_id_V_fu_646_p4;
wire   [71:0] tmp_13_fu_664_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_236;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 nta_state_V = 2'd0;
#0 last_V_1 = 1'd0;
#0 byte_counter = 32'd0;
#0 dest_V = 16'd0;
#0 id_V = 8'd0;
#0 user_V = 40'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_12_fu_536_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        last_V_1 <= 1'd0;
    end else if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_s_fu_542_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (tmp_12_fu_536_p2 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        last_V_1 <= from_net_V_dout[32'd80];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_12_fu_536_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nta_state_V <= 2'd2;
    end else if (((last_V_1_load_load_fu_222_p1 == 1'd1) & (nta_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nta_state_V <= storemerge_fu_476_p3;
    end else if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_s_fu_542_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (tmp_12_fu_536_p2 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        nta_state_V <= 2'd1;
    end else if (((last_V_1_load_load_fu_222_p1 == 1'd1) & (nta_state_V == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nta_state_V <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        byte_counter <= ap_phi_mux_byte_counter_new_3_phi_fu_170_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_542_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (tmp_12_fu_536_p2 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dest_V <= tmp_26_fu_548_p1;
        id_V <= {{from_net_V_dout[23:16]}};
        user_V[4 : 0] <= p_Result_s_14_fu_584_p3[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        last_V_1_load_reg_686 <= last_V_1;
        nta_state_V_load_reg_682 <= nta_state_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        packetOut_data_V_reg_698 <= packetOut_data_V_fu_236_p1;
        packetOut_keep_V_reg_703 <= {{from_net_V_dout[79:72]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        packetOut_last_V_reg_708 <= from_net_V_dout[32'd80];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op61_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp28_reg_717 <= from_net_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op61_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_724 <= tmp_12_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((last_V_1 == 1'd0) & (nta_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_694 <= from_net_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_713 <= from_net_V_empty_n;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_nbreadreq_fu_114_p3 == 1'd1) & (last_V_1 == 1'd0) & (nta_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = byte_counter_flag_s_fu_454_p2;
    end else if (((tmp_s_fu_542_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (tmp_12_fu_536_p2 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = 1'd1;
    end else if ((((grp_nbreadreq_fu_114_p3 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((last_V_1_load_load_fu_222_p1 == 1'd1) & (nta_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((grp_nbreadreq_fu_114_p3 == 1'd1) & (tmp_s_fu_542_p2 == 1'd0) & (tmp_12_fu_536_p2 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_12_fu_536_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((grp_nbreadreq_fu_114_p3 == 1'd0) & (last_V_1 == 1'd0) & (nta_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((nta_state_V == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((nta_state_V_load_load_fu_218_p1 == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = 1'd0;
    end else begin
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135;
    end
end

always @ (*) begin
    if (((grp_nbreadreq_fu_114_p3 == 1'd1) & (last_V_1 == 1'd0) & (nta_state_V == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_byte_counter_new_3_phi_fu_170_p18 = byte_counter_new_s_fu_461_p3;
    end else if ((((grp_nbreadreq_fu_114_p3 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((grp_nbreadreq_fu_114_p3 == 1'd1) & (tmp_s_fu_542_p2 == 1'd0) & (tmp_12_fu_536_p2 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_s_fu_542_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (tmp_12_fu_536_p2 == 1'd0) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((tmp_12_fu_536_p2 == 1'd1) & (grp_nbreadreq_fu_114_p3 == 1'd1) & (nta_state_V == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_byte_counter_new_3_phi_fu_170_p18 = 32'd0;
    end else begin
        ap_phi_mux_byte_counter_new_3_phi_fu_170_p18 = ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op61_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        from_net_V_blk_n = from_net_V_empty_n;
    end else begin
        from_net_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op61_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op17_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op9_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        from_net_V_read = 1'b1;
    end else begin
        from_net_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op110_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op105_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        to_app_V_blk_n = to_app_V_full_n;
    end else begin
        to_app_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_236)) begin
        if ((ap_predicate_op110_write_state2 == 1'b1)) begin
            to_app_V_din = tmp_12_2_fu_667_p6;
        end else if ((ap_predicate_op105_write_state2 == 1'b1)) begin
            to_app_V_din = tmp_315_fu_632_p7;
        end else begin
            to_app_V_din = 'bx;
        end
    end else begin
        to_app_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op110_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op105_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        to_app_V_write = 1'b1;
    end else begin
        to_app_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((to_app_V_full_n == 1'b0) & (ap_predicate_op110_write_state2 == 1'b1)) | ((to_app_V_full_n == 1'b0) & (ap_predicate_op105_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op61_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((to_app_V_full_n == 1'b0) & (ap_predicate_op110_write_state2 == 1'b1)) | ((to_app_V_full_n == 1'b0) & (ap_predicate_op105_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op61_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((to_app_V_full_n == 1'b0) & (ap_predicate_op110_write_state2 == 1'b1)) | ((to_app_V_full_n == 1'b0) & (ap_predicate_op105_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op61_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op61_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op17_read_state1 == 1'b1)) | ((from_net_V_empty_n == 1'b0) & (ap_predicate_op9_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((to_app_V_full_n == 1'b0) & (ap_predicate_op110_write_state2 == 1'b1)) | ((to_app_V_full_n == 1'b0) & (ap_predicate_op105_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_condition_236 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135 = 'bx;

assign ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167 = 'bx;

always @ (*) begin
    ap_predicate_op105_write_state2 = ((nta_state_V_load_reg_682 == 2'd1) & (tmp_1_reg_694 == 1'd1) & (last_V_1_load_reg_686 == 1'd0));
end

always @ (*) begin
    ap_predicate_op110_write_state2 = ((nta_state_V_load_reg_682 == 2'd0) & (tmp_12_reg_724 == 1'd1) & (tmp_reg_713 == 1'd1));
end

always @ (*) begin
    ap_predicate_op17_read_state1 = ((grp_nbreadreq_fu_114_p3 == 1'd1) & (last_V_1 == 1'd0) & (nta_state_V == 2'd1));
end

always @ (*) begin
    ap_predicate_op61_read_state1 = ((grp_nbreadreq_fu_114_p3 == 1'd1) & (nta_state_V == 2'd0));
end

always @ (*) begin
    ap_predicate_op9_read_state1 = ((grp_nbreadreq_fu_114_p3 == 1'd1) & (last_V_1 == 1'd0) & (nta_state_V == 2'd2));
end

assign byte_counter_flag_s_fu_454_p2 = (tmp4_fu_448_p2 | tmp1_fu_430_p2);

assign byte_counter_new_4_fu_286_p3 = ((tmp_17_fu_272_p3[0:0] === 1'b1) ? tmp_11_1_fu_280_p2 : tmp_11_byte_counter_s_fu_264_p3);

assign byte_counter_new_6_fu_330_p3 = ((tmp_19_fu_316_p3[0:0] === 1'b1) ? tmp_11_3_fu_324_p2 : tmp_11_2_byte_counte_fu_308_p3);

assign byte_counter_new_8_fu_374_p3 = ((tmp_21_fu_360_p3[0:0] === 1'b1) ? tmp_11_5_fu_368_p2 : tmp_11_4_byte_counte_fu_352_p3);

assign byte_counter_new_s_fu_461_p3 = ((tmp_23_fu_404_p3[0:0] === 1'b1) ? tmp_11_7_fu_412_p2 : tmp_11_6_byte_counte_fu_396_p3);

assign envlp_out_id_V_fu_646_p4 = {{tmp28_reg_717[23:16]}};

assign grp_nbreadreq_fu_114_p3 = from_net_V_empty_n;

assign last_V_1_load_load_fu_222_p1 = last_V_1;

assign nta_state_V_load_load_fu_218_p1 = nta_state_V;

assign p_Result_2_fu_574_p4 = {{from_net_V_dout[59:56]}};

assign p_Result_9_fu_655_p4 = {{tmp28_reg_717[59:56]}};

assign p_Result_s_14_fu_584_p3 = {{36'd1}, {p_Result_2_fu_574_p4}};

assign p_Result_s_fu_490_p4 = {{from_net_V_dout[31:24]}};

assign packetOut_data_V_fu_236_p1 = from_net_V_dout[63:0];

assign packetOut_dest_V_fu_620_p1 = dest_V[7:0];

assign storemerge_fu_476_p3 = ((tmp_4_fu_470_p2[0:0] === 1'b1) ? 2'd2 : 2'd0);

assign tmp1_fu_430_p2 = (tmp3_fu_424_p2 | tmp2_fu_418_p2);

assign tmp2_fu_418_p2 = (tmp_17_fu_272_p3 | tmp_16_fu_250_p3);

assign tmp3_fu_424_p2 = (tmp_19_fu_316_p3 | tmp_18_fu_294_p3);

assign tmp4_fu_448_p2 = (tmp6_fu_442_p2 | tmp5_fu_436_p2);

assign tmp5_fu_436_p2 = (tmp_21_fu_360_p3 | tmp_20_fu_338_p3);

assign tmp6_fu_442_p2 = (tmp_23_fu_404_p3 | tmp_22_fu_382_p3);

assign tmp_10_fu_524_p2 = (tmp_9_fu_518_p2 | tmp_8_fu_512_p2);

assign tmp_11_1_fu_280_p2 = (32'd1 + tmp_11_byte_counter_s_fu_264_p3);

assign tmp_11_2_byte_counte_fu_308_p3 = ((tmp_18_fu_294_p3[0:0] === 1'b1) ? tmp_11_2_fu_302_p2 : byte_counter_new_4_fu_286_p3);

assign tmp_11_2_fu_302_p2 = (32'd1 + byte_counter_new_4_fu_286_p3);

assign tmp_11_3_fu_324_p2 = (32'd1 + tmp_11_2_byte_counte_fu_308_p3);

assign tmp_11_4_byte_counte_fu_352_p3 = ((tmp_20_fu_338_p3[0:0] === 1'b1) ? tmp_11_4_fu_346_p2 : byte_counter_new_6_fu_330_p3);

assign tmp_11_4_fu_346_p2 = (32'd1 + byte_counter_new_6_fu_330_p3);

assign tmp_11_5_fu_368_p2 = (32'd1 + tmp_11_4_byte_counte_fu_352_p3);

assign tmp_11_6_byte_counte_fu_396_p3 = ((tmp_22_fu_382_p3[0:0] === 1'b1) ? tmp_11_6_fu_390_p2 : byte_counter_new_8_fu_374_p3);

assign tmp_11_6_fu_390_p2 = (32'd1 + byte_counter_new_8_fu_374_p3);

assign tmp_11_7_fu_412_p2 = (32'd1 + tmp_11_6_byte_counte_fu_396_p3);

assign tmp_11_byte_counter_s_fu_264_p3 = ((tmp_16_fu_250_p3[0:0] === 1'b1) ? tmp_5_fu_258_p2 : byte_counter);

assign tmp_11_fu_530_p2 = ((p_Result_s_fu_490_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_12_2_fu_667_p6 = {{{{{{{{36'd0}, {p_Result_9_fu_655_p4}}}, {envlp_out_id_V_fu_646_p4}}}, {9'd511}}}, {tmp_13_fu_664_p1}};

assign tmp_12_fu_536_p2 = (tmp_11_fu_530_p2 | tmp_10_fu_524_p2);

assign tmp_13_fu_664_p1 = tmp28_reg_717[71:0];

assign tmp_16_fu_250_p3 = from_net_V_dout[32'd72];

assign tmp_17_fu_272_p3 = from_net_V_dout[32'd73];

assign tmp_18_fu_294_p3 = from_net_V_dout[32'd74];

assign tmp_19_fu_316_p3 = from_net_V_dout[32'd75];

assign tmp_20_fu_338_p3 = from_net_V_dout[32'd76];

assign tmp_21_fu_360_p3 = from_net_V_dout[32'd77];

assign tmp_22_fu_382_p3 = from_net_V_dout[32'd78];

assign tmp_23_fu_404_p3 = from_net_V_dout[32'd79];

assign tmp_26_fu_548_p1 = from_net_V_dout[15:0];

assign tmp_315_fu_632_p7 = {{{{{{user_V}, {id_V}}, {packetOut_keep_V_reg_703}}, {packetOut_last_V_reg_708}}, {packetOut_dest_V_fu_620_p1}}, {packetOut_data_V_reg_698}};

assign tmp_4_fu_470_p2 = (($signed(byte_counter) < $signed(32'd60)) ? 1'b1 : 1'b0);

assign tmp_5_fu_258_p2 = (32'd1 + byte_counter);

assign tmp_6_fu_500_p2 = ((p_Result_s_fu_490_p4 == 8'd5) ? 1'b1 : 1'b0);

assign tmp_7_fu_506_p2 = ((p_Result_s_fu_490_p4 == 8'd4) ? 1'b1 : 1'b0);

assign tmp_8_fu_512_p2 = (tmp_7_fu_506_p2 | tmp_6_fu_500_p2);

assign tmp_9_fu_518_p2 = ((p_Result_s_fu_490_p4 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_s_fu_542_p2 = ((p_Result_s_fu_490_p4 == 8'd2) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    user_V[39:5] <= 35'b00000000000000000000000000000000000;
end

endmodule //net_to_app
