// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "app_to_net.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic app_to_net::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic app_to_net::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> app_to_net::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> app_to_net::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool app_to_net::ap_const_boolean_1 = true;
const sc_lv<2> app_to_net::ap_const_lv2_2 = "10";
const sc_lv<1> app_to_net::ap_const_lv1_0 = "0";
const sc_lv<1> app_to_net::ap_const_lv1_1 = "1";
const sc_lv<2> app_to_net::ap_const_lv2_0 = "00";
const sc_lv<2> app_to_net::ap_const_lv2_3 = "11";
const sc_lv<2> app_to_net::ap_const_lv2_1 = "1";
const bool app_to_net::ap_const_boolean_0 = false;
const sc_lv<8> app_to_net::ap_const_lv8_0 = "00000000";
const sc_lv<32> app_to_net::ap_const_lv32_8 = "1000";
const sc_lv<32> app_to_net::ap_const_lv32_49 = "1001001";
const sc_lv<32> app_to_net::ap_const_lv32_50 = "1010000";
const sc_lv<32> app_to_net::ap_const_lv32_48 = "1001000";
const sc_lv<32> app_to_net::ap_const_lv32_59 = "1011001";
const sc_lv<32> app_to_net::ap_const_lv32_5C = "1011100";
const sc_lv<32> app_to_net::ap_const_lv32_1 = "1";
const sc_lv<32> app_to_net::ap_const_lv32_4A = "1001010";
const sc_lv<32> app_to_net::ap_const_lv32_4B = "1001011";
const sc_lv<32> app_to_net::ap_const_lv32_4C = "1001100";
const sc_lv<32> app_to_net::ap_const_lv32_4D = "1001101";
const sc_lv<32> app_to_net::ap_const_lv32_4E = "1001110";
const sc_lv<32> app_to_net::ap_const_lv32_4F = "1001111";
const sc_lv<32> app_to_net::ap_const_lv32_5C8 = "10111001000";
const sc_lv<32> app_to_net::ap_const_lv32_40 = "1000000";
const sc_lv<32> app_to_net::ap_const_lv32_47 = "1000111";
const sc_lv<32> app_to_net::ap_const_lv32_51 = "1010001";
const sc_lv<32> app_to_net::ap_const_lv32_58 = "1011000";
const sc_lv<32> app_to_net::ap_const_lv32_5D = "1011101";
const sc_lv<32> app_to_net::ap_const_lv32_60 = "1100000";
const sc_lv<4> app_to_net::ap_const_lv4_0 = "0000";
const sc_lv<4> app_to_net::ap_const_lv4_1 = "1";
const sc_lv<32> app_to_net::ap_const_lv32_38 = "111000";
const sc_lv<32> app_to_net::ap_const_lv32_3F = "111111";
const sc_lv<16> app_to_net::ap_const_lv16_1 = "1";
const sc_lv<32> app_to_net::ap_const_lv32_20 = "100000";
const sc_lv<32> app_to_net::ap_const_lv32_2F = "101111";
const sc_lv<8> app_to_net::ap_const_lv8_FF = "11111111";
const sc_lv<24> app_to_net::ap_const_lv24_2 = "10";
const sc_lv<9> app_to_net::ap_const_lv9_FF = "11111111";

app_to_net::app_to_net(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_app_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op58_read_state1 );
    sensitive << ( to_net_V_full_n );
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( ap_predicate_op109_write_state2 );
    sensitive << ( ap_predicate_op112_write_state2 );
    sensitive << ( ap_predicate_op127_write_state2 );
    sensitive << ( ap_predicate_op130_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_app_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op58_read_state1 );
    sensitive << ( to_net_V_full_n );
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( ap_predicate_op109_write_state2 );
    sensitive << ( ap_predicate_op112_write_state2 );
    sensitive << ( ap_predicate_op127_write_state2 );
    sensitive << ( ap_predicate_op130_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_app_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op58_read_state1 );
    sensitive << ( to_net_V_full_n );
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( ap_predicate_op109_write_state2 );
    sensitive << ( ap_predicate_op112_write_state2 );
    sensitive << ( ap_predicate_op127_write_state2 );
    sensitive << ( ap_predicate_op130_write_state2 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( from_app_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op58_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( to_net_V_full_n );
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( ap_predicate_op109_write_state2 );
    sensitive << ( ap_predicate_op112_write_state2 );
    sensitive << ( ap_predicate_op127_write_state2 );
    sensitive << ( ap_predicate_op130_write_state2 );

    SC_METHOD(thread_ap_condition_126);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_145);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_187);
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( atn_state_V );
    sensitive << ( last_V );
    sensitive << ( tmp_5_fu_515_p2 );

    SC_METHOD(thread_ap_condition_201);
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( atn_state_V );
    sensitive << ( tmp_7_fu_591_p2 );

    SC_METHOD(thread_ap_condition_211);
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( atn_state_V );
    sensitive << ( tmp_7_fu_591_p2 );

    SC_METHOD(thread_ap_condition_239);
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( atn_state_V );
    sensitive << ( last_V );
    sensitive << ( tmp_5_fu_515_p2 );

    SC_METHOD(thread_ap_condition_257);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_274);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( atn_state_V_load_load_fu_279_p1 );
    sensitive << ( last_V_load_load_fu_287_p1 );
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( atn_state_V );
    sensitive << ( last_V );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_5_fu_515_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_byte_counter_1_flag_s_reg_169 );
    sensitive << ( byte_counter_1_flag_7_fu_499_p2 );

    SC_METHOD(thread_ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16);
    sensitive << ( atn_state_V_load_load_fu_279_p1 );
    sensitive << ( ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198 );
    sensitive << ( byte_counter_1_new_7_fu_506_p3 );
    sensitive << ( ap_condition_239 );
    sensitive << ( ap_condition_187 );
    sensitive << ( ap_condition_145 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_app_packet_in_data_V_1_reg_226);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_byte_counter_1_flag_s_reg_169);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198);

    SC_METHOD(thread_ap_predicate_op109_write_state2);
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( last_V_load_reg_845 );
    sensitive << ( tmp_8_reg_854 );
    sensitive << ( tmp_5_reg_864 );

    SC_METHOD(thread_ap_predicate_op112_write_state2);
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( last_V_load_reg_845 );
    sensitive << ( tmp_8_reg_854 );
    sensitive << ( tmp_5_reg_864 );

    SC_METHOD(thread_ap_predicate_op127_write_state2);
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( tmp_reg_873 );
    sensitive << ( tmp_7_reg_899 );
    sensitive << ( tmp_9_reg_903 );

    SC_METHOD(thread_ap_predicate_op130_write_state2);
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( tmp_reg_873 );
    sensitive << ( tmp_7_reg_899 );

    SC_METHOD(thread_ap_predicate_op13_read_state1);
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( atn_state_V );
    sensitive << ( last_V );

    SC_METHOD(thread_ap_predicate_op58_read_state1);
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( atn_state_V );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_atn_state_V_load_load_fu_279_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( atn_state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_byte_counter_1_flag_7_fu_499_p2);
    sensitive << ( tmp4_fu_493_p2 );
    sensitive << ( tmp1_fu_475_p2 );

    SC_METHOD(thread_byte_counter_1_new_1_fu_331_p3);
    sensitive << ( tmp_18_byte_counter_s_fu_309_p3 );
    sensitive << ( tmp_31_fu_317_p3 );
    sensitive << ( tmp_18_1_fu_325_p2 );

    SC_METHOD(thread_byte_counter_1_new_3_fu_375_p3);
    sensitive << ( tmp_18_2_byte_counte_fu_353_p3 );
    sensitive << ( tmp_33_fu_361_p3 );
    sensitive << ( tmp_18_3_fu_369_p2 );

    SC_METHOD(thread_byte_counter_1_new_5_fu_419_p3);
    sensitive << ( tmp_18_4_byte_counte_fu_397_p3 );
    sensitive << ( tmp_35_fu_405_p3 );
    sensitive << ( tmp_18_5_fu_413_p2 );

    SC_METHOD(thread_byte_counter_1_new_7_fu_506_p3);
    sensitive << ( tmp_18_6_byte_counte_fu_441_p3 );
    sensitive << ( tmp_37_fu_449_p3 );
    sensitive << ( tmp_18_7_fu_457_p2 );

    SC_METHOD(thread_from_app_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( from_app_V_empty_n );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op58_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_from_app_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_predicate_op58_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_265_p4);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_grp_nbreadreq_fu_148_p3);
    sensitive << ( from_app_V_empty_n );

    SC_METHOD(thread_last_V_load_load_fu_287_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( last_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_loc_V_6_trunc_fu_771_p1);
    sensitive << ( tmp_dest_V_2_reg_882 );

    SC_METHOD(thread_loc_V_8_trunc_fu_789_p1);
    sensitive << ( p_Result_5_reg_907 );

    SC_METHOD(thread_loc_V_trunc_fu_621_p1);
    sensitive << ( grp_fu_265_p4 );

    SC_METHOD(thread_p_Result_2_fu_803_p1);
    sensitive << ( tmp_11_fu_796_p3 );

    SC_METHOD(thread_p_Result_3_fu_677_p5);
    sensitive << ( extraPayload_data_V );
    sensitive << ( val_assign_trunc_fu_671_p2 );

    SC_METHOD(thread_p_Result_s_15_fu_625_p5);
    sensitive << ( p_Val2_1_fu_539_p1 );
    sensitive << ( loc_V_trunc_fu_621_p1 );

    SC_METHOD(thread_p_Result_s_fu_581_p4);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_p_Val2_1_fu_539_p1);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp1_fu_475_p2);
    sensitive << ( tmp3_fu_469_p2 );
    sensitive << ( tmp2_fu_463_p2 );

    SC_METHOD(thread_tmp2_fu_463_p2);
    sensitive << ( tmp_30_fu_295_p3 );
    sensitive << ( tmp_31_fu_317_p3 );

    SC_METHOD(thread_tmp3_fu_469_p2);
    sensitive << ( tmp_32_fu_339_p3 );
    sensitive << ( tmp_33_fu_361_p3 );

    SC_METHOD(thread_tmp4_fu_493_p2);
    sensitive << ( tmp6_fu_487_p2 );
    sensitive << ( tmp5_fu_481_p2 );

    SC_METHOD(thread_tmp5_fu_481_p2);
    sensitive << ( tmp_34_fu_383_p3 );
    sensitive << ( tmp_35_fu_405_p3 );

    SC_METHOD(thread_tmp6_fu_487_p2);
    sensitive << ( tmp_36_fu_427_p3 );
    sensitive << ( tmp_37_fu_449_p3 );

    SC_METHOD(thread_tmp_10_fu_792_p1);
    sensitive << ( tmp_6_fu_780_p4 );

    SC_METHOD(thread_tmp_11_fu_796_p3);
    sensitive << ( p_Result_5_reg_907 );
    sensitive << ( tmp_10_fu_792_p1 );

    SC_METHOD(thread_tmp_18_1_fu_325_p2);
    sensitive << ( tmp_18_byte_counter_s_fu_309_p3 );

    SC_METHOD(thread_tmp_18_2_byte_counte_fu_353_p3);
    sensitive << ( byte_counter_1_new_1_fu_331_p3 );
    sensitive << ( tmp_32_fu_339_p3 );
    sensitive << ( tmp_18_2_fu_347_p2 );

    SC_METHOD(thread_tmp_18_2_fu_347_p2);
    sensitive << ( byte_counter_1_new_1_fu_331_p3 );

    SC_METHOD(thread_tmp_18_3_fu_369_p2);
    sensitive << ( tmp_18_2_byte_counte_fu_353_p3 );

    SC_METHOD(thread_tmp_18_4_byte_counte_fu_397_p3);
    sensitive << ( byte_counter_1_new_3_fu_375_p3 );
    sensitive << ( tmp_34_fu_383_p3 );
    sensitive << ( tmp_18_4_fu_391_p2 );

    SC_METHOD(thread_tmp_18_4_fu_391_p2);
    sensitive << ( byte_counter_1_new_3_fu_375_p3 );

    SC_METHOD(thread_tmp_18_5_fu_413_p2);
    sensitive << ( tmp_18_4_byte_counte_fu_397_p3 );

    SC_METHOD(thread_tmp_18_6_byte_counte_fu_441_p3);
    sensitive << ( byte_counter_1_new_5_fu_419_p3 );
    sensitive << ( tmp_36_fu_427_p3 );
    sensitive << ( tmp_18_6_fu_435_p2 );

    SC_METHOD(thread_tmp_18_6_fu_435_p2);
    sensitive << ( byte_counter_1_new_5_fu_419_p3 );

    SC_METHOD(thread_tmp_18_7_fu_457_p2);
    sensitive << ( tmp_18_6_byte_counte_fu_441_p3 );

    SC_METHOD(thread_tmp_18_byte_counter_s_fu_309_p3);
    sensitive << ( byte_counter_1 );
    sensitive << ( tmp_30_fu_295_p3 );
    sensitive << ( tmp_2_fu_303_p2 );

    SC_METHOD(thread_tmp_1_fu_825_p5);
    sensitive << ( reg_275 );
    sensitive << ( tmp_dest_V_2_reg_882 );
    sensitive << ( tmp_last_V_1_reg_889 );
    sensitive << ( p_Result_s_15_reg_913 );

    SC_METHOD(thread_tmp_27_fu_651_p1);
    sensitive << ( seq_num );

    SC_METHOD(thread_tmp_2_2_fu_813_p5);
    sensitive << ( tmp_dest_V_2_reg_882 );
    sensitive << ( tmp_10_fu_792_p1 );
    sensitive << ( loc_V_8_trunc_fu_789_p1 );

    SC_METHOD(thread_tmp_2_fu_303_p2);
    sensitive << ( byte_counter_1 );

    SC_METHOD(thread_tmp_30_fu_295_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_31_fu_317_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_32_fu_339_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_33_fu_361_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_34_fu_383_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_35_fu_405_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_36_fu_427_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_37_fu_449_p3);
    sensitive << ( from_app_V_dout );

    SC_METHOD(thread_tmp_38_fu_737_p1);
    sensitive << ( tmp_4_reg_858 );

    SC_METHOD(thread_tmp_3_fu_759_p5);
    sensitive << ( app_packet_in_data_V );
    sensitive << ( app_packet_in_dest_V );
    sensitive << ( app_packet_in_keep_V );
    sensitive << ( tmp_last_V_reg_849 );

    SC_METHOD(thread_tmp_40_fu_724_p1);
    sensitive << ( tmp_4_reg_858 );

    SC_METHOD(thread_tmp_5_2_fu_740_p4);
    sensitive << ( reg_275 );
    sensitive << ( tmp_38_fu_737_p1 );

    SC_METHOD(thread_tmp_5_fu_515_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op13_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( byte_counter_1_new_7_fu_506_p3 );

    SC_METHOD(thread_tmp_639_fu_727_p4);
    sensitive << ( reg_275 );
    sensitive << ( tmp_last_V_2_reg_868 );
    sensitive << ( tmp_40_fu_724_p1 );

    SC_METHOD(thread_tmp_6_fu_780_p4);
    sensitive << ( tmp_id_V_load_new_reg_894 );
    sensitive << ( loc_V_6_trunc_fu_771_p1 );

    SC_METHOD(thread_tmp_750_fu_711_p5);
    sensitive << ( extraPayload_dest_V );
    sensitive << ( p_Result_3_fu_677_p5 );
    sensitive << ( tmp_keep_V_1_fu_703_p3 );

    SC_METHOD(thread_tmp_7_fu_591_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op58_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_s_fu_581_p4 );

    SC_METHOD(thread_tmp_9_fu_597_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( grp_nbreadreq_fu_148_p3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( atn_state_V );
    sensitive << ( tmp_7_fu_591_p2 );
    sensitive << ( p_Result_s_fu_581_p4 );

    SC_METHOD(thread_tmp_keep_V_1_fu_703_p3);
    sensitive << ( extraPayload_keep_V );

    SC_METHOD(thread_tmp_s_fu_655_p2);
    sensitive << ( seq_num );

    SC_METHOD(thread_to_net_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( to_net_V_full_n );
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( ap_predicate_op109_write_state2 );
    sensitive << ( ap_predicate_op112_write_state2 );
    sensitive << ( ap_predicate_op127_write_state2 );
    sensitive << ( ap_predicate_op130_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_to_net_V_din);
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( ap_predicate_op109_write_state2 );
    sensitive << ( ap_predicate_op112_write_state2 );
    sensitive << ( ap_predicate_op127_write_state2 );
    sensitive << ( ap_predicate_op130_write_state2 );
    sensitive << ( tmp_750_fu_711_p5 );
    sensitive << ( tmp_639_fu_727_p4 );
    sensitive << ( tmp_5_2_fu_740_p4 );
    sensitive << ( tmp_3_fu_759_p5 );
    sensitive << ( tmp_2_2_fu_813_p5 );
    sensitive << ( tmp_1_fu_825_p5 );
    sensitive << ( ap_condition_274 );

    SC_METHOD(thread_to_net_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( atn_state_V_load_reg_841 );
    sensitive << ( ap_predicate_op109_write_state2 );
    sensitive << ( ap_predicate_op112_write_state2 );
    sensitive << ( ap_predicate_op127_write_state2 );
    sensitive << ( ap_predicate_op130_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_val_assign_trunc_fu_671_p2);
    sensitive << ( tmp_27_fu_651_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    atn_state_V = "00";
    app_packet_in_data_V = "0000000000000000000000000000000000000000000000000000000000000000";
    byte_counter_1 = "00000000000000000000000000000000";
    last_V = "0";
    app_packet_in_last_V = "0";
    app_packet_in_dest_V = "00000000";
    app_packet_in_keep_V = "00000000";
    extraPayload_dest_V = "00000000";
    seq_num = "00000000000000000000000000000000";
    extraPayload_data_V = "0000000000000000000000000000000000000000000000000000000000000000";
    extraPayload_keep_V = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "app_to_net_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, from_app_V_dout, "(port)from_app_V_dout");
    sc_trace(mVcdFile, from_app_V_empty_n, "(port)from_app_V_empty_n");
    sc_trace(mVcdFile, from_app_V_read, "(port)from_app_V_read");
    sc_trace(mVcdFile, to_net_V_din, "(port)to_net_V_din");
    sc_trace(mVcdFile, to_net_V_full_n, "(port)to_net_V_full_n");
    sc_trace(mVcdFile, to_net_V_write, "(port)to_net_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, atn_state_V_load_load_fu_279_p1, "atn_state_V_load_load_fu_279_p1");
    sc_trace(mVcdFile, last_V_load_load_fu_287_p1, "last_V_load_load_fu_287_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_148_p3, "grp_nbreadreq_fu_148_p3");
    sc_trace(mVcdFile, ap_predicate_op13_read_state1, "ap_predicate_op13_read_state1");
    sc_trace(mVcdFile, ap_predicate_op58_read_state1, "ap_predicate_op58_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, atn_state_V_load_reg_841, "atn_state_V_load_reg_841");
    sc_trace(mVcdFile, last_V_load_reg_845, "last_V_load_reg_845");
    sc_trace(mVcdFile, tmp_8_reg_854, "tmp_8_reg_854");
    sc_trace(mVcdFile, tmp_5_reg_864, "tmp_5_reg_864");
    sc_trace(mVcdFile, ap_predicate_op109_write_state2, "ap_predicate_op109_write_state2");
    sc_trace(mVcdFile, ap_predicate_op112_write_state2, "ap_predicate_op112_write_state2");
    sc_trace(mVcdFile, tmp_reg_873, "tmp_reg_873");
    sc_trace(mVcdFile, tmp_7_reg_899, "tmp_7_reg_899");
    sc_trace(mVcdFile, tmp_9_reg_903, "tmp_9_reg_903");
    sc_trace(mVcdFile, ap_predicate_op127_write_state2, "ap_predicate_op127_write_state2");
    sc_trace(mVcdFile, ap_predicate_op130_write_state2, "ap_predicate_op130_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, atn_state_V, "atn_state_V");
    sc_trace(mVcdFile, app_packet_in_data_V, "app_packet_in_data_V");
    sc_trace(mVcdFile, byte_counter_1, "byte_counter_1");
    sc_trace(mVcdFile, last_V, "last_V");
    sc_trace(mVcdFile, app_packet_in_last_V, "app_packet_in_last_V");
    sc_trace(mVcdFile, app_packet_in_dest_V, "app_packet_in_dest_V");
    sc_trace(mVcdFile, app_packet_in_keep_V, "app_packet_in_keep_V");
    sc_trace(mVcdFile, extraPayload_dest_V, "extraPayload_dest_V");
    sc_trace(mVcdFile, seq_num, "seq_num");
    sc_trace(mVcdFile, extraPayload_data_V, "extraPayload_data_V");
    sc_trace(mVcdFile, extraPayload_keep_V, "extraPayload_keep_V");
    sc_trace(mVcdFile, from_app_V_blk_n, "from_app_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, to_net_V_blk_n, "to_net_V_blk_n");
    sc_trace(mVcdFile, reg_275, "reg_275");
    sc_trace(mVcdFile, tmp_last_V_reg_849, "tmp_last_V_reg_849");
    sc_trace(mVcdFile, tmp_4_reg_858, "tmp_4_reg_858");
    sc_trace(mVcdFile, tmp_5_fu_515_p2, "tmp_5_fu_515_p2");
    sc_trace(mVcdFile, tmp_last_V_2_reg_868, "tmp_last_V_2_reg_868");
    sc_trace(mVcdFile, p_Val2_1_fu_539_p1, "p_Val2_1_fu_539_p1");
    sc_trace(mVcdFile, tmp_dest_V_2_reg_882, "tmp_dest_V_2_reg_882");
    sc_trace(mVcdFile, tmp_last_V_1_reg_889, "tmp_last_V_1_reg_889");
    sc_trace(mVcdFile, tmp_id_V_load_new_reg_894, "tmp_id_V_load_new_reg_894");
    sc_trace(mVcdFile, tmp_7_fu_591_p2, "tmp_7_fu_591_p2");
    sc_trace(mVcdFile, tmp_9_fu_597_p2, "tmp_9_fu_597_p2");
    sc_trace(mVcdFile, grp_fu_265_p4, "grp_fu_265_p4");
    sc_trace(mVcdFile, p_Result_5_reg_907, "p_Result_5_reg_907");
    sc_trace(mVcdFile, p_Result_s_15_fu_625_p5, "p_Result_s_15_fu_625_p5");
    sc_trace(mVcdFile, p_Result_s_15_reg_913, "p_Result_s_15_reg_913");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16, "ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_byte_counter_1_flag_s_reg_169, "ap_phi_reg_pp0_iter0_byte_counter_1_flag_s_reg_169");
    sc_trace(mVcdFile, byte_counter_1_flag_7_fu_499_p2, "byte_counter_1_flag_7_fu_499_p2");
    sc_trace(mVcdFile, ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16, "ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198, "ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198");
    sc_trace(mVcdFile, byte_counter_1_new_7_fu_506_p3, "byte_counter_1_new_7_fu_506_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_app_packet_in_data_V_1_reg_226, "ap_phi_reg_pp0_iter0_app_packet_in_data_V_1_reg_226");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_app_packet_in_data_V_1_reg_226, "ap_phi_reg_pp0_iter1_app_packet_in_data_V_1_reg_226");
    sc_trace(mVcdFile, tmp_750_fu_711_p5, "tmp_750_fu_711_p5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_639_fu_727_p4, "tmp_639_fu_727_p4");
    sc_trace(mVcdFile, tmp_5_2_fu_740_p4, "tmp_5_2_fu_740_p4");
    sc_trace(mVcdFile, tmp_3_fu_759_p5, "tmp_3_fu_759_p5");
    sc_trace(mVcdFile, tmp_2_2_fu_813_p5, "tmp_2_2_fu_813_p5");
    sc_trace(mVcdFile, tmp_1_fu_825_p5, "tmp_1_fu_825_p5");
    sc_trace(mVcdFile, tmp_s_fu_655_p2, "tmp_s_fu_655_p2");
    sc_trace(mVcdFile, p_Result_3_fu_677_p5, "p_Result_3_fu_677_p5");
    sc_trace(mVcdFile, p_Result_2_fu_803_p1, "p_Result_2_fu_803_p1");
    sc_trace(mVcdFile, tmp_30_fu_295_p3, "tmp_30_fu_295_p3");
    sc_trace(mVcdFile, tmp_2_fu_303_p2, "tmp_2_fu_303_p2");
    sc_trace(mVcdFile, tmp_18_byte_counter_s_fu_309_p3, "tmp_18_byte_counter_s_fu_309_p3");
    sc_trace(mVcdFile, tmp_31_fu_317_p3, "tmp_31_fu_317_p3");
    sc_trace(mVcdFile, tmp_18_1_fu_325_p2, "tmp_18_1_fu_325_p2");
    sc_trace(mVcdFile, byte_counter_1_new_1_fu_331_p3, "byte_counter_1_new_1_fu_331_p3");
    sc_trace(mVcdFile, tmp_32_fu_339_p3, "tmp_32_fu_339_p3");
    sc_trace(mVcdFile, tmp_18_2_fu_347_p2, "tmp_18_2_fu_347_p2");
    sc_trace(mVcdFile, tmp_18_2_byte_counte_fu_353_p3, "tmp_18_2_byte_counte_fu_353_p3");
    sc_trace(mVcdFile, tmp_33_fu_361_p3, "tmp_33_fu_361_p3");
    sc_trace(mVcdFile, tmp_18_3_fu_369_p2, "tmp_18_3_fu_369_p2");
    sc_trace(mVcdFile, byte_counter_1_new_3_fu_375_p3, "byte_counter_1_new_3_fu_375_p3");
    sc_trace(mVcdFile, tmp_34_fu_383_p3, "tmp_34_fu_383_p3");
    sc_trace(mVcdFile, tmp_18_4_fu_391_p2, "tmp_18_4_fu_391_p2");
    sc_trace(mVcdFile, tmp_18_4_byte_counte_fu_397_p3, "tmp_18_4_byte_counte_fu_397_p3");
    sc_trace(mVcdFile, tmp_35_fu_405_p3, "tmp_35_fu_405_p3");
    sc_trace(mVcdFile, tmp_18_5_fu_413_p2, "tmp_18_5_fu_413_p2");
    sc_trace(mVcdFile, byte_counter_1_new_5_fu_419_p3, "byte_counter_1_new_5_fu_419_p3");
    sc_trace(mVcdFile, tmp_36_fu_427_p3, "tmp_36_fu_427_p3");
    sc_trace(mVcdFile, tmp_18_6_fu_435_p2, "tmp_18_6_fu_435_p2");
    sc_trace(mVcdFile, tmp_18_6_byte_counte_fu_441_p3, "tmp_18_6_byte_counte_fu_441_p3");
    sc_trace(mVcdFile, tmp3_fu_469_p2, "tmp3_fu_469_p2");
    sc_trace(mVcdFile, tmp2_fu_463_p2, "tmp2_fu_463_p2");
    sc_trace(mVcdFile, tmp_37_fu_449_p3, "tmp_37_fu_449_p3");
    sc_trace(mVcdFile, tmp6_fu_487_p2, "tmp6_fu_487_p2");
    sc_trace(mVcdFile, tmp5_fu_481_p2, "tmp5_fu_481_p2");
    sc_trace(mVcdFile, tmp4_fu_493_p2, "tmp4_fu_493_p2");
    sc_trace(mVcdFile, tmp1_fu_475_p2, "tmp1_fu_475_p2");
    sc_trace(mVcdFile, tmp_18_7_fu_457_p2, "tmp_18_7_fu_457_p2");
    sc_trace(mVcdFile, p_Result_s_fu_581_p4, "p_Result_s_fu_581_p4");
    sc_trace(mVcdFile, loc_V_trunc_fu_621_p1, "loc_V_trunc_fu_621_p1");
    sc_trace(mVcdFile, tmp_27_fu_651_p1, "tmp_27_fu_651_p1");
    sc_trace(mVcdFile, val_assign_trunc_fu_671_p2, "val_assign_trunc_fu_671_p2");
    sc_trace(mVcdFile, tmp_keep_V_1_fu_703_p3, "tmp_keep_V_1_fu_703_p3");
    sc_trace(mVcdFile, tmp_40_fu_724_p1, "tmp_40_fu_724_p1");
    sc_trace(mVcdFile, tmp_38_fu_737_p1, "tmp_38_fu_737_p1");
    sc_trace(mVcdFile, loc_V_6_trunc_fu_771_p1, "loc_V_6_trunc_fu_771_p1");
    sc_trace(mVcdFile, tmp_6_fu_780_p4, "tmp_6_fu_780_p4");
    sc_trace(mVcdFile, tmp_10_fu_792_p1, "tmp_10_fu_792_p1");
    sc_trace(mVcdFile, tmp_11_fu_796_p3, "tmp_11_fu_796_p3");
    sc_trace(mVcdFile, loc_V_8_trunc_fu_789_p1, "loc_V_8_trunc_fu_789_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_239, "ap_condition_239");
    sc_trace(mVcdFile, ap_condition_187, "ap_condition_187");
    sc_trace(mVcdFile, ap_condition_145, "ap_condition_145");
    sc_trace(mVcdFile, ap_condition_211, "ap_condition_211");
    sc_trace(mVcdFile, ap_condition_201, "ap_condition_201");
    sc_trace(mVcdFile, ap_condition_126, "ap_condition_126");
    sc_trace(mVcdFile, ap_condition_257, "ap_condition_257");
    sc_trace(mVcdFile, ap_condition_274, "ap_condition_274");
#endif

    }
}

app_to_net::~app_to_net() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void app_to_net::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_126.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_app_packet_in_data_V_1_reg_226 = p_Val2_1_fu_539_p1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_211.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_app_packet_in_data_V_1_reg_226 = p_Result_s_15_fu_625_p5.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_app_packet_in_data_V_1_reg_226 = ap_phi_reg_pp0_iter0_app_packet_in_data_V_1_reg_226.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_591_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_597_p2.read()))) {
        atn_state_V = ap_const_lv2_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(last_V_load_load_fu_287_p1.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_591_p2.read())))) {
        atn_state_V = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_515_p2.read()))) {
        atn_state_V = ap_const_lv2_3;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(atn_state_V_load_load_fu_279_p1.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(atn_state_V_load_load_fu_279_p1.read(), ap_const_lv2_1)))) {
        atn_state_V = ap_const_lv2_2;
    }
    if (esl_seteq<1,1,1>(ap_condition_257.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read())) {
            extraPayload_data_V = p_Result_2_fu_803_p1.read();
        } else if (esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3)) {
            extraPayload_data_V = p_Result_3_fu_677_p5.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_126.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,2,2>(atn_state_V_load_load_fu_279_p1.read(), ap_const_lv2_1)) {
            last_V = app_packet_in_last_V.read();
        } else if (esl_seteq<1,1,1>(ap_condition_187.read(), ap_const_boolean_1)) {
            last_V = from_app_V_dout.read().range(72, 72);
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_257.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read())) {
            seq_num = ap_const_lv32_0;
        } else if (esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3)) {
            seq_num = tmp_s_fu_655_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, atn_state_V_load_reg_841.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_873.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        app_packet_in_data_V = ap_phi_reg_pp0_iter1_app_packet_in_data_V_1_reg_226.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        app_packet_in_dest_V = from_app_V_dout.read().range(71, 64);
        app_packet_in_keep_V = from_app_V_dout.read().range(80, 73);
        app_packet_in_last_V = from_app_V_dout.read().range(72, 72);
        tmp_last_V_1_reg_889 = from_app_V_dout.read().range(72, 72);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        atn_state_V_load_reg_841 = atn_state_V.read();
        last_V_load_reg_845 = last_V.read();
        tmp_last_V_reg_849 = app_packet_in_last_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16.read()))) {
        byte_counter_1 = ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_591_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_597_p2.read()))) {
        extraPayload_dest_V = from_app_V_dout.read().range(71, 64);
        extraPayload_keep_V = ap_const_lv1_1;
        p_Result_5_reg_907 = from_app_V_dout.read().range(92, 89);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_591_p2.read()))) {
        p_Result_s_15_reg_913 = p_Result_s_15_fu_625_p5.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_275 = from_app_V_dout.read().range(80, 73);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_4_reg_858 = from_app_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_5_reg_864 = tmp_5_fu_515_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_7_reg_899 = tmp_7_fu_591_p2.read();
        tmp_dest_V_2_reg_882 = from_app_V_dout.read().range(71, 64);
        tmp_id_V_load_new_reg_894 = from_app_V_dout.read().range(88, 81);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_8_reg_854 =  (sc_lv<1>) (from_app_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_591_p2.read()))) {
        tmp_9_reg_903 = tmp_9_fu_597_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_515_p2.read()))) {
        tmp_last_V_2_reg_868 = from_app_V_dout.read().range(72, 72);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_873 =  (sc_lv<1>) (from_app_V_empty_n.read());
    }
}

void app_to_net::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void app_to_net::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void app_to_net::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_1)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op130_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void app_to_net::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_1)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op130_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void app_to_net::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_1)) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op130_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void app_to_net::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, from_app_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void app_to_net::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
  esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3)) || (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
  esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_1)) || (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, to_net_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op130_write_state2.read())));
}

void app_to_net::thread_ap_condition_126() {
    ap_condition_126 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void app_to_net::thread_ap_condition_145() {
    ap_condition_145 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void app_to_net::thread_ap_condition_187() {
    ap_condition_187 = (esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_515_p2.read()));
}

void app_to_net::thread_ap_condition_201() {
    ap_condition_201 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_591_p2.read()));
}

void app_to_net::thread_ap_condition_211() {
    ap_condition_211 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_591_p2.read()));
}

void app_to_net::thread_ap_condition_239() {
    ap_condition_239 = (esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_515_p2.read()));
}

void app_to_net::thread_ap_condition_257() {
    ap_condition_257 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void app_to_net::thread_ap_condition_274() {
    ap_condition_274 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void app_to_net::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void app_to_net::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void app_to_net::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void app_to_net::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void app_to_net::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void app_to_net::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void app_to_net::thread_ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && 
         esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_515_p2.read()))) {
        ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16 = byte_counter_1_flag_7_fu_499_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(atn_state_V_load_load_fu_279_p1.read(), ap_const_lv2_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_fu_515_p2.read())))) {
        ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16 = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(atn_state_V_load_load_fu_279_p1.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(last_V_load_load_fu_287_p1.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_148_p3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16 = ap_const_lv1_0;
    } else {
        ap_phi_mux_byte_counter_1_flag_s_phi_fu_172_p16 = ap_phi_reg_pp0_iter0_byte_counter_1_flag_s_reg_169.read();
    }
}

void app_to_net::thread_ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16() {
    if (esl_seteq<1,1,1>(ap_condition_145.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_condition_187.read(), ap_const_boolean_1)) {
            ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16 = byte_counter_1_new_7_fu_506_p3.read();
        } else if (esl_seteq<1,1,1>(ap_condition_239.read(), ap_const_boolean_1)) {
            ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16 = ap_const_lv32_0;
        } else if (esl_seteq<1,2,2>(atn_state_V_load_load_fu_279_p1.read(), ap_const_lv2_1)) {
            ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16 = ap_const_lv32_8;
        } else {
            ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16 = ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198.read();
        }
    } else {
        ap_phi_mux_byte_counter_1_new_s_phi_fu_201_p16 = ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198.read();
    }
}

void app_to_net::thread_ap_phi_reg_pp0_iter0_app_packet_in_data_V_1_reg_226() {
    ap_phi_reg_pp0_iter0_app_packet_in_data_V_1_reg_226 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void app_to_net::thread_ap_phi_reg_pp0_iter0_byte_counter_1_flag_s_reg_169() {
    ap_phi_reg_pp0_iter0_byte_counter_1_flag_s_reg_169 =  (sc_lv<1>) ("X");
}

void app_to_net::thread_ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198() {
    ap_phi_reg_pp0_iter0_byte_counter_1_new_s_reg_198 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void app_to_net::thread_ap_predicate_op109_write_state2() {
    ap_predicate_op109_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_2, atn_state_V_load_reg_841.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, last_V_load_reg_845.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_854.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_reg_864.read()));
}

void app_to_net::thread_ap_predicate_op112_write_state2() {
    ap_predicate_op112_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_2, atn_state_V_load_reg_841.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, last_V_load_reg_845.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_854.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_5_reg_864.read()));
}

void app_to_net::thread_ap_predicate_op127_write_state2() {
    ap_predicate_op127_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_0, atn_state_V_load_reg_841.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_873.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_899.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_903.read()));
}

void app_to_net::thread_ap_predicate_op130_write_state2() {
    ap_predicate_op130_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_0, atn_state_V_load_reg_841.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_873.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_reg_899.read()));
}

void app_to_net::thread_ap_predicate_op13_read_state1() {
    ap_predicate_op13_read_state1 = (esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(last_V.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1));
}

void app_to_net::thread_ap_predicate_op58_read_state1() {
    ap_predicate_op58_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_148_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(atn_state_V.read(), ap_const_lv2_0));
}

void app_to_net::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void app_to_net::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void app_to_net::thread_atn_state_V_load_load_fu_279_p1() {
    atn_state_V_load_load_fu_279_p1 = atn_state_V.read();
}

void app_to_net::thread_byte_counter_1_flag_7_fu_499_p2() {
    byte_counter_1_flag_7_fu_499_p2 = (tmp4_fu_493_p2.read() | tmp1_fu_475_p2.read());
}

void app_to_net::thread_byte_counter_1_new_1_fu_331_p3() {
    byte_counter_1_new_1_fu_331_p3 = (!tmp_31_fu_317_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_31_fu_317_p3.read()[0].to_bool())? tmp_18_1_fu_325_p2.read(): tmp_18_byte_counter_s_fu_309_p3.read());
}

void app_to_net::thread_byte_counter_1_new_3_fu_375_p3() {
    byte_counter_1_new_3_fu_375_p3 = (!tmp_33_fu_361_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_33_fu_361_p3.read()[0].to_bool())? tmp_18_3_fu_369_p2.read(): tmp_18_2_byte_counte_fu_353_p3.read());
}

void app_to_net::thread_byte_counter_1_new_5_fu_419_p3() {
    byte_counter_1_new_5_fu_419_p3 = (!tmp_35_fu_405_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_35_fu_405_p3.read()[0].to_bool())? tmp_18_5_fu_413_p2.read(): tmp_18_4_byte_counte_fu_397_p3.read());
}

void app_to_net::thread_byte_counter_1_new_7_fu_506_p3() {
    byte_counter_1_new_7_fu_506_p3 = (!tmp_37_fu_449_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_37_fu_449_p3.read()[0].to_bool())? tmp_18_7_fu_457_p2.read(): tmp_18_6_byte_counte_fu_441_p3.read());
}

void app_to_net::thread_from_app_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        from_app_V_blk_n = from_app_V_empty_n.read();
    } else {
        from_app_V_blk_n = ap_const_logic_1;
    }
}

void app_to_net::thread_from_app_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op13_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op58_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        from_app_V_read = ap_const_logic_1;
    } else {
        from_app_V_read = ap_const_logic_0;
    }
}

void app_to_net::thread_grp_fu_265_p4() {
    grp_fu_265_p4 = from_app_V_dout.read().range(92, 89);
}

void app_to_net::thread_grp_nbreadreq_fu_148_p3() {
    grp_nbreadreq_fu_148_p3 =  (sc_lv<1>) (from_app_V_empty_n.read());
}

void app_to_net::thread_last_V_load_load_fu_287_p1() {
    last_V_load_load_fu_287_p1 = last_V.read();
}

void app_to_net::thread_loc_V_6_trunc_fu_771_p1() {
    loc_V_6_trunc_fu_771_p1 = esl_zext<16,8>(tmp_dest_V_2_reg_882.read());
}

void app_to_net::thread_loc_V_8_trunc_fu_789_p1() {
    loc_V_8_trunc_fu_789_p1 = esl_zext<8,4>(p_Result_5_reg_907.read());
}

void app_to_net::thread_loc_V_trunc_fu_621_p1() {
    loc_V_trunc_fu_621_p1 = esl_zext<8,4>(grp_fu_265_p4.read());
}

void app_to_net::thread_p_Result_2_fu_803_p1() {
    p_Result_2_fu_803_p1 = esl_zext<64,60>(tmp_11_fu_796_p3.read());
}

void app_to_net::thread_p_Result_3_fu_677_p5() {
    p_Result_3_fu_677_p5 = esl_partset<64,64,16,32,32>(extraPayload_data_V.read(), val_assign_trunc_fu_671_p2.read(), ap_const_lv32_20, ap_const_lv32_2F);
}

void app_to_net::thread_p_Result_s_15_fu_625_p5() {
    p_Result_s_15_fu_625_p5 = esl_partset<64,64,8,32,32>(p_Val2_1_fu_539_p1.read(), loc_V_trunc_fu_621_p1.read(), ap_const_lv32_38, ap_const_lv32_3F);
}

void app_to_net::thread_p_Result_s_fu_581_p4() {
    p_Result_s_fu_581_p4 = from_app_V_dout.read().range(96, 93);
}

void app_to_net::thread_p_Val2_1_fu_539_p1() {
    p_Val2_1_fu_539_p1 = from_app_V_dout.read().range(64-1, 0);
}

void app_to_net::thread_tmp1_fu_475_p2() {
    tmp1_fu_475_p2 = (tmp3_fu_469_p2.read() | tmp2_fu_463_p2.read());
}

void app_to_net::thread_tmp2_fu_463_p2() {
    tmp2_fu_463_p2 = (tmp_31_fu_317_p3.read() | tmp_30_fu_295_p3.read());
}

void app_to_net::thread_tmp3_fu_469_p2() {
    tmp3_fu_469_p2 = (tmp_32_fu_339_p3.read() | tmp_33_fu_361_p3.read());
}

void app_to_net::thread_tmp4_fu_493_p2() {
    tmp4_fu_493_p2 = (tmp6_fu_487_p2.read() | tmp5_fu_481_p2.read());
}

void app_to_net::thread_tmp5_fu_481_p2() {
    tmp5_fu_481_p2 = (tmp_34_fu_383_p3.read() | tmp_35_fu_405_p3.read());
}

void app_to_net::thread_tmp6_fu_487_p2() {
    tmp6_fu_487_p2 = (tmp_36_fu_427_p3.read() | tmp_37_fu_449_p3.read());
}

void app_to_net::thread_tmp_10_fu_792_p1() {
    tmp_10_fu_792_p1 = esl_zext<56,48>(tmp_6_fu_780_p4.read());
}

void app_to_net::thread_tmp_11_fu_796_p3() {
    tmp_11_fu_796_p3 = esl_concat<4,56>(p_Result_5_reg_907.read(), tmp_10_fu_792_p1.read());
}

void app_to_net::thread_tmp_18_1_fu_325_p2() {
    tmp_18_1_fu_325_p2 = (!tmp_18_byte_counter_s_fu_309_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_18_byte_counter_s_fu_309_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_18_2_byte_counte_fu_353_p3() {
    tmp_18_2_byte_counte_fu_353_p3 = (!tmp_32_fu_339_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_32_fu_339_p3.read()[0].to_bool())? tmp_18_2_fu_347_p2.read(): byte_counter_1_new_1_fu_331_p3.read());
}

void app_to_net::thread_tmp_18_2_fu_347_p2() {
    tmp_18_2_fu_347_p2 = (!byte_counter_1_new_1_fu_331_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(byte_counter_1_new_1_fu_331_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_18_3_fu_369_p2() {
    tmp_18_3_fu_369_p2 = (!tmp_18_2_byte_counte_fu_353_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_18_2_byte_counte_fu_353_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_18_4_byte_counte_fu_397_p3() {
    tmp_18_4_byte_counte_fu_397_p3 = (!tmp_34_fu_383_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_34_fu_383_p3.read()[0].to_bool())? tmp_18_4_fu_391_p2.read(): byte_counter_1_new_3_fu_375_p3.read());
}

void app_to_net::thread_tmp_18_4_fu_391_p2() {
    tmp_18_4_fu_391_p2 = (!byte_counter_1_new_3_fu_375_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(byte_counter_1_new_3_fu_375_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_18_5_fu_413_p2() {
    tmp_18_5_fu_413_p2 = (!tmp_18_4_byte_counte_fu_397_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_18_4_byte_counte_fu_397_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_18_6_byte_counte_fu_441_p3() {
    tmp_18_6_byte_counte_fu_441_p3 = (!tmp_36_fu_427_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_36_fu_427_p3.read()[0].to_bool())? tmp_18_6_fu_435_p2.read(): byte_counter_1_new_5_fu_419_p3.read());
}

void app_to_net::thread_tmp_18_6_fu_435_p2() {
    tmp_18_6_fu_435_p2 = (!byte_counter_1_new_5_fu_419_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(byte_counter_1_new_5_fu_419_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_18_7_fu_457_p2() {
    tmp_18_7_fu_457_p2 = (!tmp_18_6_byte_counte_fu_441_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_18_6_byte_counte_fu_441_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_18_byte_counter_s_fu_309_p3() {
    tmp_18_byte_counter_s_fu_309_p3 = (!tmp_30_fu_295_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_30_fu_295_p3.read()[0].to_bool())? tmp_2_fu_303_p2.read(): byte_counter_1.read());
}

void app_to_net::thread_tmp_1_fu_825_p5() {
    tmp_1_fu_825_p5 = esl_concat<17,64>(esl_concat<9,8>(esl_concat<1,8>(tmp_last_V_1_reg_889.read(), reg_275.read()), tmp_dest_V_2_reg_882.read()), p_Result_s_15_reg_913.read());
}

void app_to_net::thread_tmp_27_fu_651_p1() {
    tmp_27_fu_651_p1 = seq_num.read().range(16-1, 0);
}

void app_to_net::thread_tmp_2_2_fu_813_p5() {
    tmp_2_2_fu_813_p5 = esl_concat<25,56>(esl_concat<17,8>(esl_concat<9,8>(ap_const_lv9_FF, tmp_dest_V_2_reg_882.read()), loc_V_8_trunc_fu_789_p1.read()), tmp_10_fu_792_p1.read());
}

void app_to_net::thread_tmp_2_fu_303_p2() {
    tmp_2_fu_303_p2 = (!byte_counter_1.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(byte_counter_1.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void app_to_net::thread_tmp_30_fu_295_p3() {
    tmp_30_fu_295_p3 = from_app_V_dout.read().range(73, 73);
}

void app_to_net::thread_tmp_31_fu_317_p3() {
    tmp_31_fu_317_p3 = from_app_V_dout.read().range(74, 74);
}

void app_to_net::thread_tmp_32_fu_339_p3() {
    tmp_32_fu_339_p3 = from_app_V_dout.read().range(75, 75);
}

void app_to_net::thread_tmp_33_fu_361_p3() {
    tmp_33_fu_361_p3 = from_app_V_dout.read().range(76, 76);
}

void app_to_net::thread_tmp_34_fu_383_p3() {
    tmp_34_fu_383_p3 = from_app_V_dout.read().range(77, 77);
}

void app_to_net::thread_tmp_35_fu_405_p3() {
    tmp_35_fu_405_p3 = from_app_V_dout.read().range(78, 78);
}

void app_to_net::thread_tmp_36_fu_427_p3() {
    tmp_36_fu_427_p3 = from_app_V_dout.read().range(79, 79);
}

void app_to_net::thread_tmp_37_fu_449_p3() {
    tmp_37_fu_449_p3 = from_app_V_dout.read().range(80, 80);
}

void app_to_net::thread_tmp_38_fu_737_p1() {
    tmp_38_fu_737_p1 = tmp_4_reg_858.read().range(72-1, 0);
}

void app_to_net::thread_tmp_3_fu_759_p5() {
    tmp_3_fu_759_p5 = esl_concat<17,64>(esl_concat<9,8>(esl_concat<1,8>(tmp_last_V_reg_849.read(), app_packet_in_keep_V.read()), app_packet_in_dest_V.read()), app_packet_in_data_V.read());
}

void app_to_net::thread_tmp_40_fu_724_p1() {
    tmp_40_fu_724_p1 = tmp_4_reg_858.read().range(72-1, 0);
}

void app_to_net::thread_tmp_5_2_fu_740_p4() {
    tmp_5_2_fu_740_p4 = esl_concat<9,72>(esl_concat<1,8>(ap_const_lv1_1, reg_275.read()), tmp_38_fu_737_p1.read());
}

void app_to_net::thread_tmp_5_fu_515_p2() {
    tmp_5_fu_515_p2 = (!byte_counter_1_new_7_fu_506_p3.read().is_01() || !ap_const_lv32_5C8.is_01())? sc_lv<1>(): (sc_bigint<32>(byte_counter_1_new_7_fu_506_p3.read()) > sc_bigint<32>(ap_const_lv32_5C8));
}

void app_to_net::thread_tmp_639_fu_727_p4() {
    tmp_639_fu_727_p4 = esl_concat<9,72>(esl_concat<1,8>(tmp_last_V_2_reg_868.read(), reg_275.read()), tmp_40_fu_724_p1.read());
}

void app_to_net::thread_tmp_6_fu_780_p4() {
    tmp_6_fu_780_p4 = esl_concat<32,16>(esl_concat<24,8>(ap_const_lv24_2, tmp_id_V_load_new_reg_894.read()), loc_V_6_trunc_fu_771_p1.read());
}

void app_to_net::thread_tmp_750_fu_711_p5() {
    tmp_750_fu_711_p5 = esl_concat<17,64>(esl_concat<9,8>(esl_concat<1,8>(ap_const_lv1_0, tmp_keep_V_1_fu_703_p3.read()), extraPayload_dest_V.read()), p_Result_3_fu_677_p5.read());
}

void app_to_net::thread_tmp_7_fu_591_p2() {
    tmp_7_fu_591_p2 = (!p_Result_s_fu_581_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_581_p4.read() == ap_const_lv4_0);
}

void app_to_net::thread_tmp_9_fu_597_p2() {
    tmp_9_fu_597_p2 = (!p_Result_s_fu_581_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_581_p4.read() == ap_const_lv4_1);
}

void app_to_net::thread_tmp_keep_V_1_fu_703_p3() {
    tmp_keep_V_1_fu_703_p3 = (!extraPayload_keep_V.read()[0].is_01())? sc_lv<8>(): ((extraPayload_keep_V.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void app_to_net::thread_tmp_s_fu_655_p2() {
    tmp_s_fu_655_p2 = (!ap_const_lv32_1.is_01() || !seq_num.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(seq_num.read()));
}

void app_to_net::thread_to_net_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op130_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        to_net_V_blk_n = to_net_V_full_n.read();
    } else {
        to_net_V_blk_n = ap_const_logic_1;
    }
}

void app_to_net::thread_to_net_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_274.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op130_write_state2.read())) {
            to_net_V_din = tmp_1_fu_825_p5.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read())) {
            to_net_V_din = tmp_2_2_fu_813_p5.read();
        } else if (esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_1)) {
            to_net_V_din = tmp_3_fu_759_p5.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state2.read())) {
            to_net_V_din = tmp_5_2_fu_740_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state2.read())) {
            to_net_V_din = tmp_639_fu_727_p4.read();
        } else if (esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3)) {
            to_net_V_din = tmp_750_fu_711_p5.read();
        } else {
            to_net_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        to_net_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void app_to_net::thread_to_net_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op109_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op112_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,2,2>(atn_state_V_load_reg_841.read(), ap_const_lv2_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op127_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op130_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        to_net_V_write = ap_const_logic_1;
    } else {
        to_net_V_write = ap_const_logic_0;
    }
}

void app_to_net::thread_val_assign_trunc_fu_671_p2() {
    val_assign_trunc_fu_671_p2 = (!ap_const_lv16_1.is_01() || !tmp_27_fu_651_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_27_fu_651_p1.read()));
}

void app_to_net::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

