// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "net_to_app.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic net_to_app::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic net_to_app::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> net_to_app::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> net_to_app::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool net_to_app::ap_const_boolean_1 = true;
const sc_lv<2> net_to_app::ap_const_lv2_2 = "10";
const sc_lv<1> net_to_app::ap_const_lv1_0 = "0";
const sc_lv<1> net_to_app::ap_const_lv1_1 = "1";
const sc_lv<2> net_to_app::ap_const_lv2_1 = "1";
const sc_lv<2> net_to_app::ap_const_lv2_0 = "00";
const bool net_to_app::ap_const_boolean_0 = false;
const sc_lv<8> net_to_app::ap_const_lv8_0 = "00000000";
const sc_lv<2> net_to_app::ap_const_lv2_3 = "11";
const sc_lv<32> net_to_app::ap_const_lv32_50 = "1010000";
const sc_lv<32> net_to_app::ap_const_lv32_48 = "1001000";
const sc_lv<32> net_to_app::ap_const_lv32_4F = "1001111";
const sc_lv<32> net_to_app::ap_const_lv32_1 = "1";
const sc_lv<32> net_to_app::ap_const_lv32_49 = "1001001";
const sc_lv<32> net_to_app::ap_const_lv32_4A = "1001010";
const sc_lv<32> net_to_app::ap_const_lv32_4B = "1001011";
const sc_lv<32> net_to_app::ap_const_lv32_4C = "1001100";
const sc_lv<32> net_to_app::ap_const_lv32_4D = "1001101";
const sc_lv<32> net_to_app::ap_const_lv32_4E = "1001110";
const sc_lv<32> net_to_app::ap_const_lv32_3C = "111100";
const sc_lv<32> net_to_app::ap_const_lv32_18 = "11000";
const sc_lv<32> net_to_app::ap_const_lv32_1F = "11111";
const sc_lv<8> net_to_app::ap_const_lv8_5 = "101";
const sc_lv<8> net_to_app::ap_const_lv8_4 = "100";
const sc_lv<8> net_to_app::ap_const_lv8_1 = "1";
const sc_lv<8> net_to_app::ap_const_lv8_2 = "10";
const sc_lv<32> net_to_app::ap_const_lv32_10 = "10000";
const sc_lv<32> net_to_app::ap_const_lv32_17 = "10111";
const sc_lv<32> net_to_app::ap_const_lv32_38 = "111000";
const sc_lv<32> net_to_app::ap_const_lv32_3B = "111011";
const sc_lv<36> net_to_app::ap_const_lv36_1 = "1";
const sc_lv<36> net_to_app::ap_const_lv36_0 = "000000000000000000000000000000000000";
const sc_lv<9> net_to_app::ap_const_lv9_1FF = "111111111";

net_to_app::net_to_app(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_net_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op17_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( to_app_V_full_n );
    sensitive << ( ap_predicate_op105_write_state2 );
    sensitive << ( ap_predicate_op110_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_net_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op17_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( to_app_V_full_n );
    sensitive << ( ap_predicate_op105_write_state2 );
    sensitive << ( ap_predicate_op110_write_state2 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( from_net_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op17_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( to_app_V_full_n );
    sensitive << ( ap_predicate_op105_write_state2 );
    sensitive << ( ap_predicate_op110_write_state2 );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( from_net_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op17_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( to_app_V_full_n );
    sensitive << ( ap_predicate_op105_write_state2 );
    sensitive << ( ap_predicate_op110_write_state2 );

    SC_METHOD(thread_ap_condition_236);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( nta_state_V_load_load_fu_218_p1 );
    sensitive << ( last_V_1_load_load_fu_222_p1 );
    sensitive << ( grp_nbreadreq_fu_114_p3 );
    sensitive << ( nta_state_V );
    sensitive << ( last_V_1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135 );
    sensitive << ( tmp_s_fu_542_p2 );
    sensitive << ( byte_counter_flag_s_fu_454_p2 );

    SC_METHOD(thread_ap_phi_mux_byte_counter_new_3_phi_fu_170_p18);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( grp_nbreadreq_fu_114_p3 );
    sensitive << ( nta_state_V );
    sensitive << ( last_V_1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( tmp_s_fu_542_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167 );
    sensitive << ( byte_counter_new_s_fu_461_p3 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167);

    SC_METHOD(thread_ap_predicate_op105_write_state2);
    sensitive << ( nta_state_V_load_reg_682 );
    sensitive << ( last_V_1_load_reg_686 );
    sensitive << ( tmp_1_reg_694 );

    SC_METHOD(thread_ap_predicate_op110_write_state2);
    sensitive << ( nta_state_V_load_reg_682 );
    sensitive << ( tmp_reg_713 );
    sensitive << ( tmp_12_reg_724 );

    SC_METHOD(thread_ap_predicate_op17_read_state1);
    sensitive << ( grp_nbreadreq_fu_114_p3 );
    sensitive << ( nta_state_V );
    sensitive << ( last_V_1 );

    SC_METHOD(thread_ap_predicate_op61_read_state1);
    sensitive << ( grp_nbreadreq_fu_114_p3 );
    sensitive << ( nta_state_V );

    SC_METHOD(thread_ap_predicate_op9_read_state1);
    sensitive << ( grp_nbreadreq_fu_114_p3 );
    sensitive << ( nta_state_V );
    sensitive << ( last_V_1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_byte_counter_flag_s_fu_454_p2);
    sensitive << ( tmp4_fu_448_p2 );
    sensitive << ( tmp1_fu_430_p2 );

    SC_METHOD(thread_byte_counter_new_4_fu_286_p3);
    sensitive << ( tmp_11_byte_counter_s_fu_264_p3 );
    sensitive << ( tmp_17_fu_272_p3 );
    sensitive << ( tmp_11_1_fu_280_p2 );

    SC_METHOD(thread_byte_counter_new_6_fu_330_p3);
    sensitive << ( tmp_11_2_byte_counte_fu_308_p3 );
    sensitive << ( tmp_19_fu_316_p3 );
    sensitive << ( tmp_11_3_fu_324_p2 );

    SC_METHOD(thread_byte_counter_new_8_fu_374_p3);
    sensitive << ( tmp_11_4_byte_counte_fu_352_p3 );
    sensitive << ( tmp_21_fu_360_p3 );
    sensitive << ( tmp_11_5_fu_368_p2 );

    SC_METHOD(thread_byte_counter_new_s_fu_461_p3);
    sensitive << ( tmp_11_6_byte_counte_fu_396_p3 );
    sensitive << ( tmp_23_fu_404_p3 );
    sensitive << ( tmp_11_7_fu_412_p2 );

    SC_METHOD(thread_envlp_out_id_V_fu_646_p4);
    sensitive << ( tmp28_reg_717 );

    SC_METHOD(thread_from_net_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( from_net_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op17_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_from_net_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( ap_predicate_op17_read_state1 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_nbreadreq_fu_114_p3);
    sensitive << ( from_net_V_empty_n );

    SC_METHOD(thread_last_V_1_load_load_fu_222_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( last_V_1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_nta_state_V_load_load_fu_218_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( nta_state_V );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_p_Result_2_fu_574_p4);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_p_Result_9_fu_655_p4);
    sensitive << ( tmp28_reg_717 );

    SC_METHOD(thread_p_Result_s_14_fu_584_p3);
    sensitive << ( p_Result_2_fu_574_p4 );

    SC_METHOD(thread_p_Result_s_fu_490_p4);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_packetOut_data_V_fu_236_p1);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_packetOut_dest_V_fu_620_p1);
    sensitive << ( dest_V );

    SC_METHOD(thread_storemerge_fu_476_p3);
    sensitive << ( tmp_4_fu_470_p2 );

    SC_METHOD(thread_tmp1_fu_430_p2);
    sensitive << ( tmp3_fu_424_p2 );
    sensitive << ( tmp2_fu_418_p2 );

    SC_METHOD(thread_tmp2_fu_418_p2);
    sensitive << ( tmp_16_fu_250_p3 );
    sensitive << ( tmp_17_fu_272_p3 );

    SC_METHOD(thread_tmp3_fu_424_p2);
    sensitive << ( tmp_18_fu_294_p3 );
    sensitive << ( tmp_19_fu_316_p3 );

    SC_METHOD(thread_tmp4_fu_448_p2);
    sensitive << ( tmp6_fu_442_p2 );
    sensitive << ( tmp5_fu_436_p2 );

    SC_METHOD(thread_tmp5_fu_436_p2);
    sensitive << ( tmp_20_fu_338_p3 );
    sensitive << ( tmp_21_fu_360_p3 );

    SC_METHOD(thread_tmp6_fu_442_p2);
    sensitive << ( tmp_22_fu_382_p3 );
    sensitive << ( tmp_23_fu_404_p3 );

    SC_METHOD(thread_tmp_10_fu_524_p2);
    sensitive << ( tmp_9_fu_518_p2 );
    sensitive << ( tmp_8_fu_512_p2 );

    SC_METHOD(thread_tmp_11_1_fu_280_p2);
    sensitive << ( tmp_11_byte_counter_s_fu_264_p3 );

    SC_METHOD(thread_tmp_11_2_byte_counte_fu_308_p3);
    sensitive << ( byte_counter_new_4_fu_286_p3 );
    sensitive << ( tmp_18_fu_294_p3 );
    sensitive << ( tmp_11_2_fu_302_p2 );

    SC_METHOD(thread_tmp_11_2_fu_302_p2);
    sensitive << ( byte_counter_new_4_fu_286_p3 );

    SC_METHOD(thread_tmp_11_3_fu_324_p2);
    sensitive << ( tmp_11_2_byte_counte_fu_308_p3 );

    SC_METHOD(thread_tmp_11_4_byte_counte_fu_352_p3);
    sensitive << ( byte_counter_new_6_fu_330_p3 );
    sensitive << ( tmp_20_fu_338_p3 );
    sensitive << ( tmp_11_4_fu_346_p2 );

    SC_METHOD(thread_tmp_11_4_fu_346_p2);
    sensitive << ( byte_counter_new_6_fu_330_p3 );

    SC_METHOD(thread_tmp_11_5_fu_368_p2);
    sensitive << ( tmp_11_4_byte_counte_fu_352_p3 );

    SC_METHOD(thread_tmp_11_6_byte_counte_fu_396_p3);
    sensitive << ( byte_counter_new_8_fu_374_p3 );
    sensitive << ( tmp_22_fu_382_p3 );
    sensitive << ( tmp_11_6_fu_390_p2 );

    SC_METHOD(thread_tmp_11_6_fu_390_p2);
    sensitive << ( byte_counter_new_8_fu_374_p3 );

    SC_METHOD(thread_tmp_11_7_fu_412_p2);
    sensitive << ( tmp_11_6_byte_counte_fu_396_p3 );

    SC_METHOD(thread_tmp_11_byte_counter_s_fu_264_p3);
    sensitive << ( byte_counter );
    sensitive << ( tmp_16_fu_250_p3 );
    sensitive << ( tmp_5_fu_258_p2 );

    SC_METHOD(thread_tmp_11_fu_530_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_s_fu_490_p4 );

    SC_METHOD(thread_tmp_12_2_fu_667_p6);
    sensitive << ( p_Result_9_fu_655_p4 );
    sensitive << ( envlp_out_id_V_fu_646_p4 );
    sensitive << ( tmp_13_fu_664_p1 );

    SC_METHOD(thread_tmp_12_fu_536_p2);
    sensitive << ( tmp_11_fu_530_p2 );
    sensitive << ( tmp_10_fu_524_p2 );

    SC_METHOD(thread_tmp_13_fu_664_p1);
    sensitive << ( tmp28_reg_717 );

    SC_METHOD(thread_tmp_16_fu_250_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_17_fu_272_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_18_fu_294_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_19_fu_316_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_20_fu_338_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_21_fu_360_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_22_fu_382_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_23_fu_404_p3);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_26_fu_548_p1);
    sensitive << ( from_net_V_dout );

    SC_METHOD(thread_tmp_315_fu_632_p7);
    sensitive << ( id_V );
    sensitive << ( user_V );
    sensitive << ( packetOut_data_V_reg_698 );
    sensitive << ( packetOut_keep_V_reg_703 );
    sensitive << ( packetOut_last_V_reg_708 );
    sensitive << ( packetOut_dest_V_fu_620_p1 );

    SC_METHOD(thread_tmp_4_fu_470_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( last_V_1_load_load_fu_222_p1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( nta_state_V );
    sensitive << ( byte_counter );

    SC_METHOD(thread_tmp_5_fu_258_p2);
    sensitive << ( byte_counter );

    SC_METHOD(thread_tmp_6_fu_500_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_s_fu_490_p4 );

    SC_METHOD(thread_tmp_7_fu_506_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_s_fu_490_p4 );

    SC_METHOD(thread_tmp_8_fu_512_p2);
    sensitive << ( tmp_7_fu_506_p2 );
    sensitive << ( tmp_6_fu_500_p2 );

    SC_METHOD(thread_tmp_9_fu_518_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_predicate_op61_read_state1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( p_Result_s_fu_490_p4 );

    SC_METHOD(thread_tmp_s_fu_542_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( grp_nbreadreq_fu_114_p3 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( nta_state_V );
    sensitive << ( tmp_12_fu_536_p2 );
    sensitive << ( p_Result_s_fu_490_p4 );

    SC_METHOD(thread_to_app_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( to_app_V_full_n );
    sensitive << ( ap_predicate_op105_write_state2 );
    sensitive << ( ap_predicate_op110_write_state2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_to_app_V_din);
    sensitive << ( ap_predicate_op105_write_state2 );
    sensitive << ( ap_predicate_op110_write_state2 );
    sensitive << ( tmp_315_fu_632_p7 );
    sensitive << ( tmp_12_2_fu_667_p6 );
    sensitive << ( ap_condition_236 );

    SC_METHOD(thread_to_app_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op105_write_state2 );
    sensitive << ( ap_predicate_op110_write_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    nta_state_V = "00";
    last_V_1 = "0";
    byte_counter = "00000000000000000000000000000000";
    dest_V = "0000000000000000";
    id_V = "00000000";
    user_V = "0000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "net_to_app_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, from_net_V_dout, "(port)from_net_V_dout");
    sc_trace(mVcdFile, from_net_V_empty_n, "(port)from_net_V_empty_n");
    sc_trace(mVcdFile, from_net_V_read, "(port)from_net_V_read");
    sc_trace(mVcdFile, to_app_V_din, "(port)to_app_V_din");
    sc_trace(mVcdFile, to_app_V_full_n, "(port)to_app_V_full_n");
    sc_trace(mVcdFile, to_app_V_write, "(port)to_app_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, nta_state_V_load_load_fu_218_p1, "nta_state_V_load_load_fu_218_p1");
    sc_trace(mVcdFile, last_V_1_load_load_fu_222_p1, "last_V_1_load_load_fu_222_p1");
    sc_trace(mVcdFile, grp_nbreadreq_fu_114_p3, "grp_nbreadreq_fu_114_p3");
    sc_trace(mVcdFile, ap_predicate_op9_read_state1, "ap_predicate_op9_read_state1");
    sc_trace(mVcdFile, ap_predicate_op17_read_state1, "ap_predicate_op17_read_state1");
    sc_trace(mVcdFile, ap_predicate_op61_read_state1, "ap_predicate_op61_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, nta_state_V_load_reg_682, "nta_state_V_load_reg_682");
    sc_trace(mVcdFile, last_V_1_load_reg_686, "last_V_1_load_reg_686");
    sc_trace(mVcdFile, tmp_1_reg_694, "tmp_1_reg_694");
    sc_trace(mVcdFile, ap_predicate_op105_write_state2, "ap_predicate_op105_write_state2");
    sc_trace(mVcdFile, tmp_reg_713, "tmp_reg_713");
    sc_trace(mVcdFile, tmp_12_reg_724, "tmp_12_reg_724");
    sc_trace(mVcdFile, ap_predicate_op110_write_state2, "ap_predicate_op110_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, nta_state_V, "nta_state_V");
    sc_trace(mVcdFile, last_V_1, "last_V_1");
    sc_trace(mVcdFile, byte_counter, "byte_counter");
    sc_trace(mVcdFile, dest_V, "dest_V");
    sc_trace(mVcdFile, id_V, "id_V");
    sc_trace(mVcdFile, user_V, "user_V");
    sc_trace(mVcdFile, from_net_V_blk_n, "from_net_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, to_app_V_blk_n, "to_app_V_blk_n");
    sc_trace(mVcdFile, packetOut_data_V_fu_236_p1, "packetOut_data_V_fu_236_p1");
    sc_trace(mVcdFile, packetOut_data_V_reg_698, "packetOut_data_V_reg_698");
    sc_trace(mVcdFile, packetOut_keep_V_reg_703, "packetOut_keep_V_reg_703");
    sc_trace(mVcdFile, packetOut_last_V_reg_708, "packetOut_last_V_reg_708");
    sc_trace(mVcdFile, tmp28_reg_717, "tmp28_reg_717");
    sc_trace(mVcdFile, tmp_12_fu_536_p2, "tmp_12_fu_536_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18, "ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135, "ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135");
    sc_trace(mVcdFile, tmp_s_fu_542_p2, "tmp_s_fu_542_p2");
    sc_trace(mVcdFile, byte_counter_flag_s_fu_454_p2, "byte_counter_flag_s_fu_454_p2");
    sc_trace(mVcdFile, ap_phi_mux_byte_counter_new_3_phi_fu_170_p18, "ap_phi_mux_byte_counter_new_3_phi_fu_170_p18");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167, "ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167");
    sc_trace(mVcdFile, byte_counter_new_s_fu_461_p3, "byte_counter_new_s_fu_461_p3");
    sc_trace(mVcdFile, tmp_315_fu_632_p7, "tmp_315_fu_632_p7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_12_2_fu_667_p6, "tmp_12_2_fu_667_p6");
    sc_trace(mVcdFile, storemerge_fu_476_p3, "storemerge_fu_476_p3");
    sc_trace(mVcdFile, tmp_26_fu_548_p1, "tmp_26_fu_548_p1");
    sc_trace(mVcdFile, p_Result_s_14_fu_584_p3, "p_Result_s_14_fu_584_p3");
    sc_trace(mVcdFile, tmp_16_fu_250_p3, "tmp_16_fu_250_p3");
    sc_trace(mVcdFile, tmp_5_fu_258_p2, "tmp_5_fu_258_p2");
    sc_trace(mVcdFile, tmp_11_byte_counter_s_fu_264_p3, "tmp_11_byte_counter_s_fu_264_p3");
    sc_trace(mVcdFile, tmp_17_fu_272_p3, "tmp_17_fu_272_p3");
    sc_trace(mVcdFile, tmp_11_1_fu_280_p2, "tmp_11_1_fu_280_p2");
    sc_trace(mVcdFile, byte_counter_new_4_fu_286_p3, "byte_counter_new_4_fu_286_p3");
    sc_trace(mVcdFile, tmp_18_fu_294_p3, "tmp_18_fu_294_p3");
    sc_trace(mVcdFile, tmp_11_2_fu_302_p2, "tmp_11_2_fu_302_p2");
    sc_trace(mVcdFile, tmp_11_2_byte_counte_fu_308_p3, "tmp_11_2_byte_counte_fu_308_p3");
    sc_trace(mVcdFile, tmp_19_fu_316_p3, "tmp_19_fu_316_p3");
    sc_trace(mVcdFile, tmp_11_3_fu_324_p2, "tmp_11_3_fu_324_p2");
    sc_trace(mVcdFile, byte_counter_new_6_fu_330_p3, "byte_counter_new_6_fu_330_p3");
    sc_trace(mVcdFile, tmp_20_fu_338_p3, "tmp_20_fu_338_p3");
    sc_trace(mVcdFile, tmp_11_4_fu_346_p2, "tmp_11_4_fu_346_p2");
    sc_trace(mVcdFile, tmp_11_4_byte_counte_fu_352_p3, "tmp_11_4_byte_counte_fu_352_p3");
    sc_trace(mVcdFile, tmp_21_fu_360_p3, "tmp_21_fu_360_p3");
    sc_trace(mVcdFile, tmp_11_5_fu_368_p2, "tmp_11_5_fu_368_p2");
    sc_trace(mVcdFile, byte_counter_new_8_fu_374_p3, "byte_counter_new_8_fu_374_p3");
    sc_trace(mVcdFile, tmp_22_fu_382_p3, "tmp_22_fu_382_p3");
    sc_trace(mVcdFile, tmp_11_6_fu_390_p2, "tmp_11_6_fu_390_p2");
    sc_trace(mVcdFile, tmp_11_6_byte_counte_fu_396_p3, "tmp_11_6_byte_counte_fu_396_p3");
    sc_trace(mVcdFile, tmp3_fu_424_p2, "tmp3_fu_424_p2");
    sc_trace(mVcdFile, tmp2_fu_418_p2, "tmp2_fu_418_p2");
    sc_trace(mVcdFile, tmp_23_fu_404_p3, "tmp_23_fu_404_p3");
    sc_trace(mVcdFile, tmp6_fu_442_p2, "tmp6_fu_442_p2");
    sc_trace(mVcdFile, tmp5_fu_436_p2, "tmp5_fu_436_p2");
    sc_trace(mVcdFile, tmp4_fu_448_p2, "tmp4_fu_448_p2");
    sc_trace(mVcdFile, tmp1_fu_430_p2, "tmp1_fu_430_p2");
    sc_trace(mVcdFile, tmp_11_7_fu_412_p2, "tmp_11_7_fu_412_p2");
    sc_trace(mVcdFile, tmp_4_fu_470_p2, "tmp_4_fu_470_p2");
    sc_trace(mVcdFile, p_Result_s_fu_490_p4, "p_Result_s_fu_490_p4");
    sc_trace(mVcdFile, tmp_7_fu_506_p2, "tmp_7_fu_506_p2");
    sc_trace(mVcdFile, tmp_6_fu_500_p2, "tmp_6_fu_500_p2");
    sc_trace(mVcdFile, tmp_9_fu_518_p2, "tmp_9_fu_518_p2");
    sc_trace(mVcdFile, tmp_8_fu_512_p2, "tmp_8_fu_512_p2");
    sc_trace(mVcdFile, tmp_11_fu_530_p2, "tmp_11_fu_530_p2");
    sc_trace(mVcdFile, tmp_10_fu_524_p2, "tmp_10_fu_524_p2");
    sc_trace(mVcdFile, p_Result_2_fu_574_p4, "p_Result_2_fu_574_p4");
    sc_trace(mVcdFile, packetOut_dest_V_fu_620_p1, "packetOut_dest_V_fu_620_p1");
    sc_trace(mVcdFile, p_Result_9_fu_655_p4, "p_Result_9_fu_655_p4");
    sc_trace(mVcdFile, envlp_out_id_V_fu_646_p4, "envlp_out_id_V_fu_646_p4");
    sc_trace(mVcdFile, tmp_13_fu_664_p1, "tmp_13_fu_664_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_236, "ap_condition_236");
#endif

    }
}

net_to_app::~net_to_app() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void net_to_app::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_fu_536_p2.read()))) {
        last_V_1 = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_542_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        last_V_1 = from_net_V_dout.read().range(80, 80);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_fu_536_p2.read()))) {
        nta_state_V = ap_const_lv2_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(last_V_1_load_load_fu_222_p1.read(), ap_const_lv1_1))) {
        nta_state_V = storemerge_fu_476_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_542_p2.read())))) {
        nta_state_V = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_2) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(last_V_1_load_load_fu_222_p1.read(), ap_const_lv1_1))) {
        nta_state_V = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18.read()))) {
        byte_counter = ap_phi_mux_byte_counter_new_3_phi_fu_170_p18.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_542_p2.read()))) {
        dest_V = tmp_26_fu_548_p1.read();
        id_V = from_net_V_dout.read().range(23, 16);
        user_V = p_Result_s_14_fu_584_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        last_V_1_load_reg_686 = last_V_1.read();
        nta_state_V_load_reg_682 = nta_state_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        packetOut_data_V_reg_698 = packetOut_data_V_fu_236_p1.read();
        packetOut_keep_V_reg_703 = from_net_V_dout.read().range(79, 72);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        packetOut_last_V_reg_708 = from_net_V_dout.read().range(80, 80);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp28_reg_717 = from_net_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_12_reg_724 = tmp_12_fu_536_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(last_V_1.read(), ap_const_lv1_0) && esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_694 =  (sc_lv<1>) (from_net_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_713 =  (sc_lv<1>) (from_net_V_empty_n.read());
    }
}

void net_to_app::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void net_to_app::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void net_to_app::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op105_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void net_to_app::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op105_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void net_to_app::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || (((esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op105_write_state2.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state2.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())));
}

void net_to_app::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, from_net_V_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read())) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void net_to_app::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op105_write_state2.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, to_app_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state2.read())));
}

void net_to_app::thread_ap_condition_236() {
    ap_condition_236 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void net_to_app::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void net_to_app::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void net_to_app::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void net_to_app::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void net_to_app::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void net_to_app::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void net_to_app::thread_ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(last_V_1.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = byte_counter_flag_s_fu_454_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_542_p2.read()))) {
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = ap_const_lv1_1;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,2,2>(nta_state_V_load_load_fu_218_p1.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_114_p3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_fu_536_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_542_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(last_V_1_load_load_fu_222_p1.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(last_V_1.read(), ap_const_lv1_0) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_1) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_114_p3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_2) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = ap_const_lv1_0;
    } else {
        ap_phi_mux_byte_counter_flag_1_phi_fu_138_p18 = ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135.read();
    }
}

void net_to_app::thread_ap_phi_mux_byte_counter_new_3_phi_fu_170_p18() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(last_V_1.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
         esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_byte_counter_new_3_phi_fu_170_p18 = byte_counter_new_s_fu_461_p3.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, grp_nbreadreq_fu_114_p3.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_fu_536_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_542_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && 
                 esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_536_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_542_p2.read())))) {
        ap_phi_mux_byte_counter_new_3_phi_fu_170_p18 = ap_const_lv32_0;
    } else {
        ap_phi_mux_byte_counter_new_3_phi_fu_170_p18 = ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167.read();
    }
}

void net_to_app::thread_ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135() {
    ap_phi_reg_pp0_iter0_byte_counter_flag_1_reg_135 =  (sc_lv<1>) ("X");
}

void net_to_app::thread_ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167() {
    ap_phi_reg_pp0_iter0_byte_counter_new_3_reg_167 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void net_to_app::thread_ap_predicate_op105_write_state2() {
    ap_predicate_op105_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_1, nta_state_V_load_reg_682.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, last_V_1_load_reg_686.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_reg_694.read()));
}

void net_to_app::thread_ap_predicate_op110_write_state2() {
    ap_predicate_op110_write_state2 = (esl_seteq<1,2,2>(ap_const_lv2_0, nta_state_V_load_reg_682.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_713.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_12_reg_724.read()));
}

void net_to_app::thread_ap_predicate_op17_read_state1() {
    ap_predicate_op17_read_state1 = (esl_seteq<1,1,1>(last_V_1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_1));
}

void net_to_app::thread_ap_predicate_op61_read_state1() {
    ap_predicate_op61_read_state1 = (esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_0));
}

void net_to_app::thread_ap_predicate_op9_read_state1() {
    ap_predicate_op9_read_state1 = (esl_seteq<1,2,2>(nta_state_V.read(), ap_const_lv2_2) && esl_seteq<1,1,1>(last_V_1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_nbreadreq_fu_114_p3.read(), ap_const_lv1_1));
}

void net_to_app::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void net_to_app::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void net_to_app::thread_byte_counter_flag_s_fu_454_p2() {
    byte_counter_flag_s_fu_454_p2 = (tmp4_fu_448_p2.read() | tmp1_fu_430_p2.read());
}

void net_to_app::thread_byte_counter_new_4_fu_286_p3() {
    byte_counter_new_4_fu_286_p3 = (!tmp_17_fu_272_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_17_fu_272_p3.read()[0].to_bool())? tmp_11_1_fu_280_p2.read(): tmp_11_byte_counter_s_fu_264_p3.read());
}

void net_to_app::thread_byte_counter_new_6_fu_330_p3() {
    byte_counter_new_6_fu_330_p3 = (!tmp_19_fu_316_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_19_fu_316_p3.read()[0].to_bool())? tmp_11_3_fu_324_p2.read(): tmp_11_2_byte_counte_fu_308_p3.read());
}

void net_to_app::thread_byte_counter_new_8_fu_374_p3() {
    byte_counter_new_8_fu_374_p3 = (!tmp_21_fu_360_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_21_fu_360_p3.read()[0].to_bool())? tmp_11_5_fu_368_p2.read(): tmp_11_4_byte_counte_fu_352_p3.read());
}

void net_to_app::thread_byte_counter_new_s_fu_461_p3() {
    byte_counter_new_s_fu_461_p3 = (!tmp_23_fu_404_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_23_fu_404_p3.read()[0].to_bool())? tmp_11_7_fu_412_p2.read(): tmp_11_6_byte_counte_fu_396_p3.read());
}

void net_to_app::thread_envlp_out_id_V_fu_646_p4() {
    envlp_out_id_V_fu_646_p4 = tmp28_reg_717.read().range(23, 16);
}

void net_to_app::thread_from_net_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        from_net_V_blk_n = from_net_V_empty_n.read();
    } else {
        from_net_V_blk_n = ap_const_logic_1;
    }
}

void net_to_app::thread_from_net_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op17_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op61_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op9_read_state1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        from_net_V_read = ap_const_logic_1;
    } else {
        from_net_V_read = ap_const_logic_0;
    }
}

void net_to_app::thread_grp_nbreadreq_fu_114_p3() {
    grp_nbreadreq_fu_114_p3 =  (sc_lv<1>) (from_net_V_empty_n.read());
}

void net_to_app::thread_last_V_1_load_load_fu_222_p1() {
    last_V_1_load_load_fu_222_p1 = last_V_1.read();
}

void net_to_app::thread_nta_state_V_load_load_fu_218_p1() {
    nta_state_V_load_load_fu_218_p1 = nta_state_V.read();
}

void net_to_app::thread_p_Result_2_fu_574_p4() {
    p_Result_2_fu_574_p4 = from_net_V_dout.read().range(59, 56);
}

void net_to_app::thread_p_Result_9_fu_655_p4() {
    p_Result_9_fu_655_p4 = tmp28_reg_717.read().range(59, 56);
}

void net_to_app::thread_p_Result_s_14_fu_584_p3() {
    p_Result_s_14_fu_584_p3 = esl_concat<36,4>(ap_const_lv36_1, p_Result_2_fu_574_p4.read());
}

void net_to_app::thread_p_Result_s_fu_490_p4() {
    p_Result_s_fu_490_p4 = from_net_V_dout.read().range(31, 24);
}

void net_to_app::thread_packetOut_data_V_fu_236_p1() {
    packetOut_data_V_fu_236_p1 = from_net_V_dout.read().range(64-1, 0);
}

void net_to_app::thread_packetOut_dest_V_fu_620_p1() {
    packetOut_dest_V_fu_620_p1 = dest_V.read().range(8-1, 0);
}

void net_to_app::thread_storemerge_fu_476_p3() {
    storemerge_fu_476_p3 = (!tmp_4_fu_470_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_4_fu_470_p2.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_0);
}

void net_to_app::thread_tmp1_fu_430_p2() {
    tmp1_fu_430_p2 = (tmp3_fu_424_p2.read() | tmp2_fu_418_p2.read());
}

void net_to_app::thread_tmp2_fu_418_p2() {
    tmp2_fu_418_p2 = (tmp_17_fu_272_p3.read() | tmp_16_fu_250_p3.read());
}

void net_to_app::thread_tmp3_fu_424_p2() {
    tmp3_fu_424_p2 = (tmp_18_fu_294_p3.read() | tmp_19_fu_316_p3.read());
}

void net_to_app::thread_tmp4_fu_448_p2() {
    tmp4_fu_448_p2 = (tmp6_fu_442_p2.read() | tmp5_fu_436_p2.read());
}

void net_to_app::thread_tmp5_fu_436_p2() {
    tmp5_fu_436_p2 = (tmp_20_fu_338_p3.read() | tmp_21_fu_360_p3.read());
}

void net_to_app::thread_tmp6_fu_442_p2() {
    tmp6_fu_442_p2 = (tmp_22_fu_382_p3.read() | tmp_23_fu_404_p3.read());
}

void net_to_app::thread_tmp_10_fu_524_p2() {
    tmp_10_fu_524_p2 = (tmp_9_fu_518_p2.read() | tmp_8_fu_512_p2.read());
}

void net_to_app::thread_tmp_11_1_fu_280_p2() {
    tmp_11_1_fu_280_p2 = (!ap_const_lv32_1.is_01() || !tmp_11_byte_counter_s_fu_264_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(tmp_11_byte_counter_s_fu_264_p3.read()));
}

void net_to_app::thread_tmp_11_2_byte_counte_fu_308_p3() {
    tmp_11_2_byte_counte_fu_308_p3 = (!tmp_18_fu_294_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_18_fu_294_p3.read()[0].to_bool())? tmp_11_2_fu_302_p2.read(): byte_counter_new_4_fu_286_p3.read());
}

void net_to_app::thread_tmp_11_2_fu_302_p2() {
    tmp_11_2_fu_302_p2 = (!ap_const_lv32_1.is_01() || !byte_counter_new_4_fu_286_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(byte_counter_new_4_fu_286_p3.read()));
}

void net_to_app::thread_tmp_11_3_fu_324_p2() {
    tmp_11_3_fu_324_p2 = (!ap_const_lv32_1.is_01() || !tmp_11_2_byte_counte_fu_308_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(tmp_11_2_byte_counte_fu_308_p3.read()));
}

void net_to_app::thread_tmp_11_4_byte_counte_fu_352_p3() {
    tmp_11_4_byte_counte_fu_352_p3 = (!tmp_20_fu_338_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_20_fu_338_p3.read()[0].to_bool())? tmp_11_4_fu_346_p2.read(): byte_counter_new_6_fu_330_p3.read());
}

void net_to_app::thread_tmp_11_4_fu_346_p2() {
    tmp_11_4_fu_346_p2 = (!ap_const_lv32_1.is_01() || !byte_counter_new_6_fu_330_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(byte_counter_new_6_fu_330_p3.read()));
}

void net_to_app::thread_tmp_11_5_fu_368_p2() {
    tmp_11_5_fu_368_p2 = (!ap_const_lv32_1.is_01() || !tmp_11_4_byte_counte_fu_352_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(tmp_11_4_byte_counte_fu_352_p3.read()));
}

void net_to_app::thread_tmp_11_6_byte_counte_fu_396_p3() {
    tmp_11_6_byte_counte_fu_396_p3 = (!tmp_22_fu_382_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_22_fu_382_p3.read()[0].to_bool())? tmp_11_6_fu_390_p2.read(): byte_counter_new_8_fu_374_p3.read());
}

void net_to_app::thread_tmp_11_6_fu_390_p2() {
    tmp_11_6_fu_390_p2 = (!ap_const_lv32_1.is_01() || !byte_counter_new_8_fu_374_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(byte_counter_new_8_fu_374_p3.read()));
}

void net_to_app::thread_tmp_11_7_fu_412_p2() {
    tmp_11_7_fu_412_p2 = (!ap_const_lv32_1.is_01() || !tmp_11_6_byte_counte_fu_396_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(tmp_11_6_byte_counte_fu_396_p3.read()));
}

void net_to_app::thread_tmp_11_byte_counter_s_fu_264_p3() {
    tmp_11_byte_counter_s_fu_264_p3 = (!tmp_16_fu_250_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_250_p3.read()[0].to_bool())? tmp_5_fu_258_p2.read(): byte_counter.read());
}

void net_to_app::thread_tmp_11_fu_530_p2() {
    tmp_11_fu_530_p2 = (!p_Result_s_fu_490_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_490_p4.read() == ap_const_lv8_0);
}

void net_to_app::thread_tmp_12_2_fu_667_p6() {
    tmp_12_2_fu_667_p6 = esl_concat<57,72>(esl_concat<48,9>(esl_concat<40,8>(esl_concat<36,4>(ap_const_lv36_0, p_Result_9_fu_655_p4.read()), envlp_out_id_V_fu_646_p4.read()), ap_const_lv9_1FF), tmp_13_fu_664_p1.read());
}

void net_to_app::thread_tmp_12_fu_536_p2() {
    tmp_12_fu_536_p2 = (tmp_11_fu_530_p2.read() | tmp_10_fu_524_p2.read());
}

void net_to_app::thread_tmp_13_fu_664_p1() {
    tmp_13_fu_664_p1 = tmp28_reg_717.read().range(72-1, 0);
}

void net_to_app::thread_tmp_16_fu_250_p3() {
    tmp_16_fu_250_p3 = from_net_V_dout.read().range(72, 72);
}

void net_to_app::thread_tmp_17_fu_272_p3() {
    tmp_17_fu_272_p3 = from_net_V_dout.read().range(73, 73);
}

void net_to_app::thread_tmp_18_fu_294_p3() {
    tmp_18_fu_294_p3 = from_net_V_dout.read().range(74, 74);
}

void net_to_app::thread_tmp_19_fu_316_p3() {
    tmp_19_fu_316_p3 = from_net_V_dout.read().range(75, 75);
}

void net_to_app::thread_tmp_20_fu_338_p3() {
    tmp_20_fu_338_p3 = from_net_V_dout.read().range(76, 76);
}

void net_to_app::thread_tmp_21_fu_360_p3() {
    tmp_21_fu_360_p3 = from_net_V_dout.read().range(77, 77);
}

void net_to_app::thread_tmp_22_fu_382_p3() {
    tmp_22_fu_382_p3 = from_net_V_dout.read().range(78, 78);
}

void net_to_app::thread_tmp_23_fu_404_p3() {
    tmp_23_fu_404_p3 = from_net_V_dout.read().range(79, 79);
}

void net_to_app::thread_tmp_26_fu_548_p1() {
    tmp_26_fu_548_p1 = from_net_V_dout.read().range(16-1, 0);
}

void net_to_app::thread_tmp_315_fu_632_p7() {
    tmp_315_fu_632_p7 = esl_concat<65,64>(esl_concat<57,8>(esl_concat<56,1>(esl_concat<48,8>(esl_concat<40,8>(user_V.read(), id_V.read()), packetOut_keep_V_reg_703.read()), packetOut_last_V_reg_708.read()), packetOut_dest_V_fu_620_p1.read()), packetOut_data_V_reg_698.read());
}

void net_to_app::thread_tmp_4_fu_470_p2() {
    tmp_4_fu_470_p2 = (!byte_counter.read().is_01() || !ap_const_lv32_3C.is_01())? sc_lv<1>(): (sc_bigint<32>(byte_counter.read()) < sc_bigint<32>(ap_const_lv32_3C));
}

void net_to_app::thread_tmp_5_fu_258_p2() {
    tmp_5_fu_258_p2 = (!ap_const_lv32_1.is_01() || !byte_counter.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(byte_counter.read()));
}

void net_to_app::thread_tmp_6_fu_500_p2() {
    tmp_6_fu_500_p2 = (!p_Result_s_fu_490_p4.read().is_01() || !ap_const_lv8_5.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_490_p4.read() == ap_const_lv8_5);
}

void net_to_app::thread_tmp_7_fu_506_p2() {
    tmp_7_fu_506_p2 = (!p_Result_s_fu_490_p4.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_490_p4.read() == ap_const_lv8_4);
}

void net_to_app::thread_tmp_8_fu_512_p2() {
    tmp_8_fu_512_p2 = (tmp_7_fu_506_p2.read() | tmp_6_fu_500_p2.read());
}

void net_to_app::thread_tmp_9_fu_518_p2() {
    tmp_9_fu_518_p2 = (!p_Result_s_fu_490_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_490_p4.read() == ap_const_lv8_1);
}

void net_to_app::thread_tmp_s_fu_542_p2() {
    tmp_s_fu_542_p2 = (!p_Result_s_fu_490_p4.read().is_01() || !ap_const_lv8_2.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_490_p4.read() == ap_const_lv8_2);
}

void net_to_app::thread_to_app_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op105_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        to_app_V_blk_n = to_app_V_full_n.read();
    } else {
        to_app_V_blk_n = ap_const_logic_1;
    }
}

void net_to_app::thread_to_app_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_236.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state2.read())) {
            to_app_V_din = tmp_12_2_fu_667_p6.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op105_write_state2.read())) {
            to_app_V_din = tmp_315_fu_632_p7.read();
        } else {
            to_app_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        to_app_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void net_to_app::thread_to_app_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op105_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op110_write_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        to_app_V_write = ap_const_logic_1;
    } else {
        to_app_V_write = ap_const_logic_0;
    }
}

void net_to_app::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

}

