// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _FNR_HH_
#define _FNR_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct FNR : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<129> > stream_in_V_dout;
    sc_in< sc_logic > stream_in_V_empty_n;
    sc_out< sc_logic > stream_in_V_read;
    sc_out< sc_lv<81> > stream_out_V_din;
    sc_in< sc_logic > stream_out_V_full_n;
    sc_out< sc_logic > stream_out_V_write;


    // Module declarations
    FNR(sc_module_name name);
    SC_HAS_PROCESS(FNR);

    ~FNR();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > stream_in_V_blk_n;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > ap_phi_mux_p_s_phi_fu_154_p4;
    sc_signal< sc_lv<1> > tmp_3_nbreadreq_fu_143_p3;
    sc_signal< sc_logic > stream_out_V_blk_n;
    sc_signal< sc_lv<1> > tmp_2_fu_266_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_2_reg_398;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > p_s_reg_151;
    sc_signal< sc_lv<1> > tmp_3_reg_407;
    sc_signal< sc_lv<1> > p_077_1_reg_161;
    sc_signal< sc_lv<8> > grp_fu_173_p4;
    sc_signal< sc_lv<8> > reg_202;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_predicate_op50_read_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op60_write_state4;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<8> > grp_fu_183_p4;
    sc_signal< sc_lv<8> > reg_206;
    sc_signal< sc_lv<1> > grp_fu_193_p3;
    sc_signal< sc_lv<1> > last_V_1_reg_392;
    sc_signal< sc_lv<64> > currPayloadOut_data_s_fu_334_p3;
    sc_signal< sc_lv<64> > currPayloadOut_data_s_reg_402;
    sc_signal< sc_lv<64> > currPayloadOut_data_1_fu_377_p1;
    sc_signal< sc_lv<64> > currPayloadOut_data_1_reg_411;
    sc_signal< sc_lv<1> > currPayloadOut_last_s_reg_416;
    sc_signal< bool > ap_block_state2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_p_077_1_reg_161;
    sc_signal< sc_lv<81> > tmp_320_fu_342_p5;
    sc_signal< sc_lv<81> > tmp_11_fu_355_p4;
    sc_signal< sc_lv<81> > tmp_210_fu_366_p5;
    sc_signal< sc_lv<81> > tmp_5_fu_381_p5;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<4> > p_Result_s_fu_224_p4;
    sc_signal< sc_lv<4> > p_Result_1_fu_240_p4;
    sc_signal< sc_lv<64> > p_Val2_s_fu_210_p1;
    sc_signal< sc_lv<8> > loc_V_trunc_fu_250_p1;
    sc_signal< sc_lv<16> > p_Result_2_fu_276_p4;
    sc_signal< sc_lv<8> > tmp_id_V_load_new_fu_214_p4;
    sc_signal< sc_lv<16> > loc_V_1_trunc_fu_272_p1;
    sc_signal< sc_lv<48> > tmp_fu_286_p5;
    sc_signal< sc_lv<56> > tmp_6_fu_298_p1;
    sc_signal< sc_lv<60> > tmp_7_fu_302_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_234_p2;
    sc_signal< sc_lv<64> > p_Result_s_46_fu_254_p5;
    sc_signal< sc_lv<1> > sel_tmp1_fu_322_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_328_p2;
    sc_signal< sc_lv<64> > sel_tmp_fu_314_p3;
    sc_signal< sc_lv<64> > p_Result_4_fu_310_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_104;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_50;
    static const sc_lv<32> ap_const_lv32_51;
    static const sc_lv<32> ap_const_lv32_58;
    static const sc_lv<32> ap_const_lv32_5D;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_59;
    static const sc_lv<32> ap_const_lv32_5C;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_61;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<9> ap_const_lv9_1FE;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_104();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_p_s_phi_fu_154_p4();
    void thread_ap_phi_reg_pp0_iter0_p_077_1_reg_161();
    void thread_ap_predicate_op50_read_state3();
    void thread_ap_predicate_op60_write_state4();
    void thread_currPayloadOut_data_1_fu_377_p1();
    void thread_currPayloadOut_data_s_fu_334_p3();
    void thread_grp_fu_173_p4();
    void thread_grp_fu_183_p4();
    void thread_grp_fu_193_p3();
    void thread_loc_V_1_trunc_fu_272_p1();
    void thread_loc_V_trunc_fu_250_p1();
    void thread_p_Result_1_fu_240_p4();
    void thread_p_Result_2_fu_276_p4();
    void thread_p_Result_4_fu_310_p1();
    void thread_p_Result_s_46_fu_254_p5();
    void thread_p_Result_s_fu_224_p4();
    void thread_p_Val2_s_fu_210_p1();
    void thread_sel_tmp1_fu_322_p2();
    void thread_sel_tmp2_fu_328_p2();
    void thread_sel_tmp_fu_314_p3();
    void thread_stream_in_V_blk_n();
    void thread_stream_in_V_read();
    void thread_stream_out_V_blk_n();
    void thread_stream_out_V_din();
    void thread_stream_out_V_write();
    void thread_tmp_11_fu_355_p4();
    void thread_tmp_1_fu_234_p2();
    void thread_tmp_210_fu_366_p5();
    void thread_tmp_2_fu_266_p2();
    void thread_tmp_320_fu_342_p5();
    void thread_tmp_3_nbreadreq_fu_143_p3();
    void thread_tmp_5_fu_381_p5();
    void thread_tmp_6_fu_298_p1();
    void thread_tmp_7_fu_302_p3();
    void thread_tmp_fu_286_p5();
    void thread_tmp_id_V_load_new_fu_214_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
