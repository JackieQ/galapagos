// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FNR,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.703000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=156,HLS_SYN_LUT=290}" *)

module FNR (
        ap_clk,
        ap_rst,
        stream_in_V_dout,
        stream_in_V_empty_n,
        stream_in_V_read,
        stream_out_V_din,
        stream_out_V_full_n,
        stream_out_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input  [128:0] stream_in_V_dout;
input   stream_in_V_empty_n;
output   stream_in_V_read;
output  [80:0] stream_out_V_din;
input   stream_out_V_full_n;
output   stream_out_V_write;

reg stream_in_V_read;
reg[80:0] stream_out_V_din;
reg stream_out_V_write;

reg    stream_in_V_blk_n;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_p_s_phi_fu_154_p4;
wire   [0:0] tmp_3_nbreadreq_fu_143_p3;
reg    stream_out_V_blk_n;
wire   [0:0] tmp_2_fu_266_p2;
wire    ap_CS_fsm_state2;
reg   [0:0] tmp_2_reg_398;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] p_s_reg_151;
reg   [0:0] tmp_3_reg_407;
reg   [0:0] p_077_1_reg_161;
wire   [7:0] grp_fu_173_p4;
reg   [7:0] reg_202;
reg    ap_block_state1;
reg    ap_predicate_op50_read_state3;
reg    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op60_write_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] grp_fu_183_p4;
reg   [7:0] reg_206;
wire   [0:0] grp_fu_193_p3;
reg   [0:0] last_V_1_reg_392;
wire   [63:0] currPayloadOut_data_s_fu_334_p3;
reg   [63:0] currPayloadOut_data_s_reg_402;
wire   [63:0] currPayloadOut_data_1_fu_377_p1;
reg   [63:0] currPayloadOut_data_1_reg_411;
reg   [0:0] currPayloadOut_last_s_reg_416;
reg    ap_block_state2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire   [0:0] ap_phi_reg_pp0_iter0_p_077_1_reg_161;
wire   [80:0] tmp_320_fu_342_p5;
wire   [80:0] tmp_11_fu_355_p4;
wire   [80:0] tmp_210_fu_366_p5;
wire   [80:0] tmp_5_fu_381_p5;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] p_Result_s_fu_224_p4;
wire   [3:0] p_Result_1_fu_240_p4;
wire   [63:0] p_Val2_s_fu_210_p1;
wire   [7:0] loc_V_trunc_fu_250_p1;
wire   [15:0] p_Result_2_fu_276_p4;
wire   [7:0] tmp_id_V_load_new_fu_214_p4;
wire   [15:0] loc_V_1_trunc_fu_272_p1;
wire   [47:0] tmp_fu_286_p5;
wire   [55:0] tmp_6_fu_298_p1;
wire   [59:0] tmp_7_fu_302_p3;
wire   [0:0] tmp_1_fu_234_p2;
wire   [63:0] p_Result_s_46_fu_254_p5;
wire   [0:0] sel_tmp1_fu_322_p2;
wire   [0:0] sel_tmp2_fu_328_p2;
wire   [63:0] sel_tmp_fu_314_p3;
wire   [63:0] p_Result_4_fu_310_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_104;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((tmp_2_reg_398 == 1'd1) & (stream_out_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((tmp_2_reg_398 == 1'd1) & (stream_out_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_104)) begin
        if (((tmp_3_nbreadreq_fu_143_p3 == 1'd0) & (ap_phi_mux_p_s_phi_fu_154_p4 == 1'd0))) begin
            p_077_1_reg_161 <= 1'd0;
        end else if (((tmp_3_nbreadreq_fu_143_p3 == 1'd1) & (ap_phi_mux_p_s_phi_fu_154_p4 == 1'd0))) begin
            p_077_1_reg_161 <= stream_in_V_dout[32'd80];
        end else if ((1'b1 == 1'b1)) begin
            p_077_1_reg_161 <= ap_phi_reg_pp0_iter0_p_077_1_reg_161;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((p_s_reg_151 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_s_reg_151 <= p_077_1_reg_161;
    end else if ((~((tmp_2_reg_398 == 1'd1) & (stream_out_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_s_reg_151 <= last_V_1_reg_392;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        currPayloadOut_data_1_reg_411 <= currPayloadOut_data_1_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
        currPayloadOut_data_s_reg_402 <= currPayloadOut_data_s_fu_334_p3;
        last_V_1_reg_392 <= stream_in_V_dout[32'd80];
        tmp_2_reg_398 <= tmp_2_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        currPayloadOut_last_s_reg_416 <= stream_in_V_dout[32'd80];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state1)))) begin
        reg_202 <= {{stream_in_V_dout[71:64]}};
        reg_206 <= {{stream_in_V_dout[79:72]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_p_s_phi_fu_154_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_407 <= stream_in_V_empty_n;
    end
end

always @ (*) begin
    if ((ap_phi_mux_p_s_phi_fu_154_p4 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((p_s_reg_151 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_s_phi_fu_154_p4 = p_077_1_reg_161;
    end else begin
        ap_phi_mux_p_s_phi_fu_154_p4 = p_s_reg_151;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | ((tmp_3_nbreadreq_fu_143_p3 == 1'd1) & (ap_phi_mux_p_s_phi_fu_154_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_in_V_blk_n = stream_in_V_empty_n;
    end else begin
        stream_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op50_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state1)))) begin
        stream_in_V_read = 1'b1;
    end else begin
        stream_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_398 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_3_reg_407 == 1'd1) & (p_s_reg_151 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_2_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_2_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        stream_out_V_blk_n = stream_out_V_full_n;
    end else begin
        stream_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op60_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        stream_out_V_din = tmp_5_fu_381_p5;
    end else if ((~((tmp_2_reg_398 == 1'd1) & (stream_out_V_full_n == 1'b0)) & (tmp_2_reg_398 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        stream_out_V_din = tmp_210_fu_366_p5;
    end else if ((~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (tmp_2_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        stream_out_V_din = tmp_11_fu_355_p4;
    end else if ((~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (tmp_2_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        stream_out_V_din = tmp_320_fu_342_p5;
    end else begin
        stream_out_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((tmp_2_reg_398 == 1'd1) & (stream_out_V_full_n == 1'b0)) & (tmp_2_reg_398 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op60_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (tmp_2_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | (~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (tmp_2_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        stream_out_V_write = 1'b1;
    end else begin
        stream_out_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((tmp_2_reg_398 == 1'd1) & (stream_out_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_phi_mux_p_s_phi_fu_154_p4 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_phi_mux_p_s_phi_fu_154_p4 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((stream_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op60_write_state4 == 1'b1)) | ((stream_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op50_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((stream_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op60_write_state4 == 1'b1)) | ((stream_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op50_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((stream_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op60_write_state4 == 1'b1)) | ((stream_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op50_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((stream_in_V_empty_n == 1'b0) | ((tmp_2_fu_266_p2 == 1'd0) & (stream_out_V_full_n == 1'b0)) | ((tmp_2_fu_266_p2 == 1'd1) & (stream_out_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2 = ((tmp_2_reg_398 == 1'd1) & (stream_out_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = ((stream_in_V_empty_n == 1'b0) & (ap_predicate_op50_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((stream_out_V_full_n == 1'b0) & (ap_predicate_op60_write_state4 == 1'b1));
end

always @ (*) begin
    ap_condition_104 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_077_1_reg_161 = 'bx;

always @ (*) begin
    ap_predicate_op50_read_state3 = ((tmp_3_nbreadreq_fu_143_p3 == 1'd1) & (ap_phi_mux_p_s_phi_fu_154_p4 == 1'd0));
end

always @ (*) begin
    ap_predicate_op60_write_state4 = ((tmp_3_reg_407 == 1'd1) & (p_s_reg_151 == 1'd0));
end

assign currPayloadOut_data_1_fu_377_p1 = stream_in_V_dout[63:0];

assign currPayloadOut_data_s_fu_334_p3 = ((sel_tmp2_fu_328_p2[0:0] === 1'b1) ? p_Val2_s_fu_210_p1 : sel_tmp_fu_314_p3);

assign grp_fu_173_p4 = {{stream_in_V_dout[71:64]}};

assign grp_fu_183_p4 = {{stream_in_V_dout[79:72]}};

assign grp_fu_193_p3 = stream_in_V_dout[32'd80];

assign loc_V_1_trunc_fu_272_p1 = grp_fu_173_p4;

assign loc_V_trunc_fu_250_p1 = p_Result_1_fu_240_p4;

assign p_Result_1_fu_240_p4 = {{stream_in_V_dout[92:89]}};

assign p_Result_2_fu_276_p4 = {{stream_in_V_dout[112:97]}};

assign p_Result_4_fu_310_p1 = tmp_7_fu_302_p3;

assign p_Result_s_46_fu_254_p5 = {{loc_V_trunc_fu_250_p1}, {p_Val2_s_fu_210_p1[55:0]}};

assign p_Result_s_fu_224_p4 = {{stream_in_V_dout[96:93]}};

assign p_Val2_s_fu_210_p1 = stream_in_V_dout[63:0];

assign sel_tmp1_fu_322_p2 = (tmp_1_fu_234_p2 ^ 1'd1);

assign sel_tmp2_fu_328_p2 = (tmp_2_fu_266_p2 & sel_tmp1_fu_322_p2);

assign sel_tmp_fu_314_p3 = ((tmp_1_fu_234_p2[0:0] === 1'b1) ? p_Result_s_46_fu_254_p5 : p_Val2_s_fu_210_p1);

assign tmp_11_fu_355_p4 = {{{grp_fu_173_p4}, {9'd510}}, {p_Result_4_fu_310_p1}};

assign tmp_1_fu_234_p2 = ((p_Result_s_fu_224_p4 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_210_fu_366_p5 = {{{{reg_202}, {reg_206}}, {last_V_1_reg_392}}, {currPayloadOut_data_s_reg_402}};

assign tmp_2_fu_266_p2 = ((p_Result_s_fu_224_p4 == 4'd1) ? 1'b1 : 1'b0);

assign tmp_320_fu_342_p5 = {{{{grp_fu_173_p4}, {grp_fu_183_p4}}, {grp_fu_193_p3}}, {currPayloadOut_data_s_fu_334_p3}};

assign tmp_3_nbreadreq_fu_143_p3 = stream_in_V_empty_n;

assign tmp_5_fu_381_p5 = {{{{reg_202}, {reg_206}}, {currPayloadOut_last_s_reg_416}}, {currPayloadOut_data_1_reg_411}};

assign tmp_6_fu_298_p1 = tmp_fu_286_p5;

assign tmp_7_fu_302_p3 = {{p_Result_1_fu_240_p4}, {tmp_6_fu_298_p1}};

assign tmp_fu_286_p5 = {{{{p_Result_2_fu_276_p4}, {8'd2}}, {tmp_id_V_load_new_fu_214_p4}}, {loc_V_1_trunc_fu_272_p1}};

assign tmp_id_V_load_new_fu_214_p4 = {{stream_in_V_dout[88:81]}};

endmodule //FNR
