// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "NFR.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic NFR::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic NFR::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> NFR::ap_ST_fsm_state1 = "1";
const sc_lv<5> NFR::ap_ST_fsm_state2 = "10";
const sc_lv<5> NFR::ap_ST_fsm_state3 = "100";
const sc_lv<5> NFR::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<5> NFR::ap_ST_fsm_state6 = "10000";
const bool NFR::ap_const_boolean_1 = true;
const sc_lv<32> NFR::ap_const_lv32_1 = "1";
const sc_lv<32> NFR::ap_const_lv32_3 = "11";
const bool NFR::ap_const_boolean_0 = false;
const sc_lv<1> NFR::ap_const_lv1_1 = "1";
const sc_lv<1> NFR::ap_const_lv1_0 = "0";
const sc_lv<32> NFR::ap_const_lv32_2 = "10";
const sc_lv<32> NFR::ap_const_lv32_4 = "100";
const sc_lv<32> NFR::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> NFR::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> NFR::ap_const_lv32_10 = "10000";
const sc_lv<32> NFR::ap_const_lv32_17 = "10111";
const sc_lv<32> NFR::ap_const_lv32_38 = "111000";
const sc_lv<32> NFR::ap_const_lv32_3B = "111011";
const sc_lv<32> NFR::ap_const_lv32_50 = "1010000";
const sc_lv<32> NFR::ap_const_lv32_18 = "11000";
const sc_lv<32> NFR::ap_const_lv32_1F = "11111";
const sc_lv<8> NFR::ap_const_lv8_5 = "101";
const sc_lv<8> NFR::ap_const_lv8_4 = "100";
const sc_lv<8> NFR::ap_const_lv8_1 = "1";
const sc_lv<8> NFR::ap_const_lv8_0 = "00000000";
const sc_lv<8> NFR::ap_const_lv8_2 = "10";
const sc_lv<64> NFR::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<36> NFR::ap_const_lv36_1 = "1";
const sc_lv<32> NFR::ap_const_lv32_20 = "100000";
const sc_lv<32> NFR::ap_const_lv32_2F = "101111";
const sc_lv<36> NFR::ap_const_lv36_0 = "000000000000000000000000000000000000";
const sc_lv<8> NFR::ap_const_lv8_FF = "11111111";
const sc_lv<32> NFR::ap_const_lv32_48 = "1001000";
const sc_lv<32> NFR::ap_const_lv32_4F = "1001111";
const sc_lv<31> NFR::ap_const_lv31_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<32> NFR::ap_const_lv32_49 = "1001001";
const sc_lv<32> NFR::ap_const_lv32_4A = "1001010";
const sc_lv<32> NFR::ap_const_lv32_4B = "1001011";
const sc_lv<32> NFR::ap_const_lv32_4C = "1001100";
const sc_lv<32> NFR::ap_const_lv32_4D = "1001101";
const sc_lv<32> NFR::ap_const_lv32_4E = "1001110";
const sc_lv<32> NFR::ap_const_lv32_FFFFFFF8 = "11111111111111111111111111111000";

NFR::NFR(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op74_read_state4 );
    sensitive << ( ap_predicate_op113_write_state5 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op74_read_state4 );
    sensitive << ( ap_predicate_op113_write_state5 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op74_read_state4 );
    sensitive << ( ap_predicate_op113_write_state5 );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( ap_predicate_op74_read_state4 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_predicate_op113_write_state5 );

    SC_METHOD(thread_ap_condition_151);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_reg_767 );

    SC_METHOD(thread_ap_condition_87);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_expected_bytes_3_phi_fu_226_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_reg_767 );
    sensitive << ( expected_bytes_3_reg_222 );
    sensitive << ( ap_phi_mux_expected_bytes_6_phi_fu_238_p4 );

    SC_METHOD(thread_ap_phi_mux_expected_bytes_6_phi_fu_238_p4);
    sensitive << ( tmp_2_reg_771 );
    sensitive << ( expected_bytes_3_reg_222 );
    sensitive << ( expected_bytes_4_7_fu_664_p3 );
    sensitive << ( ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234 );
    sensitive << ( ap_condition_151 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234);

    SC_METHOD(thread_ap_predicate_op113_write_state5);
    sensitive << ( tmp_9_reg_767 );
    sensitive << ( tmp_2_reg_771 );

    SC_METHOD(thread_ap_predicate_op45_write_state2);
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( tmp_3_fu_331_p2 );

    SC_METHOD(thread_ap_predicate_op74_read_state4);
    sensitive << ( tmp_9_fu_446_p2 );
    sensitive << ( tmp_2_nbreadreq_fu_187_p3 );

    SC_METHOD(thread_dest_V_1_fu_391_p1);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_expected_bytes_1_fu_387_p1);
    sensitive << ( p_Result_s_53_fu_377_p4 );

    SC_METHOD(thread_expected_bytes_4_1_fu_510_p3);
    sensitive << ( expected_bytes_4_ca_fu_492_p1 );
    sensitive << ( tmp_18_fu_496_p3 );
    sensitive << ( expected_bytes_5_1_fu_504_p2 );

    SC_METHOD(thread_expected_bytes_4_2_fu_532_p3);
    sensitive << ( expected_bytes_4_1_fu_510_p3 );
    sensitive << ( tmp_19_fu_518_p3 );
    sensitive << ( expected_bytes_5_2_fu_526_p2 );

    SC_METHOD(thread_expected_bytes_4_3_fu_554_p3);
    sensitive << ( expected_bytes_4_2_fu_532_p3 );
    sensitive << ( tmp_20_fu_540_p3 );
    sensitive << ( expected_bytes_5_3_fu_548_p2 );

    SC_METHOD(thread_expected_bytes_4_4_fu_626_p3);
    sensitive << ( expected_bytes_4_3_reg_785 );
    sensitive << ( tmp_21_reg_791 );
    sensitive << ( expected_bytes_5_4_fu_621_p2 );

    SC_METHOD(thread_expected_bytes_4_5_fu_638_p3);
    sensitive << ( tmp_22_reg_796 );
    sensitive << ( expected_bytes_4_4_fu_626_p3 );
    sensitive << ( expected_bytes_5_5_fu_632_p2 );

    SC_METHOD(thread_expected_bytes_4_6_fu_651_p3);
    sensitive << ( tmp_23_reg_801 );
    sensitive << ( expected_bytes_4_5_fu_638_p3 );
    sensitive << ( expected_bytes_5_6_fu_645_p2 );

    SC_METHOD(thread_expected_bytes_4_7_fu_664_p3);
    sensitive << ( tmp_24_reg_806 );
    sensitive << ( expected_bytes_4_6_fu_651_p3 );
    sensitive << ( expected_bytes_5_7_fu_658_p2 );

    SC_METHOD(thread_expected_bytes_4_ca_fu_492_p1);
    sensitive << ( expected_bytes_4_s_fu_484_p3 );

    SC_METHOD(thread_expected_bytes_4_s_fu_484_p3);
    sensitive << ( tmp_15_fu_452_p1 );
    sensitive << ( tmp_17_fu_470_p3 );
    sensitive << ( expected_bytes_5_cas_fu_478_p2 );

    SC_METHOD(thread_expected_bytes_5_1_fu_504_p2);
    sensitive << ( expected_bytes_4_ca_fu_492_p1 );

    SC_METHOD(thread_expected_bytes_5_2_fu_526_p2);
    sensitive << ( expected_bytes_4_1_fu_510_p3 );

    SC_METHOD(thread_expected_bytes_5_3_fu_548_p2);
    sensitive << ( expected_bytes_4_2_fu_532_p3 );

    SC_METHOD(thread_expected_bytes_5_4_fu_621_p2);
    sensitive << ( expected_bytes_4_3_reg_785 );

    SC_METHOD(thread_expected_bytes_5_5_fu_632_p2);
    sensitive << ( expected_bytes_4_4_fu_626_p3 );

    SC_METHOD(thread_expected_bytes_5_6_fu_645_p2);
    sensitive << ( expected_bytes_4_5_fu_638_p3 );

    SC_METHOD(thread_expected_bytes_5_7_fu_658_p2);
    sensitive << ( expected_bytes_4_6_fu_651_p3 );

    SC_METHOD(thread_expected_bytes_5_cas_fu_478_p2);
    sensitive << ( tmp_15_fu_452_p1 );

    SC_METHOD(thread_grp_fu_246_p4);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_grp_fu_256_p4);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_p_Result_4_fu_405_p3);
    sensitive << ( grp_fu_256_p4 );

    SC_METHOD(thread_p_Result_6_fu_369_p3);
    sensitive << ( grp_fu_256_p4 );

    SC_METHOD(thread_p_Result_s_53_fu_377_p4);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_p_Result_s_fu_279_p4);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_packetIn_data_V_fu_456_p1);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_packetOut_dest_V_fu_442_p1);
    sensitive << ( dest_V_fu_142 );

    SC_METHOD(thread_stream_in_V_blk_n);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_9_fu_446_p2 );
    sensitive << ( tmp_2_nbreadreq_fu_187_p3 );

    SC_METHOD(thread_stream_in_V_read);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op74_read_state4 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_stream_out_V_blk_n);
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( tmp_3_fu_331_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_reg_767 );
    sensitive << ( tmp_2_reg_771 );

    SC_METHOD(thread_stream_out_V_din);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op113_write_state5 );
    sensitive << ( tmp_213_fu_352_p7 );
    sensitive << ( tmp_11_1_fu_417_p7 );
    sensitive << ( tmp_427_fu_672_p7 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_out_V_write);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_predicate_op113_write_state5 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_10_fu_319_p2);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( p_Result_s_fu_279_p4 );

    SC_METHOD(thread_tmp_11_1_fu_417_p7);
    sensitive << ( grp_fu_246_p4 );
    sensitive << ( grp_fu_256_p4 );
    sensitive << ( tmp_fu_271_p3 );
    sensitive << ( tmp_12_fu_413_p1 );

    SC_METHOD(thread_tmp_11_fu_325_p2);
    sensitive << ( tmp_10_fu_319_p2 );
    sensitive << ( tmp_8_fu_313_p2 );

    SC_METHOD(thread_tmp_12_fu_413_p1);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_tmp_15_fu_452_p1);
    sensitive << ( ap_phi_mux_expected_bytes_3_phi_fu_226_p4 );

    SC_METHOD(thread_tmp_17_fu_470_p3);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_tmp_18_fu_496_p3);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_tmp_19_fu_518_p3);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_tmp_20_fu_540_p3);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_tmp_213_fu_352_p7);
    sensitive << ( tmp_dest_V_fu_154 );
    sensitive << ( tmp_last_V_fu_158 );
    sensitive << ( tmp_keep_V_fu_162 );
    sensitive << ( tmp_id_V_1_fu_166 );
    sensitive << ( tmp_user_V_fu_170 );

    SC_METHOD(thread_tmp_2_nbreadreq_fu_187_p3);
    sensitive << ( stream_in_V_empty_n );

    SC_METHOD(thread_tmp_3_fu_331_p2);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( p_Result_s_fu_279_p4 );

    SC_METHOD(thread_tmp_427_fu_672_p7);
    sensitive << ( packetOut_dest_V_reg_761 );
    sensitive << ( packetIn_data_V_reg_775 );
    sensitive << ( packetIn_keep_V_reg_780 );
    sensitive << ( tmp_id_V_fu_146 );
    sensitive << ( p_Val2_s_fu_150 );
    sensitive << ( tmp_last_V_1_fu_615_p2 );

    SC_METHOD(thread_tmp_4_fu_289_p2);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( p_Result_s_fu_279_p4 );

    SC_METHOD(thread_tmp_5_fu_295_p2);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( p_Result_s_fu_279_p4 );

    SC_METHOD(thread_tmp_6_fu_301_p2);
    sensitive << ( tmp_5_fu_295_p2 );
    sensitive << ( tmp_4_fu_289_p2 );

    SC_METHOD(thread_tmp_7_fu_307_p2);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( p_Result_s_fu_279_p4 );

    SC_METHOD(thread_tmp_8_fu_313_p2);
    sensitive << ( tmp_7_fu_307_p2 );
    sensitive << ( tmp_6_fu_301_p2 );

    SC_METHOD(thread_tmp_9_fu_446_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_expected_bytes_3_phi_fu_226_p4 );

    SC_METHOD(thread_tmp_fu_271_p3);
    sensitive << ( stream_in_V_dout );

    SC_METHOD(thread_tmp_last_V_1_fu_615_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op113_write_state5 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_s_fu_609_p2 );

    SC_METHOD(thread_tmp_s_fu_609_p2);
    sensitive << ( expected_bytes_3_reg_222 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( stream_in_V_empty_n );
    sensitive << ( stream_out_V_full_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_11_fu_325_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op45_write_state2 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "NFR_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, stream_in_V_dout, "(port)stream_in_V_dout");
    sc_trace(mVcdFile, stream_in_V_empty_n, "(port)stream_in_V_empty_n");
    sc_trace(mVcdFile, stream_in_V_read, "(port)stream_in_V_read");
    sc_trace(mVcdFile, stream_out_V_din, "(port)stream_out_V_din");
    sc_trace(mVcdFile, stream_out_V_full_n, "(port)stream_out_V_full_n");
    sc_trace(mVcdFile, stream_out_V_write, "(port)stream_out_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, stream_in_V_blk_n, "stream_in_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_9_fu_446_p2, "tmp_9_fu_446_p2");
    sc_trace(mVcdFile, tmp_2_nbreadreq_fu_187_p3, "tmp_2_nbreadreq_fu_187_p3");
    sc_trace(mVcdFile, stream_out_V_blk_n, "stream_out_V_blk_n");
    sc_trace(mVcdFile, tmp_11_fu_325_p2, "tmp_11_fu_325_p2");
    sc_trace(mVcdFile, tmp_3_fu_331_p2, "tmp_3_fu_331_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_9_reg_767, "tmp_9_reg_767");
    sc_trace(mVcdFile, tmp_2_reg_771, "tmp_2_reg_771");
    sc_trace(mVcdFile, expected_bytes_3_reg_222, "expected_bytes_3_reg_222");
    sc_trace(mVcdFile, expected_bytes_1_fu_387_p1, "expected_bytes_1_fu_387_p1");
    sc_trace(mVcdFile, ap_predicate_op45_write_state2, "ap_predicate_op45_write_state2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, packetOut_dest_V_fu_442_p1, "packetOut_dest_V_fu_442_p1");
    sc_trace(mVcdFile, packetOut_dest_V_reg_761, "packetOut_dest_V_reg_761");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_predicate_op74_read_state4, "ap_predicate_op74_read_state4");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op113_write_state5, "ap_predicate_op113_write_state5");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, packetIn_data_V_fu_456_p1, "packetIn_data_V_fu_456_p1");
    sc_trace(mVcdFile, packetIn_data_V_reg_775, "packetIn_data_V_reg_775");
    sc_trace(mVcdFile, packetIn_keep_V_reg_780, "packetIn_keep_V_reg_780");
    sc_trace(mVcdFile, expected_bytes_4_3_fu_554_p3, "expected_bytes_4_3_fu_554_p3");
    sc_trace(mVcdFile, expected_bytes_4_3_reg_785, "expected_bytes_4_3_reg_785");
    sc_trace(mVcdFile, tmp_21_reg_791, "tmp_21_reg_791");
    sc_trace(mVcdFile, tmp_22_reg_796, "tmp_22_reg_796");
    sc_trace(mVcdFile, tmp_23_reg_801, "tmp_23_reg_801");
    sc_trace(mVcdFile, tmp_24_reg_806, "tmp_24_reg_806");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, expected_bytes_reg_195, "expected_bytes_reg_195");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, expected_bytes_2_reg_207, "expected_bytes_2_reg_207");
    sc_trace(mVcdFile, ap_phi_mux_expected_bytes_3_phi_fu_226_p4, "ap_phi_mux_expected_bytes_3_phi_fu_226_p4");
    sc_trace(mVcdFile, ap_phi_mux_expected_bytes_6_phi_fu_238_p4, "ap_phi_mux_expected_bytes_6_phi_fu_238_p4");
    sc_trace(mVcdFile, expected_bytes_4_7_fu_664_p3, "expected_bytes_4_7_fu_664_p3");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234, "ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234");
    sc_trace(mVcdFile, tmp_213_fu_352_p7, "tmp_213_fu_352_p7");
    sc_trace(mVcdFile, tmp_11_1_fu_417_p7, "tmp_11_1_fu_417_p7");
    sc_trace(mVcdFile, tmp_427_fu_672_p7, "tmp_427_fu_672_p7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, dest_V_fu_142, "dest_V_fu_142");
    sc_trace(mVcdFile, dest_V_1_fu_391_p1, "dest_V_1_fu_391_p1");
    sc_trace(mVcdFile, tmp_id_V_fu_146, "tmp_id_V_fu_146");
    sc_trace(mVcdFile, grp_fu_246_p4, "grp_fu_246_p4");
    sc_trace(mVcdFile, p_Val2_s_fu_150, "p_Val2_s_fu_150");
    sc_trace(mVcdFile, p_Result_6_fu_369_p3, "p_Result_6_fu_369_p3");
    sc_trace(mVcdFile, p_Result_4_fu_405_p3, "p_Result_4_fu_405_p3");
    sc_trace(mVcdFile, tmp_dest_V_fu_154, "tmp_dest_V_fu_154");
    sc_trace(mVcdFile, tmp_last_V_fu_158, "tmp_last_V_fu_158");
    sc_trace(mVcdFile, tmp_last_V_1_fu_615_p2, "tmp_last_V_1_fu_615_p2");
    sc_trace(mVcdFile, tmp_keep_V_fu_162, "tmp_keep_V_fu_162");
    sc_trace(mVcdFile, tmp_id_V_1_fu_166, "tmp_id_V_1_fu_166");
    sc_trace(mVcdFile, tmp_user_V_fu_170, "tmp_user_V_fu_170");
    sc_trace(mVcdFile, p_Result_s_fu_279_p4, "p_Result_s_fu_279_p4");
    sc_trace(mVcdFile, tmp_5_fu_295_p2, "tmp_5_fu_295_p2");
    sc_trace(mVcdFile, tmp_4_fu_289_p2, "tmp_4_fu_289_p2");
    sc_trace(mVcdFile, tmp_7_fu_307_p2, "tmp_7_fu_307_p2");
    sc_trace(mVcdFile, tmp_6_fu_301_p2, "tmp_6_fu_301_p2");
    sc_trace(mVcdFile, tmp_10_fu_319_p2, "tmp_10_fu_319_p2");
    sc_trace(mVcdFile, tmp_8_fu_313_p2, "tmp_8_fu_313_p2");
    sc_trace(mVcdFile, grp_fu_256_p4, "grp_fu_256_p4");
    sc_trace(mVcdFile, p_Result_s_53_fu_377_p4, "p_Result_s_53_fu_377_p4");
    sc_trace(mVcdFile, tmp_fu_271_p3, "tmp_fu_271_p3");
    sc_trace(mVcdFile, tmp_12_fu_413_p1, "tmp_12_fu_413_p1");
    sc_trace(mVcdFile, tmp_15_fu_452_p1, "tmp_15_fu_452_p1");
    sc_trace(mVcdFile, tmp_17_fu_470_p3, "tmp_17_fu_470_p3");
    sc_trace(mVcdFile, expected_bytes_5_cas_fu_478_p2, "expected_bytes_5_cas_fu_478_p2");
    sc_trace(mVcdFile, expected_bytes_4_s_fu_484_p3, "expected_bytes_4_s_fu_484_p3");
    sc_trace(mVcdFile, expected_bytes_4_ca_fu_492_p1, "expected_bytes_4_ca_fu_492_p1");
    sc_trace(mVcdFile, tmp_18_fu_496_p3, "tmp_18_fu_496_p3");
    sc_trace(mVcdFile, expected_bytes_5_1_fu_504_p2, "expected_bytes_5_1_fu_504_p2");
    sc_trace(mVcdFile, expected_bytes_4_1_fu_510_p3, "expected_bytes_4_1_fu_510_p3");
    sc_trace(mVcdFile, tmp_19_fu_518_p3, "tmp_19_fu_518_p3");
    sc_trace(mVcdFile, expected_bytes_5_2_fu_526_p2, "expected_bytes_5_2_fu_526_p2");
    sc_trace(mVcdFile, expected_bytes_4_2_fu_532_p3, "expected_bytes_4_2_fu_532_p3");
    sc_trace(mVcdFile, tmp_20_fu_540_p3, "tmp_20_fu_540_p3");
    sc_trace(mVcdFile, expected_bytes_5_3_fu_548_p2, "expected_bytes_5_3_fu_548_p2");
    sc_trace(mVcdFile, tmp_s_fu_609_p2, "tmp_s_fu_609_p2");
    sc_trace(mVcdFile, expected_bytes_5_4_fu_621_p2, "expected_bytes_5_4_fu_621_p2");
    sc_trace(mVcdFile, expected_bytes_4_4_fu_626_p3, "expected_bytes_4_4_fu_626_p3");
    sc_trace(mVcdFile, expected_bytes_5_5_fu_632_p2, "expected_bytes_5_5_fu_632_p2");
    sc_trace(mVcdFile, expected_bytes_4_5_fu_638_p3, "expected_bytes_4_5_fu_638_p3");
    sc_trace(mVcdFile, expected_bytes_5_6_fu_645_p2, "expected_bytes_5_6_fu_645_p2");
    sc_trace(mVcdFile, expected_bytes_4_6_fu_651_p3, "expected_bytes_4_6_fu_651_p3");
    sc_trace(mVcdFile, expected_bytes_5_7_fu_658_p2, "expected_bytes_5_7_fu_658_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_151, "ap_condition_151");
    sc_trace(mVcdFile, ap_condition_87, "ap_condition_87");
#endif

    }
    mHdltvinHandle.open("NFR.hdltvin.dat");
    mHdltvoutHandle.open("NFR.hdltvout.dat");
}

NFR::~NFR() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void NFR::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(tmp_9_fu_446_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_87.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_331_p2.read()))) {
            expected_bytes_2_reg_207 = expected_bytes_reg_195.read();
        } else if ((esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_331_p2.read()))) {
            expected_bytes_2_reg_207 = expected_bytes_1_fu_387_p1.read();
        } else if (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1)) {
            expected_bytes_2_reg_207 = ap_const_lv32_FFFFFFFF;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_767.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        expected_bytes_3_reg_222 = ap_phi_mux_expected_bytes_6_phi_fu_238_p4.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        expected_bytes_3_reg_222 = expected_bytes_2_reg_207.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_87.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1)) {
            p_Val2_s_fu_150 = p_Result_4_fu_405_p3.read();
        } else if ((esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_331_p2.read()))) {
            p_Val2_s_fu_150 = p_Result_6_fu_369_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_331_p2.read()))) {
        dest_V_fu_142 = dest_V_1_fu_391_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_read_state4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        expected_bytes_4_3_reg_785 = expected_bytes_4_3_fu_554_p3.read();
        packetIn_data_V_reg_775 = packetIn_data_V_fu_456_p1.read();
        packetIn_keep_V_reg_780 = stream_in_V_dout.read().range(79, 72);
        tmp_21_reg_791 = stream_in_V_dout.read().range(76, 76);
        tmp_22_reg_796 = stream_in_V_dout.read().range(77, 77);
        tmp_23_reg_801 = stream_in_V_dout.read().range(78, 78);
        tmp_24_reg_806 = stream_in_V_dout.read().range(79, 79);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        expected_bytes_reg_195 = expected_bytes_3_reg_222.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        packetOut_dest_V_reg_761 = packetOut_dest_V_fu_442_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(tmp_9_fu_446_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_2_reg_771 =  (sc_lv<1>) (stream_in_V_empty_n.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_9_reg_767 = tmp_9_fu_446_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_read_state4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_dest_V_fu_154 = packetOut_dest_V_reg_761.read();
        tmp_keep_V_fu_162 = stream_in_V_dout.read().range(79, 72);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_id_V_1_fu_166 = tmp_id_V_fu_146.read();
        tmp_last_V_fu_158 = tmp_last_V_1_fu_615_p2.read();
        tmp_user_V_fu_170 = p_Val2_s_fu_150.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_0) && 
  !(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0))) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_331_p2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  !(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0)))))) {
        tmp_id_V_fu_146 = stream_in_V_dout.read().range(23, 16);
    }
}

void NFR::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void NFR::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void NFR::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void NFR::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void NFR::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void NFR::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_read_state4.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state5.read())));
}

void NFR::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_read_state4.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state5.read())));
}

void NFR::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_read_state4.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state5.read())));
}

void NFR::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0)));
}

void NFR::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = (esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_read_state4.read()));
}

void NFR::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state5.read()));
}

void NFR::thread_ap_condition_151() {
    ap_condition_151 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_767.read()));
}

void NFR::thread_ap_condition_87() {
    ap_condition_87 = (!(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()));
}

void NFR::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void NFR::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void NFR::thread_ap_phi_mux_expected_bytes_3_phi_fu_226_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_767.read()))) {
        ap_phi_mux_expected_bytes_3_phi_fu_226_p4 = ap_phi_mux_expected_bytes_6_phi_fu_238_p4.read();
    } else {
        ap_phi_mux_expected_bytes_3_phi_fu_226_p4 = expected_bytes_3_reg_222.read();
    }
}

void NFR::thread_ap_phi_mux_expected_bytes_6_phi_fu_238_p4() {
    if (esl_seteq<1,1,1>(ap_condition_151.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_771.read())) {
            ap_phi_mux_expected_bytes_6_phi_fu_238_p4 = expected_bytes_3_reg_222.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_771.read())) {
            ap_phi_mux_expected_bytes_6_phi_fu_238_p4 = expected_bytes_4_7_fu_664_p3.read();
        } else {
            ap_phi_mux_expected_bytes_6_phi_fu_238_p4 = ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234.read();
        }
    } else {
        ap_phi_mux_expected_bytes_6_phi_fu_238_p4 = ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234.read();
    }
}

void NFR::thread_ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234() {
    ap_phi_reg_pp0_iter1_expected_bytes_6_reg_234 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void NFR::thread_ap_predicate_op113_write_state5() {
    ap_predicate_op113_write_state5 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_767.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_771.read()));
}

void NFR::thread_ap_predicate_op45_write_state2() {
    ap_predicate_op45_write_state2 = (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_331_p2.read()));
}

void NFR::thread_ap_predicate_op74_read_state4() {
    ap_predicate_op74_read_state4 = (esl_seteq<1,1,1>(tmp_9_fu_446_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_187_p3.read()));
}

void NFR::thread_dest_V_1_fu_391_p1() {
    dest_V_1_fu_391_p1 = stream_in_V_dout.read().range(16-1, 0);
}

void NFR::thread_expected_bytes_1_fu_387_p1() {
    expected_bytes_1_fu_387_p1 = esl_zext<32,16>(p_Result_s_53_fu_377_p4.read());
}

void NFR::thread_expected_bytes_4_1_fu_510_p3() {
    expected_bytes_4_1_fu_510_p3 = (!tmp_18_fu_496_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_18_fu_496_p3.read()[0].to_bool())? expected_bytes_5_1_fu_504_p2.read(): expected_bytes_4_ca_fu_492_p1.read());
}

void NFR::thread_expected_bytes_4_2_fu_532_p3() {
    expected_bytes_4_2_fu_532_p3 = (!tmp_19_fu_518_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_19_fu_518_p3.read()[0].to_bool())? expected_bytes_5_2_fu_526_p2.read(): expected_bytes_4_1_fu_510_p3.read());
}

void NFR::thread_expected_bytes_4_3_fu_554_p3() {
    expected_bytes_4_3_fu_554_p3 = (!tmp_20_fu_540_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_20_fu_540_p3.read()[0].to_bool())? expected_bytes_5_3_fu_548_p2.read(): expected_bytes_4_2_fu_532_p3.read());
}

void NFR::thread_expected_bytes_4_4_fu_626_p3() {
    expected_bytes_4_4_fu_626_p3 = (!tmp_21_reg_791.read()[0].is_01())? sc_lv<32>(): ((tmp_21_reg_791.read()[0].to_bool())? expected_bytes_5_4_fu_621_p2.read(): expected_bytes_4_3_reg_785.read());
}

void NFR::thread_expected_bytes_4_5_fu_638_p3() {
    expected_bytes_4_5_fu_638_p3 = (!tmp_22_reg_796.read()[0].is_01())? sc_lv<32>(): ((tmp_22_reg_796.read()[0].to_bool())? expected_bytes_5_5_fu_632_p2.read(): expected_bytes_4_4_fu_626_p3.read());
}

void NFR::thread_expected_bytes_4_6_fu_651_p3() {
    expected_bytes_4_6_fu_651_p3 = (!tmp_23_reg_801.read()[0].is_01())? sc_lv<32>(): ((tmp_23_reg_801.read()[0].to_bool())? expected_bytes_5_6_fu_645_p2.read(): expected_bytes_4_5_fu_638_p3.read());
}

void NFR::thread_expected_bytes_4_7_fu_664_p3() {
    expected_bytes_4_7_fu_664_p3 = (!tmp_24_reg_806.read()[0].is_01())? sc_lv<32>(): ((tmp_24_reg_806.read()[0].to_bool())? expected_bytes_5_7_fu_658_p2.read(): expected_bytes_4_6_fu_651_p3.read());
}

void NFR::thread_expected_bytes_4_ca_fu_492_p1() {
    expected_bytes_4_ca_fu_492_p1 = esl_zext<32,31>(expected_bytes_4_s_fu_484_p3.read());
}

void NFR::thread_expected_bytes_4_s_fu_484_p3() {
    expected_bytes_4_s_fu_484_p3 = (!tmp_17_fu_470_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_17_fu_470_p3.read()[0].to_bool())? expected_bytes_5_cas_fu_478_p2.read(): tmp_15_fu_452_p1.read());
}

void NFR::thread_expected_bytes_5_1_fu_504_p2() {
    expected_bytes_5_1_fu_504_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !expected_bytes_4_ca_fu_492_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(expected_bytes_4_ca_fu_492_p1.read()));
}

void NFR::thread_expected_bytes_5_2_fu_526_p2() {
    expected_bytes_5_2_fu_526_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !expected_bytes_4_1_fu_510_p3.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(expected_bytes_4_1_fu_510_p3.read()));
}

void NFR::thread_expected_bytes_5_3_fu_548_p2() {
    expected_bytes_5_3_fu_548_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !expected_bytes_4_2_fu_532_p3.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(expected_bytes_4_2_fu_532_p3.read()));
}

void NFR::thread_expected_bytes_5_4_fu_621_p2() {
    expected_bytes_5_4_fu_621_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !expected_bytes_4_3_reg_785.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(expected_bytes_4_3_reg_785.read()));
}

void NFR::thread_expected_bytes_5_5_fu_632_p2() {
    expected_bytes_5_5_fu_632_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !expected_bytes_4_4_fu_626_p3.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(expected_bytes_4_4_fu_626_p3.read()));
}

void NFR::thread_expected_bytes_5_6_fu_645_p2() {
    expected_bytes_5_6_fu_645_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !expected_bytes_4_5_fu_638_p3.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(expected_bytes_4_5_fu_638_p3.read()));
}

void NFR::thread_expected_bytes_5_7_fu_658_p2() {
    expected_bytes_5_7_fu_658_p2 = (!ap_const_lv32_FFFFFFFF.is_01() || !expected_bytes_4_6_fu_651_p3.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFF) + sc_biguint<32>(expected_bytes_4_6_fu_651_p3.read()));
}

void NFR::thread_expected_bytes_5_cas_fu_478_p2() {
    expected_bytes_5_cas_fu_478_p2 = (!ap_const_lv31_7FFFFFFF.is_01() || !tmp_15_fu_452_p1.read().is_01())? sc_lv<31>(): (sc_bigint<31>(ap_const_lv31_7FFFFFFF) + sc_biguint<31>(tmp_15_fu_452_p1.read()));
}

void NFR::thread_grp_fu_246_p4() {
    grp_fu_246_p4 = stream_in_V_dout.read().range(23, 16);
}

void NFR::thread_grp_fu_256_p4() {
    grp_fu_256_p4 = stream_in_V_dout.read().range(59, 56);
}

void NFR::thread_p_Result_4_fu_405_p3() {
    p_Result_4_fu_405_p3 = esl_concat<36,4>(ap_const_lv36_0, grp_fu_256_p4.read());
}

void NFR::thread_p_Result_6_fu_369_p3() {
    p_Result_6_fu_369_p3 = esl_concat<36,4>(ap_const_lv36_1, grp_fu_256_p4.read());
}

void NFR::thread_p_Result_s_53_fu_377_p4() {
    p_Result_s_53_fu_377_p4 = stream_in_V_dout.read().range(47, 32);
}

void NFR::thread_p_Result_s_fu_279_p4() {
    p_Result_s_fu_279_p4 = stream_in_V_dout.read().range(31, 24);
}

void NFR::thread_packetIn_data_V_fu_456_p1() {
    packetIn_data_V_fu_456_p1 = stream_in_V_dout.read().range(64-1, 0);
}

void NFR::thread_packetOut_dest_V_fu_442_p1() {
    packetOut_dest_V_fu_442_p1 = dest_V_fu_142.read().range(8-1, 0);
}

void NFR::thread_stream_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(tmp_9_fu_446_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_nbreadreq_fu_187_p3.read())))) {
        stream_in_V_blk_n = stream_in_V_empty_n.read();
    } else {
        stream_in_V_blk_n = ap_const_logic_1;
    }
}

void NFR::thread_stream_in_V_read() {
    if (((!(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op74_read_state4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        stream_in_V_read = ap_const_logic_1;
    } else {
        stream_in_V_read = ap_const_logic_0;
    }
}

void NFR::thread_stream_out_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_331_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_reg_767.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_reg_771.read())))) {
        stream_out_V_blk_n = stream_out_V_full_n.read();
    } else {
        stream_out_V_blk_n = ap_const_logic_1;
    }
}

void NFR::thread_stream_out_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        stream_out_V_din = tmp_427_fu_672_p7.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0))))) {
        stream_out_V_din = tmp_11_1_fu_417_p7.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1) && 
                !(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0))))) {
        stream_out_V_din = tmp_213_fu_352_p7.read();
    } else {
        stream_out_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void NFR::thread_stream_out_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
          !(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1) && 
          !(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op113_write_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        stream_out_V_write = ap_const_logic_1;
    } else {
        stream_out_V_write = ap_const_logic_0;
    }
}

void NFR::thread_tmp_10_fu_319_p2() {
    tmp_10_fu_319_p2 = (!p_Result_s_fu_279_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_279_p4.read() == ap_const_lv8_0);
}

void NFR::thread_tmp_11_1_fu_417_p7() {
    tmp_11_1_fu_417_p7 = esl_concat<57,72>(esl_concat<56,1>(esl_concat<48,8>(esl_concat<40,8>(esl_concat<36,4>(ap_const_lv36_0, grp_fu_256_p4.read()), grp_fu_246_p4.read()), ap_const_lv8_FF), tmp_fu_271_p3.read()), tmp_12_fu_413_p1.read());
}

void NFR::thread_tmp_11_fu_325_p2() {
    tmp_11_fu_325_p2 = (tmp_10_fu_319_p2.read() | tmp_8_fu_313_p2.read());
}

void NFR::thread_tmp_12_fu_413_p1() {
    tmp_12_fu_413_p1 = stream_in_V_dout.read().range(72-1, 0);
}

void NFR::thread_tmp_15_fu_452_p1() {
    tmp_15_fu_452_p1 = ap_phi_mux_expected_bytes_3_phi_fu_226_p4.read().range(31-1, 0);
}

void NFR::thread_tmp_17_fu_470_p3() {
    tmp_17_fu_470_p3 = stream_in_V_dout.read().range(72, 72);
}

void NFR::thread_tmp_18_fu_496_p3() {
    tmp_18_fu_496_p3 = stream_in_V_dout.read().range(73, 73);
}

void NFR::thread_tmp_19_fu_518_p3() {
    tmp_19_fu_518_p3 = stream_in_V_dout.read().range(74, 74);
}

void NFR::thread_tmp_20_fu_540_p3() {
    tmp_20_fu_540_p3 = stream_in_V_dout.read().range(75, 75);
}

void NFR::thread_tmp_213_fu_352_p7() {
    tmp_213_fu_352_p7 = esl_concat<65,64>(esl_concat<57,8>(esl_concat<56,1>(esl_concat<48,8>(esl_concat<40,8>(tmp_user_V_fu_170.read(), tmp_id_V_1_fu_166.read()), tmp_keep_V_fu_162.read()), tmp_last_V_fu_158.read()), tmp_dest_V_fu_154.read()), ap_const_lv64_FFFFFFFFFFFFFFFF);
}

void NFR::thread_tmp_2_nbreadreq_fu_187_p3() {
    tmp_2_nbreadreq_fu_187_p3 =  (sc_lv<1>) (stream_in_V_empty_n.read());
}

void NFR::thread_tmp_3_fu_331_p2() {
    tmp_3_fu_331_p2 = (!p_Result_s_fu_279_p4.read().is_01() || !ap_const_lv8_2.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_279_p4.read() == ap_const_lv8_2);
}

void NFR::thread_tmp_427_fu_672_p7() {
    tmp_427_fu_672_p7 = esl_concat<65,64>(esl_concat<57,8>(esl_concat<56,1>(esl_concat<48,8>(esl_concat<40,8>(p_Val2_s_fu_150.read(), tmp_id_V_fu_146.read()), packetIn_keep_V_reg_780.read()), tmp_last_V_1_fu_615_p2.read()), packetOut_dest_V_reg_761.read()), packetIn_data_V_reg_775.read());
}

void NFR::thread_tmp_4_fu_289_p2() {
    tmp_4_fu_289_p2 = (!p_Result_s_fu_279_p4.read().is_01() || !ap_const_lv8_5.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_279_p4.read() == ap_const_lv8_5);
}

void NFR::thread_tmp_5_fu_295_p2() {
    tmp_5_fu_295_p2 = (!p_Result_s_fu_279_p4.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_279_p4.read() == ap_const_lv8_4);
}

void NFR::thread_tmp_6_fu_301_p2() {
    tmp_6_fu_301_p2 = (tmp_5_fu_295_p2.read() | tmp_4_fu_289_p2.read());
}

void NFR::thread_tmp_7_fu_307_p2() {
    tmp_7_fu_307_p2 = (!p_Result_s_fu_279_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_s_fu_279_p4.read() == ap_const_lv8_1);
}

void NFR::thread_tmp_8_fu_313_p2() {
    tmp_8_fu_313_p2 = (tmp_7_fu_307_p2.read() | tmp_6_fu_301_p2.read());
}

void NFR::thread_tmp_9_fu_446_p2() {
    tmp_9_fu_446_p2 = (!ap_phi_mux_expected_bytes_3_phi_fu_226_p4.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_expected_bytes_3_phi_fu_226_p4.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void NFR::thread_tmp_fu_271_p3() {
    tmp_fu_271_p3 = stream_in_V_dout.read().range(80, 80);
}

void NFR::thread_tmp_last_V_1_fu_615_p2() {
    tmp_last_V_1_fu_615_p2 = (!tmp_s_fu_609_p2.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_s_fu_609_p2.read()) < sc_bigint<32>(ap_const_lv32_1));
}

void NFR::thread_tmp_s_fu_609_p2() {
    tmp_s_fu_609_p2 = (!ap_const_lv32_FFFFFFF8.is_01() || !expected_bytes_3_reg_222.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFF8) + sc_biguint<32>(expected_bytes_3_reg_222.read()));
}

void NFR::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_empty_n.read(), ap_const_logic_0) || (esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op45_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(tmp_11_fu_325_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(stream_out_V_full_n.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void NFR::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_V_dout\" :  \"" << stream_in_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_V_empty_n\" :  \"" << stream_in_V_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"stream_in_V_read\" :  \"" << stream_in_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_V_din\" :  \"" << stream_out_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_out_V_full_n\" :  \"" << stream_out_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_V_write\" :  \"" << stream_out_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

