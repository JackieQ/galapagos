-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity packetMaker is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    packetOut_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    packetOut_TVALID : OUT STD_LOGIC;
    packetOut_TREADY : IN STD_LOGIC;
    packetOut_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    packetOut_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
    id_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of packetMaker is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "packetMaker,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.390000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=188,HLS_SYN_LUT=107}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal packetOut_V_packet_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal packetOut_V_packet_V_1_vld_in : STD_LOGIC;
    signal packetOut_V_packet_V_1_vld_out : STD_LOGIC;
    signal packetOut_V_packet_V_1_ack_in : STD_LOGIC;
    signal packetOut_V_packet_V_1_ack_out : STD_LOGIC;
    signal packetOut_V_packet_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal packetOut_V_packet_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal packetOut_V_packet_V_1_sel_rd : STD_LOGIC := '0';
    signal packetOut_V_packet_V_1_sel_wr : STD_LOGIC := '0';
    signal packetOut_V_packet_V_1_sel : STD_LOGIC;
    signal packetOut_V_packet_V_1_load_A : STD_LOGIC;
    signal packetOut_V_packet_V_1_load_B : STD_LOGIC;
    signal packetOut_V_packet_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal packetOut_V_packet_V_1_state_cmp_full : STD_LOGIC;
    signal packetOut_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal packetOut_V_last_V_1_vld_in : STD_LOGIC;
    signal packetOut_V_last_V_1_vld_out : STD_LOGIC;
    signal packetOut_V_last_V_1_ack_in : STD_LOGIC;
    signal packetOut_V_last_V_1_ack_out : STD_LOGIC;
    signal packetOut_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal packetOut_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal packetOut_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal packetOut_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal packetOut_V_last_V_1_sel : STD_LOGIC;
    signal packetOut_V_last_V_1_load_A : STD_LOGIC;
    signal packetOut_V_last_V_1_load_B : STD_LOGIC;
    signal packetOut_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal packetOut_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal packetOut_V_dest_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal packetOut_V_dest_V_1_vld_in : STD_LOGIC;
    signal packetOut_V_dest_V_1_vld_out : STD_LOGIC;
    signal packetOut_V_dest_V_1_ack_out : STD_LOGIC;
    signal packetOut_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal packetOut_V_dest_V_1_sel : STD_LOGIC;
    signal packetOut_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal packet1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal packet1_ce0 : STD_LOGIC;
    signal packet1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal packetOut_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_reg_129 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_reg_129 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_90 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_fu_101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_107_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_last_V_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_143 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_packet_V_fu_124_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);

    component packetMaker_packet1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    packet1_U : component packetMaker_packet1
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => packet1_address0,
        ce0 => packet1_ce0,
        q0 => packet1_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_fu_101_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_fu_101_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_fu_101_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = packetOut_V_dest_V_1_ack_out) and (ap_const_logic_1 = packetOut_V_dest_V_1_vld_out))) then 
                                        packetOut_V_dest_V_1_sel_rd <= not(packetOut_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = packetOut_V_dest_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_dest_V_1_ack_out) and (ap_const_lv2_3 = packetOut_V_dest_V_1_state)) or ((ap_const_logic_0 = packetOut_V_dest_V_1_vld_in) and (ap_const_lv2_2 = packetOut_V_dest_V_1_state)))) then 
                    packetOut_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = packetOut_V_dest_V_1_vld_in) and (ap_const_logic_0 = packetOut_V_dest_V_1_ack_out) and (ap_const_lv2_3 = packetOut_V_dest_V_1_state)) or ((ap_const_logic_0 = packetOut_V_dest_V_1_ack_out) and (ap_const_lv2_1 = packetOut_V_dest_V_1_state)))) then 
                    packetOut_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = packetOut_V_dest_V_1_vld_in) and (ap_const_lv2_2 = packetOut_V_dest_V_1_state)) or ((ap_const_logic_1 = packetOut_V_dest_V_1_ack_out) and (ap_const_lv2_1 = packetOut_V_dest_V_1_state)) or ((ap_const_lv2_3 = packetOut_V_dest_V_1_state) and not(((ap_const_logic_1 = packetOut_V_dest_V_1_vld_in) and (ap_const_logic_0 = packetOut_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = packetOut_V_dest_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_dest_V_1_ack_out)))))) then 
                    packetOut_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    packetOut_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = packetOut_V_last_V_1_ack_out) and (ap_const_logic_1 = packetOut_V_last_V_1_vld_out))) then 
                                        packetOut_V_last_V_1_sel_rd <= not(packetOut_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = packetOut_V_last_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_last_V_1_ack_in))) then 
                                        packetOut_V_last_V_1_sel_wr <= not(packetOut_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = packetOut_V_last_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_last_V_1_ack_out) and (ap_const_lv2_3 = packetOut_V_last_V_1_state)) or ((ap_const_logic_0 = packetOut_V_last_V_1_vld_in) and (ap_const_lv2_2 = packetOut_V_last_V_1_state)))) then 
                    packetOut_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = packetOut_V_last_V_1_vld_in) and (ap_const_logic_0 = packetOut_V_last_V_1_ack_out) and (ap_const_lv2_3 = packetOut_V_last_V_1_state)) or ((ap_const_logic_0 = packetOut_V_last_V_1_ack_out) and (ap_const_lv2_1 = packetOut_V_last_V_1_state)))) then 
                    packetOut_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = packetOut_V_last_V_1_vld_in) and (ap_const_lv2_2 = packetOut_V_last_V_1_state)) or ((ap_const_logic_1 = packetOut_V_last_V_1_ack_out) and (ap_const_lv2_1 = packetOut_V_last_V_1_state)) or ((ap_const_lv2_3 = packetOut_V_last_V_1_state) and not(((ap_const_logic_1 = packetOut_V_last_V_1_vld_in) and (ap_const_logic_0 = packetOut_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = packetOut_V_last_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_last_V_1_ack_out)))))) then 
                    packetOut_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    packetOut_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_packet_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_packet_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = packetOut_V_packet_V_1_ack_out) and (ap_const_logic_1 = packetOut_V_packet_V_1_vld_out))) then 
                                        packetOut_V_packet_V_1_sel_rd <= not(packetOut_V_packet_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_packet_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_packet_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = packetOut_V_packet_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_packet_V_1_ack_in))) then 
                                        packetOut_V_packet_V_1_sel_wr <= not(packetOut_V_packet_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    packetOut_V_packet_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                packetOut_V_packet_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = packetOut_V_packet_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_packet_V_1_ack_out) and (packetOut_V_packet_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = packetOut_V_packet_V_1_vld_in) and (packetOut_V_packet_V_1_state = ap_const_lv2_2)))) then 
                    packetOut_V_packet_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = packetOut_V_packet_V_1_vld_in) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_out) and (packetOut_V_packet_V_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = packetOut_V_packet_V_1_ack_out) and (packetOut_V_packet_V_1_state = ap_const_lv2_1)))) then 
                    packetOut_V_packet_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = packetOut_V_packet_V_1_vld_in) and (packetOut_V_packet_V_1_state = ap_const_lv2_2)) or ((ap_const_logic_1 = packetOut_V_packet_V_1_ack_out) and (packetOut_V_packet_V_1_state = ap_const_lv2_1)) or ((packetOut_V_packet_V_1_state = ap_const_lv2_3) and not(((ap_const_logic_1 = packetOut_V_packet_V_1_vld_in) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_out))) and not(((ap_const_logic_0 = packetOut_V_packet_V_1_vld_in) and (ap_const_logic_1 = packetOut_V_packet_V_1_ack_out)))))) then 
                    packetOut_V_packet_V_1_state <= ap_const_lv2_3;
                else 
                    packetOut_V_packet_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_reg_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_fu_101_p2))) then 
                i_reg_90 <= i_1_fu_107_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
                i_reg_90 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))))) then
                ap_pipeline_reg_pp0_iter1_exitcond_reg_129 <= exitcond_reg_129;
                exitcond_reg_129 <= exitcond_fu_101_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = packetOut_V_last_V_1_load_A)) then
                packetOut_V_last_V_1_payload_A <= tmp_last_V_reg_143;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = packetOut_V_last_V_1_load_B)) then
                packetOut_V_last_V_1_payload_B <= tmp_last_V_reg_143;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = packetOut_V_packet_V_1_load_A)) then
                packetOut_V_packet_V_1_payload_A <= tmp_packet_V_fu_124_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = packetOut_V_packet_V_1_load_B)) then
                packetOut_V_packet_V_1_payload_B <= tmp_packet_V_fu_124_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_fu_101_p2))) then
                tmp_last_V_reg_143 <= tmp_last_V_fu_118_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, packetOut_V_packet_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_129, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_reg_129, exitcond_fu_101_p2, ap_enable_reg_pp0_iter0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_101_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))) or (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_101_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_done <= ap_const_logic_0;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    exitcond_fu_101_p2 <= "1" when (i_reg_90 = ap_const_lv5_19) else "0";
    i_1_fu_107_p2 <= std_logic_vector(unsigned(i_reg_90) + unsigned(ap_const_lv5_1));
    packet1_address0 <= tmp_fu_113_p1(5 - 1 downto 0);

    packet1_ce0_assign_proc : process(packetOut_V_packet_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_129, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_reg_129, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            packet1_ce0 <= ap_const_logic_1;
        else 
            packet1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    packetOut_TDATA <= packetOut_V_packet_V_1_data_out;

    packetOut_TDATA_blk_n_assign_proc : process(packetOut_V_packet_V_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_129, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_reg_129)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129)))) then 
            packetOut_TDATA_blk_n <= packetOut_V_packet_V_1_state(1);
        else 
            packetOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    packetOut_TDEST <= packetOut_V_dest_V_1_data_out;
    packetOut_TLAST <= packetOut_V_last_V_1_data_out;
    packetOut_TVALID <= packetOut_V_dest_V_1_state(0);
    packetOut_V_dest_V_1_ack_out <= packetOut_TREADY;
    packetOut_V_dest_V_1_data_out <= ap_const_lv8_0;
    packetOut_V_dest_V_1_sel <= packetOut_V_dest_V_1_sel_rd;

    packetOut_V_dest_V_1_vld_in_assign_proc : process(packetOut_V_packet_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_129, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_reg_129)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))))) then 
            packetOut_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            packetOut_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    packetOut_V_dest_V_1_vld_out <= packetOut_V_dest_V_1_state(0);
    packetOut_V_last_V_1_ack_in <= packetOut_V_last_V_1_state(1);
    packetOut_V_last_V_1_ack_out <= packetOut_TREADY;

    packetOut_V_last_V_1_data_out_assign_proc : process(packetOut_V_last_V_1_payload_A, packetOut_V_last_V_1_payload_B, packetOut_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = packetOut_V_last_V_1_sel)) then 
            packetOut_V_last_V_1_data_out <= packetOut_V_last_V_1_payload_B;
        else 
            packetOut_V_last_V_1_data_out <= packetOut_V_last_V_1_payload_A;
        end if; 
    end process;

    packetOut_V_last_V_1_load_A <= (packetOut_V_last_V_1_state_cmp_full and not(packetOut_V_last_V_1_sel_wr));
    packetOut_V_last_V_1_load_B <= (packetOut_V_last_V_1_sel_wr and packetOut_V_last_V_1_state_cmp_full);
    packetOut_V_last_V_1_sel <= packetOut_V_last_V_1_sel_rd;
    packetOut_V_last_V_1_state_cmp_full <= '0' when (packetOut_V_last_V_1_state = ap_const_lv2_1) else '1';

    packetOut_V_last_V_1_vld_in_assign_proc : process(packetOut_V_packet_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_129, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_reg_129)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))))) then 
            packetOut_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            packetOut_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    packetOut_V_last_V_1_vld_out <= packetOut_V_last_V_1_state(0);
    packetOut_V_packet_V_1_ack_in <= packetOut_V_packet_V_1_state(1);
    packetOut_V_packet_V_1_ack_out <= packetOut_TREADY;

    packetOut_V_packet_V_1_data_out_assign_proc : process(packetOut_V_packet_V_1_payload_A, packetOut_V_packet_V_1_payload_B, packetOut_V_packet_V_1_sel)
    begin
        if ((ap_const_logic_1 = packetOut_V_packet_V_1_sel)) then 
            packetOut_V_packet_V_1_data_out <= packetOut_V_packet_V_1_payload_B;
        else 
            packetOut_V_packet_V_1_data_out <= packetOut_V_packet_V_1_payload_A;
        end if; 
    end process;

    packetOut_V_packet_V_1_load_A <= (packetOut_V_packet_V_1_state_cmp_full and not(packetOut_V_packet_V_1_sel_wr));
    packetOut_V_packet_V_1_load_B <= (packetOut_V_packet_V_1_sel_wr and packetOut_V_packet_V_1_state_cmp_full);
    packetOut_V_packet_V_1_sel <= packetOut_V_packet_V_1_sel_rd;
    packetOut_V_packet_V_1_state_cmp_full <= '0' when (packetOut_V_packet_V_1_state = ap_const_lv2_1) else '1';

    packetOut_V_packet_V_1_vld_in_assign_proc : process(packetOut_V_packet_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_129, ap_enable_reg_pp0_iter2, ap_pipeline_reg_pp0_iter1_exitcond_reg_129)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_reg_129) and (ap_const_logic_0 = packetOut_V_packet_V_1_ack_in)))))) then 
            packetOut_V_packet_V_1_vld_in <= ap_const_logic_1;
        else 
            packetOut_V_packet_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    packetOut_V_packet_V_1_vld_out <= packetOut_V_packet_V_1_state(0);
    tmp_fu_113_p1 <= std_logic_vector(resize(unsigned(i_reg_90),64));
    tmp_last_V_fu_118_p2 <= "1" when (i_reg_90 = ap_const_lv5_18) else "0";
        tmp_packet_V_fu_124_p1 <= std_logic_vector(resize(signed(packet1_q0),64));

end behav;
