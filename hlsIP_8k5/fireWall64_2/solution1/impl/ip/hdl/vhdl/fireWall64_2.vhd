-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fireWall64_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TDEST : IN STD_LOGIC_VECTOR (7 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    stream_out_TVALID : OUT STD_LOGIC;
    stream_out_TREADY : IN STD_LOGIC;
    stream_out_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
    stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_garbage_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    stream_garbage_TVALID : OUT STD_LOGIC;
    stream_garbage_TREADY : IN STD_LOGIC;
    stream_garbage_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
    stream_garbage_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    match_in_V : IN STD_LOGIC_VECTOR (0 downto 0);
    match_in_V_ap_vld : IN STD_LOGIC );
end;


architecture behav of fireWall64_2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fireWall64_2,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=480,HLS_SYN_LUT=271}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal stream_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_in_V_data_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_data_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel : STD_LOGIC;
    signal stream_in_V_data_V_0_load_A : STD_LOGIC;
    signal stream_in_V_data_V_0_load_B : STD_LOGIC;
    signal stream_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_in_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_in_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_A : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_B : STD_LOGIC;
    signal stream_in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_last_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel : STD_LOGIC;
    signal stream_in_V_last_V_0_load_A : STD_LOGIC;
    signal stream_in_V_last_V_0_load_B : STD_LOGIC;
    signal stream_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal stream_out_V_data_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_out_V_data_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_data_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_data_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_data_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_data_V_1_sel : STD_LOGIC;
    signal stream_out_V_data_V_1_load_A : STD_LOGIC;
    signal stream_out_V_data_V_1_load_B : STD_LOGIC;
    signal stream_out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_dest_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_out_V_dest_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_dest_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_dest_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_dest_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_out_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_out_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_dest_V_1_sel : STD_LOGIC;
    signal stream_out_V_dest_V_1_load_A : STD_LOGIC;
    signal stream_out_V_dest_V_1_load_B : STD_LOGIC;
    signal stream_out_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_last_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_last_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_last_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_last_V_1_sel : STD_LOGIC;
    signal stream_out_V_last_V_1_load_A : STD_LOGIC;
    signal stream_out_V_last_V_1_load_B : STD_LOGIC;
    signal stream_out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal stream_garbage_V_data_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_garbage_V_data_V_1_vld_in : STD_LOGIC;
    signal stream_garbage_V_data_V_1_vld_out : STD_LOGIC;
    signal stream_garbage_V_data_V_1_ack_in : STD_LOGIC;
    signal stream_garbage_V_data_V_1_ack_out : STD_LOGIC;
    signal stream_garbage_V_data_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_garbage_V_data_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal stream_garbage_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_garbage_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_garbage_V_data_V_1_sel : STD_LOGIC;
    signal stream_garbage_V_data_V_1_load_A : STD_LOGIC;
    signal stream_garbage_V_data_V_1_load_B : STD_LOGIC;
    signal stream_garbage_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_garbage_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_garbage_V_dest_V_1_vld_in : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_vld_out : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_ack_in : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_ack_out : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_garbage_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal stream_garbage_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_garbage_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_garbage_V_dest_V_1_sel : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_load_A : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_load_B : STD_LOGIC;
    signal stream_garbage_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_garbage_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal stream_garbage_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_garbage_V_last_V_1_vld_in : STD_LOGIC;
    signal stream_garbage_V_last_V_1_vld_out : STD_LOGIC;
    signal stream_garbage_V_last_V_1_ack_in : STD_LOGIC;
    signal stream_garbage_V_last_V_1_ack_out : STD_LOGIC;
    signal stream_garbage_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_garbage_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_garbage_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_garbage_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_garbage_V_last_V_1_sel : STD_LOGIC;
    signal stream_garbage_V_last_V_1_load_A : STD_LOGIC;
    signal stream_garbage_V_last_V_1_load_B : STD_LOGIC;
    signal stream_garbage_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_garbage_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal match_in_V_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal match_in_V_in_sig : STD_LOGIC_VECTOR (0 downto 0);
    signal match_in_V_ap_vld_preg : STD_LOGIC := '0';
    signal match_in_V_ap_vld_in_sig : STD_LOGIC;
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal stream_out_TDATA_blk_n : STD_LOGIC;
    signal match_in_V_read_read_fu_58_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal stream_garbage_TDATA_blk_n : STD_LOGIC;
    signal match_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    match_in_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                match_in_V_ap_vld_preg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = match_in_V_ap_vld)) then 
                    match_in_V_ap_vld_preg <= match_in_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    match_in_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                match_in_V_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = match_in_V_ap_vld)) then 
                    match_in_V_preg <= match_in_V;
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_garbage_V_data_V_1_ack_out) and (ap_const_logic_1 = stream_garbage_V_data_V_1_vld_out))) then 
                                        stream_garbage_V_data_V_1_sel_rd <= not(stream_garbage_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_garbage_V_data_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_data_V_1_ack_in))) then 
                                        stream_garbage_V_data_V_1_sel_wr <= not(stream_garbage_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_garbage_V_data_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_data_V_1_ack_out) and (ap_const_lv2_3 = stream_garbage_V_data_V_1_state)) or ((ap_const_logic_0 = stream_garbage_V_data_V_1_vld_in) and (ap_const_lv2_2 = stream_garbage_V_data_V_1_state)))) then 
                    stream_garbage_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_garbage_V_data_V_1_vld_in) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_out) and (ap_const_lv2_3 = stream_garbage_V_data_V_1_state)) or ((ap_const_logic_0 = stream_garbage_V_data_V_1_ack_out) and (ap_const_lv2_1 = stream_garbage_V_data_V_1_state)))) then 
                    stream_garbage_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_garbage_V_data_V_1_vld_in) and (ap_const_lv2_2 = stream_garbage_V_data_V_1_state)) or ((ap_const_logic_1 = stream_garbage_V_data_V_1_ack_out) and (ap_const_lv2_1 = stream_garbage_V_data_V_1_state)) or ((ap_const_lv2_3 = stream_garbage_V_data_V_1_state) and not(((ap_const_logic_1 = stream_garbage_V_data_V_1_vld_in) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = stream_garbage_V_data_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_data_V_1_ack_out)))))) then 
                    stream_garbage_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_garbage_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_garbage_V_dest_V_1_ack_out) and (ap_const_logic_1 = stream_garbage_V_dest_V_1_vld_out))) then 
                                        stream_garbage_V_dest_V_1_sel_rd <= not(stream_garbage_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_garbage_V_dest_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_dest_V_1_ack_in))) then 
                                        stream_garbage_V_dest_V_1_sel_wr <= not(stream_garbage_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_garbage_V_dest_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_dest_V_1_ack_out) and (ap_const_lv2_3 = stream_garbage_V_dest_V_1_state)) or ((ap_const_logic_0 = stream_garbage_V_dest_V_1_vld_in) and (ap_const_lv2_2 = stream_garbage_V_dest_V_1_state)))) then 
                    stream_garbage_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_garbage_V_dest_V_1_vld_in) and (ap_const_logic_0 = stream_garbage_V_dest_V_1_ack_out) and (ap_const_lv2_3 = stream_garbage_V_dest_V_1_state)) or ((ap_const_logic_0 = stream_garbage_V_dest_V_1_ack_out) and (ap_const_lv2_1 = stream_garbage_V_dest_V_1_state)))) then 
                    stream_garbage_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_garbage_V_dest_V_1_vld_in) and (ap_const_lv2_2 = stream_garbage_V_dest_V_1_state)) or ((ap_const_logic_1 = stream_garbage_V_dest_V_1_ack_out) and (ap_const_lv2_1 = stream_garbage_V_dest_V_1_state)) or ((ap_const_lv2_3 = stream_garbage_V_dest_V_1_state) and not(((ap_const_logic_1 = stream_garbage_V_dest_V_1_vld_in) and (ap_const_logic_0 = stream_garbage_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = stream_garbage_V_dest_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_dest_V_1_ack_out)))))) then 
                    stream_garbage_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    stream_garbage_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_garbage_V_last_V_1_ack_out) and (ap_const_logic_1 = stream_garbage_V_last_V_1_vld_out))) then 
                                        stream_garbage_V_last_V_1_sel_rd <= not(stream_garbage_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_garbage_V_last_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_last_V_1_ack_in))) then 
                                        stream_garbage_V_last_V_1_sel_wr <= not(stream_garbage_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_garbage_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_garbage_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_garbage_V_last_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_last_V_1_ack_out) and (ap_const_lv2_3 = stream_garbage_V_last_V_1_state)) or ((ap_const_logic_0 = stream_garbage_V_last_V_1_vld_in) and (ap_const_lv2_2 = stream_garbage_V_last_V_1_state)))) then 
                    stream_garbage_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_garbage_V_last_V_1_vld_in) and (ap_const_logic_0 = stream_garbage_V_last_V_1_ack_out) and (ap_const_lv2_3 = stream_garbage_V_last_V_1_state)) or ((ap_const_logic_0 = stream_garbage_V_last_V_1_ack_out) and (ap_const_lv2_1 = stream_garbage_V_last_V_1_state)))) then 
                    stream_garbage_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_garbage_V_last_V_1_vld_in) and (ap_const_lv2_2 = stream_garbage_V_last_V_1_state)) or ((ap_const_logic_1 = stream_garbage_V_last_V_1_ack_out) and (ap_const_lv2_1 = stream_garbage_V_last_V_1_state)) or ((ap_const_lv2_3 = stream_garbage_V_last_V_1_state) and not(((ap_const_logic_1 = stream_garbage_V_last_V_1_vld_in) and (ap_const_logic_0 = stream_garbage_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = stream_garbage_V_last_V_1_vld_in) and (ap_const_logic_1 = stream_garbage_V_last_V_1_ack_out)))))) then 
                    stream_garbage_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_garbage_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_in_V_data_V_0_ack_out) and (ap_const_logic_1 = stream_in_V_data_V_0_vld_out))) then 
                                        stream_in_V_data_V_0_sel_rd <= not(stream_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_in_V_data_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_data_V_0_ack_in))) then 
                                        stream_in_V_data_V_0_sel_wr <= not(stream_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_in_V_data_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_data_V_0_ack_out) and (stream_in_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = stream_in_V_data_V_0_vld_in) and (stream_in_V_data_V_0_state = ap_const_lv2_2)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_in_V_data_V_0_vld_in) and (ap_const_logic_0 = stream_in_V_data_V_0_ack_out) and (stream_in_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = stream_in_V_data_V_0_ack_out) and (stream_in_V_data_V_0_state = ap_const_lv2_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_in_V_data_V_0_vld_in) and (stream_in_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = stream_in_V_data_V_0_ack_out) and (stream_in_V_data_V_0_state = ap_const_lv2_1)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = stream_in_V_data_V_0_vld_in) and (ap_const_logic_0 = stream_in_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = stream_in_V_data_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_data_V_0_ack_out)))))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_in_V_dest_V_0_ack_out) and (ap_const_logic_1 = stream_in_V_dest_V_0_vld_out))) then 
                                        stream_in_V_dest_V_0_sel_rd <= not(stream_in_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_in_V_dest_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_dest_V_0_ack_in))) then 
                                        stream_in_V_dest_V_0_sel_wr <= not(stream_in_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_in_V_dest_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_dest_V_0_ack_out) and (ap_const_lv2_3 = stream_in_V_dest_V_0_state)) or ((ap_const_logic_0 = stream_in_V_dest_V_0_vld_in) and (ap_const_lv2_2 = stream_in_V_dest_V_0_state)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_in_V_dest_V_0_vld_in) and (ap_const_logic_0 = stream_in_V_dest_V_0_ack_out) and (ap_const_lv2_3 = stream_in_V_dest_V_0_state)) or ((ap_const_logic_0 = stream_in_V_dest_V_0_ack_out) and (ap_const_lv2_1 = stream_in_V_dest_V_0_state)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_in_V_dest_V_0_vld_in) and (ap_const_lv2_2 = stream_in_V_dest_V_0_state)) or ((ap_const_logic_1 = stream_in_V_dest_V_0_ack_out) and (ap_const_lv2_1 = stream_in_V_dest_V_0_state)) or ((ap_const_lv2_3 = stream_in_V_dest_V_0_state) and not(((ap_const_logic_1 = stream_in_V_dest_V_0_vld_in) and (ap_const_logic_0 = stream_in_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = stream_in_V_dest_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_dest_V_0_ack_out)))))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_in_V_last_V_0_ack_out) and (ap_const_logic_1 = stream_in_V_last_V_0_vld_out))) then 
                                        stream_in_V_last_V_0_sel_rd <= not(stream_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_in_V_last_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_last_V_0_ack_in))) then 
                                        stream_in_V_last_V_0_sel_wr <= not(stream_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_in_V_last_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_last_V_0_ack_out) and (ap_const_lv2_3 = stream_in_V_last_V_0_state)) or ((ap_const_logic_0 = stream_in_V_last_V_0_vld_in) and (ap_const_lv2_2 = stream_in_V_last_V_0_state)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_in_V_last_V_0_vld_in) and (ap_const_logic_0 = stream_in_V_last_V_0_ack_out) and (ap_const_lv2_3 = stream_in_V_last_V_0_state)) or ((ap_const_logic_0 = stream_in_V_last_V_0_ack_out) and (ap_const_lv2_1 = stream_in_V_last_V_0_state)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_in_V_last_V_0_vld_in) and (ap_const_lv2_2 = stream_in_V_last_V_0_state)) or ((ap_const_logic_1 = stream_in_V_last_V_0_ack_out) and (ap_const_lv2_1 = stream_in_V_last_V_0_state)) or ((ap_const_lv2_3 = stream_in_V_last_V_0_state) and not(((ap_const_logic_1 = stream_in_V_last_V_0_vld_in) and (ap_const_logic_0 = stream_in_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = stream_in_V_last_V_0_vld_in) and (ap_const_logic_1 = stream_in_V_last_V_0_ack_out)))))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_out_V_data_V_1_ack_out) and (ap_const_logic_1 = stream_out_V_data_V_1_vld_out))) then 
                                        stream_out_V_data_V_1_sel_rd <= not(stream_out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_out_V_data_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_data_V_1_ack_in))) then 
                                        stream_out_V_data_V_1_sel_wr <= not(stream_out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_out_V_data_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_data_V_1_ack_out) and (ap_const_lv2_3 = stream_out_V_data_V_1_state)) or ((ap_const_logic_0 = stream_out_V_data_V_1_vld_in) and (ap_const_lv2_2 = stream_out_V_data_V_1_state)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_out_V_data_V_1_vld_in) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_out) and (ap_const_lv2_3 = stream_out_V_data_V_1_state)) or ((ap_const_logic_0 = stream_out_V_data_V_1_ack_out) and (ap_const_lv2_1 = stream_out_V_data_V_1_state)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_out_V_data_V_1_vld_in) and (ap_const_lv2_2 = stream_out_V_data_V_1_state)) or ((ap_const_logic_1 = stream_out_V_data_V_1_ack_out) and (ap_const_lv2_1 = stream_out_V_data_V_1_state)) or ((ap_const_lv2_3 = stream_out_V_data_V_1_state) and not(((ap_const_logic_1 = stream_out_V_data_V_1_vld_in) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = stream_out_V_data_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_data_V_1_ack_out)))))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_out_V_dest_V_1_ack_out) and (ap_const_logic_1 = stream_out_V_dest_V_1_vld_out))) then 
                                        stream_out_V_dest_V_1_sel_rd <= not(stream_out_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_out_V_dest_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_dest_V_1_ack_in))) then 
                                        stream_out_V_dest_V_1_sel_wr <= not(stream_out_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_out_V_dest_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_dest_V_1_ack_out) and (ap_const_lv2_3 = stream_out_V_dest_V_1_state)) or ((ap_const_logic_0 = stream_out_V_dest_V_1_vld_in) and (ap_const_lv2_2 = stream_out_V_dest_V_1_state)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_out_V_dest_V_1_vld_in) and (ap_const_logic_0 = stream_out_V_dest_V_1_ack_out) and (ap_const_lv2_3 = stream_out_V_dest_V_1_state)) or ((ap_const_logic_0 = stream_out_V_dest_V_1_ack_out) and (ap_const_lv2_1 = stream_out_V_dest_V_1_state)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_out_V_dest_V_1_vld_in) and (ap_const_lv2_2 = stream_out_V_dest_V_1_state)) or ((ap_const_logic_1 = stream_out_V_dest_V_1_ack_out) and (ap_const_lv2_1 = stream_out_V_dest_V_1_state)) or ((ap_const_lv2_3 = stream_out_V_dest_V_1_state) and not(((ap_const_logic_1 = stream_out_V_dest_V_1_vld_in) and (ap_const_logic_0 = stream_out_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = stream_out_V_dest_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_dest_V_1_ack_out)))))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_out_V_last_V_1_ack_out) and (ap_const_logic_1 = stream_out_V_last_V_1_vld_out))) then 
                                        stream_out_V_last_V_1_sel_rd <= not(stream_out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = stream_out_V_last_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_last_V_1_ack_in))) then 
                                        stream_out_V_last_V_1_sel_wr <= not(stream_out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = stream_out_V_last_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_last_V_1_ack_out) and (ap_const_lv2_3 = stream_out_V_last_V_1_state)) or ((ap_const_logic_0 = stream_out_V_last_V_1_vld_in) and (ap_const_lv2_2 = stream_out_V_last_V_1_state)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = stream_out_V_last_V_1_vld_in) and (ap_const_logic_0 = stream_out_V_last_V_1_ack_out) and (ap_const_lv2_3 = stream_out_V_last_V_1_state)) or ((ap_const_logic_0 = stream_out_V_last_V_1_ack_out) and (ap_const_lv2_1 = stream_out_V_last_V_1_state)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = stream_out_V_last_V_1_vld_in) and (ap_const_lv2_2 = stream_out_V_last_V_1_state)) or ((ap_const_logic_1 = stream_out_V_last_V_1_ack_out) and (ap_const_lv2_1 = stream_out_V_last_V_1_state)) or ((ap_const_lv2_3 = stream_out_V_last_V_1_state) and not(((ap_const_logic_1 = stream_out_V_last_V_1_vld_in) and (ap_const_logic_0 = stream_out_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = stream_out_V_last_V_1_vld_in) and (ap_const_logic_1 = stream_out_V_last_V_1_ack_out)))))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_garbage_V_data_V_1_load_A)) then
                stream_garbage_V_data_V_1_payload_A <= stream_in_V_data_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_garbage_V_data_V_1_load_B)) then
                stream_garbage_V_data_V_1_payload_B <= stream_in_V_data_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_garbage_V_dest_V_1_load_A)) then
                stream_garbage_V_dest_V_1_payload_A <= stream_in_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_garbage_V_dest_V_1_load_B)) then
                stream_garbage_V_dest_V_1_payload_B <= stream_in_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_garbage_V_last_V_1_load_A)) then
                stream_garbage_V_last_V_1_payload_A <= stream_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_garbage_V_last_V_1_load_B)) then
                stream_garbage_V_last_V_1_payload_B <= stream_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_in_V_data_V_0_load_A)) then
                stream_in_V_data_V_0_payload_A <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_in_V_data_V_0_load_B)) then
                stream_in_V_data_V_0_payload_B <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_in_V_dest_V_0_load_A)) then
                stream_in_V_dest_V_0_payload_A <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_in_V_dest_V_0_load_B)) then
                stream_in_V_dest_V_0_payload_B <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_in_V_last_V_0_load_A)) then
                stream_in_V_last_V_0_payload_A <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_in_V_last_V_0_load_B)) then
                stream_in_V_last_V_0_payload_B <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_out_V_data_V_1_load_A)) then
                stream_out_V_data_V_1_payload_A <= stream_in_V_data_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_out_V_data_V_1_load_B)) then
                stream_out_V_data_V_1_payload_B <= stream_in_V_data_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_out_V_dest_V_1_load_A)) then
                stream_out_V_dest_V_1_payload_A <= stream_in_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_out_V_dest_V_1_load_B)) then
                stream_out_V_dest_V_1_payload_B <= stream_in_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_out_V_last_V_1_load_A)) then
                stream_out_V_last_V_1_payload_A <= stream_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = stream_out_V_last_V_1_load_B)) then
                stream_out_V_last_V_1_payload_B <= stream_in_V_last_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, match_in_V_ap_vld_in_sig, ap_CS_fsm, match_in_V_read_read_fu_58_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if (not((match_in_V_ap_vld_in_sig = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (not((((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    match_in_V_ap_vld_in_sig_assign_proc : process(match_in_V_ap_vld, match_in_V_ap_vld_preg)
    begin
        if ((ap_const_logic_1 = match_in_V_ap_vld)) then 
            match_in_V_ap_vld_in_sig <= match_in_V_ap_vld;
        else 
            match_in_V_ap_vld_in_sig <= match_in_V_ap_vld_preg;
        end if; 
    end process;


    match_in_V_blk_n_assign_proc : process(match_in_V_ap_vld, ap_CS_fsm_state2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            match_in_V_blk_n <= match_in_V_ap_vld;
        else 
            match_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    match_in_V_in_sig_assign_proc : process(match_in_V, match_in_V_preg, match_in_V_ap_vld)
    begin
        if ((ap_const_logic_1 = match_in_V_ap_vld)) then 
            match_in_V_in_sig <= match_in_V;
        else 
            match_in_V_in_sig <= match_in_V_preg;
        end if; 
    end process;

    match_in_V_read_read_fu_58_p2 <= match_in_V_in_sig;
    stream_garbage_TDATA <= stream_garbage_V_data_V_1_data_out;

    stream_garbage_TDATA_blk_n_assign_proc : process(stream_garbage_V_data_V_1_state, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2, ap_CS_fsm_state4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_lv1_1 = ap_CS_fsm_state4)))) then 
            stream_garbage_TDATA_blk_n <= stream_garbage_V_data_V_1_state(1);
        else 
            stream_garbage_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_garbage_TDEST <= stream_garbage_V_dest_V_1_data_out;
    stream_garbage_TLAST <= stream_garbage_V_last_V_1_data_out;
    stream_garbage_TVALID <= stream_garbage_V_last_V_1_state(0);
    stream_garbage_V_data_V_1_ack_in <= stream_garbage_V_data_V_1_state(1);
    stream_garbage_V_data_V_1_ack_out <= stream_garbage_TREADY;

    stream_garbage_V_data_V_1_data_out_assign_proc : process(stream_garbage_V_data_V_1_payload_A, stream_garbage_V_data_V_1_payload_B, stream_garbage_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = stream_garbage_V_data_V_1_sel)) then 
            stream_garbage_V_data_V_1_data_out <= stream_garbage_V_data_V_1_payload_B;
        else 
            stream_garbage_V_data_V_1_data_out <= stream_garbage_V_data_V_1_payload_A;
        end if; 
    end process;

    stream_garbage_V_data_V_1_load_A <= (stream_garbage_V_data_V_1_state_cmp_full and not(stream_garbage_V_data_V_1_sel_wr));
    stream_garbage_V_data_V_1_load_B <= (stream_garbage_V_data_V_1_sel_wr and stream_garbage_V_data_V_1_state_cmp_full);
    stream_garbage_V_data_V_1_sel <= stream_garbage_V_data_V_1_sel_rd;
    stream_garbage_V_data_V_1_state_cmp_full <= '0' when (stream_garbage_V_data_V_1_state = ap_const_lv2_1) else '1';

    stream_garbage_V_data_V_1_vld_in_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_garbage_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_garbage_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_garbage_V_data_V_1_vld_out <= stream_garbage_V_data_V_1_state(0);
    stream_garbage_V_dest_V_1_ack_in <= stream_garbage_V_dest_V_1_state(1);
    stream_garbage_V_dest_V_1_ack_out <= stream_garbage_TREADY;

    stream_garbage_V_dest_V_1_data_out_assign_proc : process(stream_garbage_V_dest_V_1_payload_A, stream_garbage_V_dest_V_1_payload_B, stream_garbage_V_dest_V_1_sel)
    begin
        if ((ap_const_logic_1 = stream_garbage_V_dest_V_1_sel)) then 
            stream_garbage_V_dest_V_1_data_out <= stream_garbage_V_dest_V_1_payload_B;
        else 
            stream_garbage_V_dest_V_1_data_out <= stream_garbage_V_dest_V_1_payload_A;
        end if; 
    end process;

    stream_garbage_V_dest_V_1_load_A <= (stream_garbage_V_dest_V_1_state_cmp_full and not(stream_garbage_V_dest_V_1_sel_wr));
    stream_garbage_V_dest_V_1_load_B <= (stream_garbage_V_dest_V_1_sel_wr and stream_garbage_V_dest_V_1_state_cmp_full);
    stream_garbage_V_dest_V_1_sel <= stream_garbage_V_dest_V_1_sel_rd;
    stream_garbage_V_dest_V_1_state_cmp_full <= '0' when (stream_garbage_V_dest_V_1_state = ap_const_lv2_1) else '1';

    stream_garbage_V_dest_V_1_vld_in_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_garbage_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_garbage_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_garbage_V_dest_V_1_vld_out <= stream_garbage_V_dest_V_1_state(0);
    stream_garbage_V_last_V_1_ack_in <= stream_garbage_V_last_V_1_state(1);
    stream_garbage_V_last_V_1_ack_out <= stream_garbage_TREADY;

    stream_garbage_V_last_V_1_data_out_assign_proc : process(stream_garbage_V_last_V_1_payload_A, stream_garbage_V_last_V_1_payload_B, stream_garbage_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = stream_garbage_V_last_V_1_sel)) then 
            stream_garbage_V_last_V_1_data_out <= stream_garbage_V_last_V_1_payload_B;
        else 
            stream_garbage_V_last_V_1_data_out <= stream_garbage_V_last_V_1_payload_A;
        end if; 
    end process;

    stream_garbage_V_last_V_1_load_A <= (stream_garbage_V_last_V_1_state_cmp_full and not(stream_garbage_V_last_V_1_sel_wr));
    stream_garbage_V_last_V_1_load_B <= (stream_garbage_V_last_V_1_sel_wr and stream_garbage_V_last_V_1_state_cmp_full);
    stream_garbage_V_last_V_1_sel <= stream_garbage_V_last_V_1_sel_rd;
    stream_garbage_V_last_V_1_state_cmp_full <= '0' when (stream_garbage_V_last_V_1_state = ap_const_lv2_1) else '1';

    stream_garbage_V_last_V_1_vld_in_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_garbage_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_garbage_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_garbage_V_last_V_1_vld_out <= stream_garbage_V_last_V_1_state(0);

    stream_in_TDATA_blk_n_assign_proc : process(stream_in_V_data_V_0_state, ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            stream_in_TDATA_blk_n <= stream_in_V_data_V_0_state(0);
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_TREADY <= stream_in_V_last_V_0_state(1);
    stream_in_V_data_V_0_ack_in <= stream_in_V_data_V_0_state(1);

    stream_in_V_data_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_data_V_0_data_out_assign_proc : process(stream_in_V_data_V_0_payload_A, stream_in_V_data_V_0_payload_B, stream_in_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = stream_in_V_data_V_0_sel)) then 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_B;
        else 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_data_V_0_load_A <= (stream_in_V_data_V_0_state_cmp_full and not(stream_in_V_data_V_0_sel_wr));
    stream_in_V_data_V_0_load_B <= (stream_in_V_data_V_0_sel_wr and stream_in_V_data_V_0_state_cmp_full);
    stream_in_V_data_V_0_sel <= stream_in_V_data_V_0_sel_rd;
    stream_in_V_data_V_0_state_cmp_full <= '0' when (stream_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_data_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_data_V_0_vld_out <= stream_in_V_data_V_0_state(0);
    stream_in_V_dest_V_0_ack_in <= stream_in_V_dest_V_0_state(1);

    stream_in_V_dest_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_dest_V_0_data_out_assign_proc : process(stream_in_V_dest_V_0_payload_A, stream_in_V_dest_V_0_payload_B, stream_in_V_dest_V_0_sel)
    begin
        if ((ap_const_logic_1 = stream_in_V_dest_V_0_sel)) then 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_B;
        else 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_dest_V_0_load_A <= (stream_in_V_dest_V_0_state_cmp_full and not(stream_in_V_dest_V_0_sel_wr));
    stream_in_V_dest_V_0_load_B <= (stream_in_V_dest_V_0_sel_wr and stream_in_V_dest_V_0_state_cmp_full);
    stream_in_V_dest_V_0_sel <= stream_in_V_dest_V_0_sel_rd;
    stream_in_V_dest_V_0_state_cmp_full <= '0' when (stream_in_V_dest_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_dest_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_dest_V_0_vld_out <= stream_in_V_dest_V_0_state(0);
    stream_in_V_last_V_0_ack_in <= stream_in_V_last_V_0_state(1);

    stream_in_V_last_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_last_V_0_data_out_assign_proc : process(stream_in_V_last_V_0_payload_A, stream_in_V_last_V_0_payload_B, stream_in_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = stream_in_V_last_V_0_sel)) then 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_B;
        else 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_last_V_0_load_A <= (stream_in_V_last_V_0_state_cmp_full and not(stream_in_V_last_V_0_sel_wr));
    stream_in_V_last_V_0_load_B <= (stream_in_V_last_V_0_sel_wr and stream_in_V_last_V_0_state_cmp_full);
    stream_in_V_last_V_0_sel <= stream_in_V_last_V_0_sel_rd;
    stream_in_V_last_V_0_state_cmp_full <= '0' when (stream_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_last_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_last_V_0_vld_out <= stream_in_V_last_V_0_state(0);
    stream_out_TDATA <= stream_out_V_data_V_1_data_out;

    stream_out_TDATA_blk_n_assign_proc : process(stream_out_V_data_V_1_state, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2, ap_CS_fsm_state4)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2))) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_lv1_1 = ap_CS_fsm_state4)))) then 
            stream_out_TDATA_blk_n <= stream_out_V_data_V_1_state(1);
        else 
            stream_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_TDEST <= stream_out_V_dest_V_1_data_out;
    stream_out_TLAST <= stream_out_V_last_V_1_data_out;
    stream_out_TVALID <= stream_out_V_last_V_1_state(0);
    stream_out_V_data_V_1_ack_in <= stream_out_V_data_V_1_state(1);
    stream_out_V_data_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_data_V_1_data_out_assign_proc : process(stream_out_V_data_V_1_payload_A, stream_out_V_data_V_1_payload_B, stream_out_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = stream_out_V_data_V_1_sel)) then 
            stream_out_V_data_V_1_data_out <= stream_out_V_data_V_1_payload_B;
        else 
            stream_out_V_data_V_1_data_out <= stream_out_V_data_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_data_V_1_load_A <= (stream_out_V_data_V_1_state_cmp_full and not(stream_out_V_data_V_1_sel_wr));
    stream_out_V_data_V_1_load_B <= (stream_out_V_data_V_1_sel_wr and stream_out_V_data_V_1_state_cmp_full);
    stream_out_V_data_V_1_sel <= stream_out_V_data_V_1_sel_rd;
    stream_out_V_data_V_1_state_cmp_full <= '0' when (stream_out_V_data_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_data_V_1_vld_in_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_data_V_1_vld_out <= stream_out_V_data_V_1_state(0);
    stream_out_V_dest_V_1_ack_in <= stream_out_V_dest_V_1_state(1);
    stream_out_V_dest_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_dest_V_1_data_out_assign_proc : process(stream_out_V_dest_V_1_payload_A, stream_out_V_dest_V_1_payload_B, stream_out_V_dest_V_1_sel)
    begin
        if ((ap_const_logic_1 = stream_out_V_dest_V_1_sel)) then 
            stream_out_V_dest_V_1_data_out <= stream_out_V_dest_V_1_payload_B;
        else 
            stream_out_V_dest_V_1_data_out <= stream_out_V_dest_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_dest_V_1_load_A <= (stream_out_V_dest_V_1_state_cmp_full and not(stream_out_V_dest_V_1_sel_wr));
    stream_out_V_dest_V_1_load_B <= (stream_out_V_dest_V_1_sel_wr and stream_out_V_dest_V_1_state_cmp_full);
    stream_out_V_dest_V_1_sel <= stream_out_V_dest_V_1_sel_rd;
    stream_out_V_dest_V_1_state_cmp_full <= '0' when (stream_out_V_dest_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_dest_V_1_vld_in_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_out_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_dest_V_1_vld_out <= stream_out_V_dest_V_1_state(0);
    stream_out_V_last_V_1_ack_in <= stream_out_V_last_V_1_state(1);
    stream_out_V_last_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_last_V_1_data_out_assign_proc : process(stream_out_V_last_V_1_payload_A, stream_out_V_last_V_1_payload_B, stream_out_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = stream_out_V_last_V_1_sel)) then 
            stream_out_V_last_V_1_data_out <= stream_out_V_last_V_1_payload_B;
        else 
            stream_out_V_last_V_1_data_out <= stream_out_V_last_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_last_V_1_load_A <= (stream_out_V_last_V_1_state_cmp_full and not(stream_out_V_last_V_1_sel_wr));
    stream_out_V_last_V_1_load_B <= (stream_out_V_last_V_1_sel_wr and stream_out_V_last_V_1_state_cmp_full);
    stream_out_V_last_V_1_sel <= stream_out_V_last_V_1_sel_rd;
    stream_out_V_last_V_1_state_cmp_full <= '0' when (stream_out_V_last_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_last_V_1_vld_in_assign_proc : process(stream_in_V_data_V_0_vld_out, stream_out_V_data_V_1_ack_in, stream_garbage_V_data_V_1_ack_in, ap_CS_fsm_state3, match_in_V_read_read_fu_58_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and not(((stream_in_V_data_V_0_vld_out = ap_const_logic_0) or ((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2) and (ap_const_logic_0 = stream_garbage_V_data_V_1_ack_in)) or (not((ap_const_lv1_0 = match_in_V_read_read_fu_58_p2)) and (ap_const_logic_0 = stream_out_V_data_V_1_ack_in)))))) then 
            stream_out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_last_V_1_vld_out <= stream_out_V_last_V_1_state(0);
end behav;
