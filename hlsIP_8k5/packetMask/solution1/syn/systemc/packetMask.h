// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _packetMask_HH_
#define _packetMask_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct packetMask : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<64> > packetIn_TDATA;
    sc_in< sc_logic > packetIn_TVALID;
    sc_out< sc_logic > packetIn_TREADY;
    sc_in< sc_lv<1> > packetIn_TLAST;
    sc_in< sc_lv<8> > packetIn_TKEEP;
    sc_out< sc_lv<64> > packetOut_TDATA;
    sc_out< sc_logic > packetOut_TVALID;
    sc_in< sc_logic > packetOut_TREADY;
    sc_out< sc_lv<1> > packetOut_TLAST;
    sc_out< sc_lv<8> > packetOut_TKEEP;
    sc_in< sc_lv<32> > id_V;


    // Module declarations
    packetMask(sc_module_name name);
    SC_HAS_PROCESS(packetMask);

    ~packetMask();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<64> > packetIn_V_data_V_0_data_out;
    sc_signal< sc_logic > packetIn_V_data_V_0_vld_in;
    sc_signal< sc_logic > packetIn_V_data_V_0_vld_out;
    sc_signal< sc_logic > packetIn_V_data_V_0_ack_in;
    sc_signal< sc_logic > packetIn_V_data_V_0_ack_out;
    sc_signal< sc_lv<64> > packetIn_V_data_V_0_payload_A;
    sc_signal< sc_lv<64> > packetIn_V_data_V_0_payload_B;
    sc_signal< sc_logic > packetIn_V_data_V_0_sel_rd;
    sc_signal< sc_logic > packetIn_V_data_V_0_sel_wr;
    sc_signal< sc_logic > packetIn_V_data_V_0_sel;
    sc_signal< sc_logic > packetIn_V_data_V_0_load_A;
    sc_signal< sc_logic > packetIn_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > packetIn_V_data_V_0_state;
    sc_signal< sc_logic > packetIn_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > packetIn_V_last_V_0_data_out;
    sc_signal< sc_logic > packetIn_V_last_V_0_vld_in;
    sc_signal< sc_logic > packetIn_V_last_V_0_vld_out;
    sc_signal< sc_logic > packetIn_V_last_V_0_ack_in;
    sc_signal< sc_logic > packetIn_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > packetIn_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > packetIn_V_last_V_0_payload_B;
    sc_signal< sc_logic > packetIn_V_last_V_0_sel_rd;
    sc_signal< sc_logic > packetIn_V_last_V_0_sel_wr;
    sc_signal< sc_logic > packetIn_V_last_V_0_sel;
    sc_signal< sc_logic > packetIn_V_last_V_0_load_A;
    sc_signal< sc_logic > packetIn_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > packetIn_V_last_V_0_state;
    sc_signal< sc_logic > packetIn_V_last_V_0_state_cmp_full;
    sc_signal< sc_logic > packetIn_V_keep_V_0_vld_in;
    sc_signal< sc_logic > packetIn_V_keep_V_0_ack_out;
    sc_signal< sc_lv<2> > packetIn_V_keep_V_0_state;
    sc_signal< sc_lv<64> > packetOut_V_data_V_1_data_out;
    sc_signal< sc_logic > packetOut_V_data_V_1_vld_in;
    sc_signal< sc_logic > packetOut_V_data_V_1_vld_out;
    sc_signal< sc_logic > packetOut_V_data_V_1_ack_in;
    sc_signal< sc_logic > packetOut_V_data_V_1_ack_out;
    sc_signal< sc_lv<64> > packetOut_V_data_V_1_payload_A;
    sc_signal< sc_lv<64> > packetOut_V_data_V_1_payload_B;
    sc_signal< sc_logic > packetOut_V_data_V_1_sel_rd;
    sc_signal< sc_logic > packetOut_V_data_V_1_sel_wr;
    sc_signal< sc_logic > packetOut_V_data_V_1_sel;
    sc_signal< sc_logic > packetOut_V_data_V_1_load_A;
    sc_signal< sc_logic > packetOut_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > packetOut_V_data_V_1_state;
    sc_signal< sc_logic > packetOut_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > packetOut_V_last_V_1_data_out;
    sc_signal< sc_logic > packetOut_V_last_V_1_vld_in;
    sc_signal< sc_logic > packetOut_V_last_V_1_vld_out;
    sc_signal< sc_logic > packetOut_V_last_V_1_ack_in;
    sc_signal< sc_logic > packetOut_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > packetOut_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > packetOut_V_last_V_1_payload_B;
    sc_signal< sc_logic > packetOut_V_last_V_1_sel_rd;
    sc_signal< sc_logic > packetOut_V_last_V_1_sel_wr;
    sc_signal< sc_logic > packetOut_V_last_V_1_sel;
    sc_signal< sc_logic > packetOut_V_last_V_1_load_A;
    sc_signal< sc_logic > packetOut_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > packetOut_V_last_V_1_state;
    sc_signal< sc_logic > packetOut_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<8> > packetOut_V_keep_V_1_data_out;
    sc_signal< sc_logic > packetOut_V_keep_V_1_vld_in;
    sc_signal< sc_logic > packetOut_V_keep_V_1_vld_out;
    sc_signal< sc_logic > packetOut_V_keep_V_1_ack_out;
    sc_signal< sc_logic > packetOut_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > packetOut_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > packetOut_V_keep_V_1_state;
    sc_signal< sc_logic > packetIn_TDATA_blk_n;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_logic > packetOut_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_data_V_1_fu_109_p1;
    sc_signal< sc_lv<8> > tmp_fu_85_p4;
    sc_signal< sc_lv<8> > tmp_1_fu_95_p1;
    sc_signal< sc_lv<32> > r_V_fu_99_p4;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_rst_n_inv();
    void thread_packetIn_TDATA_blk_n();
    void thread_packetIn_TREADY();
    void thread_packetIn_V_data_V_0_ack_in();
    void thread_packetIn_V_data_V_0_ack_out();
    void thread_packetIn_V_data_V_0_data_out();
    void thread_packetIn_V_data_V_0_load_A();
    void thread_packetIn_V_data_V_0_load_B();
    void thread_packetIn_V_data_V_0_sel();
    void thread_packetIn_V_data_V_0_state_cmp_full();
    void thread_packetIn_V_data_V_0_vld_in();
    void thread_packetIn_V_data_V_0_vld_out();
    void thread_packetIn_V_keep_V_0_ack_out();
    void thread_packetIn_V_keep_V_0_vld_in();
    void thread_packetIn_V_last_V_0_ack_in();
    void thread_packetIn_V_last_V_0_ack_out();
    void thread_packetIn_V_last_V_0_data_out();
    void thread_packetIn_V_last_V_0_load_A();
    void thread_packetIn_V_last_V_0_load_B();
    void thread_packetIn_V_last_V_0_sel();
    void thread_packetIn_V_last_V_0_state_cmp_full();
    void thread_packetIn_V_last_V_0_vld_in();
    void thread_packetIn_V_last_V_0_vld_out();
    void thread_packetOut_TDATA();
    void thread_packetOut_TDATA_blk_n();
    void thread_packetOut_TKEEP();
    void thread_packetOut_TLAST();
    void thread_packetOut_TVALID();
    void thread_packetOut_V_data_V_1_ack_in();
    void thread_packetOut_V_data_V_1_ack_out();
    void thread_packetOut_V_data_V_1_data_out();
    void thread_packetOut_V_data_V_1_load_A();
    void thread_packetOut_V_data_V_1_load_B();
    void thread_packetOut_V_data_V_1_sel();
    void thread_packetOut_V_data_V_1_state_cmp_full();
    void thread_packetOut_V_data_V_1_vld_in();
    void thread_packetOut_V_data_V_1_vld_out();
    void thread_packetOut_V_keep_V_1_ack_out();
    void thread_packetOut_V_keep_V_1_data_out();
    void thread_packetOut_V_keep_V_1_sel();
    void thread_packetOut_V_keep_V_1_vld_in();
    void thread_packetOut_V_keep_V_1_vld_out();
    void thread_packetOut_V_last_V_1_ack_in();
    void thread_packetOut_V_last_V_1_ack_out();
    void thread_packetOut_V_last_V_1_data_out();
    void thread_packetOut_V_last_V_1_load_A();
    void thread_packetOut_V_last_V_1_load_B();
    void thread_packetOut_V_last_V_1_sel();
    void thread_packetOut_V_last_V_1_state_cmp_full();
    void thread_packetOut_V_last_V_1_vld_in();
    void thread_packetOut_V_last_V_1_vld_out();
    void thread_r_V_fu_99_p4();
    void thread_tmp_1_fu_95_p1();
    void thread_tmp_data_V_1_fu_109_p1();
    void thread_tmp_fu_85_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
