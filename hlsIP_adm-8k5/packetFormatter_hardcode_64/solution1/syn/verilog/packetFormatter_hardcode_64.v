// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="packetFormatter_hardcode_64,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.835000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=467,HLS_SYN_LUT=388}" *)

module packetFormatter_hardcode_64 (
        ap_clk,
        ap_rst_n,
        packetIn_TDATA,
        packetIn_TVALID,
        packetIn_TREADY,
        packetIn_TLAST,
        packetIn_TDEST,
        packetIn_TKEEP,
        eth_dst_V,
        eth_src_V,
        packetOut_TDATA,
        packetOut_TVALID,
        packetOut_TREADY,
        packetOut_TLAST,
        packetOut_TKEEP
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst_n;
input  [63:0] packetIn_TDATA;
input   packetIn_TVALID;
output   packetIn_TREADY;
input  [0:0] packetIn_TLAST;
input  [7:0] packetIn_TDEST;
input  [7:0] packetIn_TKEEP;
input  [47:0] eth_dst_V;
input  [47:0] eth_src_V;
output  [63:0] packetOut_TDATA;
output   packetOut_TVALID;
input   packetOut_TREADY;
output  [0:0] packetOut_TLAST;
output  [7:0] packetOut_TKEEP;

reg    ap_rst_n_inv;
reg   [63:0] packetIn_V_data_V_0_data_out;
wire    packetIn_V_data_V_0_vld_in;
wire    packetIn_V_data_V_0_vld_out;
wire    packetIn_V_data_V_0_ack_in;
reg    packetIn_V_data_V_0_ack_out;
reg   [63:0] packetIn_V_data_V_0_payload_A;
reg   [63:0] packetIn_V_data_V_0_payload_B;
reg    packetIn_V_data_V_0_sel_rd;
reg    packetIn_V_data_V_0_sel_wr;
wire    packetIn_V_data_V_0_sel;
wire    packetIn_V_data_V_0_load_A;
wire    packetIn_V_data_V_0_load_B;
reg   [1:0] packetIn_V_data_V_0_state;
wire    packetIn_V_data_V_0_state_cmp_full;
reg   [0:0] packetIn_V_last_V_0_data_out;
wire    packetIn_V_last_V_0_vld_in;
wire    packetIn_V_last_V_0_vld_out;
wire    packetIn_V_last_V_0_ack_in;
reg    packetIn_V_last_V_0_ack_out;
reg   [0:0] packetIn_V_last_V_0_payload_A;
reg   [0:0] packetIn_V_last_V_0_payload_B;
reg    packetIn_V_last_V_0_sel_rd;
reg    packetIn_V_last_V_0_sel_wr;
wire    packetIn_V_last_V_0_sel;
wire    packetIn_V_last_V_0_load_A;
wire    packetIn_V_last_V_0_load_B;
reg   [1:0] packetIn_V_last_V_0_state;
wire    packetIn_V_last_V_0_state_cmp_full;
reg   [7:0] packetIn_V_dest_V_0_data_out;
wire    packetIn_V_dest_V_0_vld_in;
wire    packetIn_V_dest_V_0_vld_out;
wire    packetIn_V_dest_V_0_ack_in;
reg    packetIn_V_dest_V_0_ack_out;
reg   [7:0] packetIn_V_dest_V_0_payload_A;
reg   [7:0] packetIn_V_dest_V_0_payload_B;
reg    packetIn_V_dest_V_0_sel_rd;
reg    packetIn_V_dest_V_0_sel_wr;
wire    packetIn_V_dest_V_0_sel;
wire    packetIn_V_dest_V_0_load_A;
wire    packetIn_V_dest_V_0_load_B;
reg   [1:0] packetIn_V_dest_V_0_state;
wire    packetIn_V_dest_V_0_state_cmp_full;
reg   [7:0] packetIn_V_keep_V_0_data_out;
wire    packetIn_V_keep_V_0_vld_in;
wire    packetIn_V_keep_V_0_vld_out;
wire    packetIn_V_keep_V_0_ack_in;
reg    packetIn_V_keep_V_0_ack_out;
reg   [7:0] packetIn_V_keep_V_0_payload_A;
reg   [7:0] packetIn_V_keep_V_0_payload_B;
reg    packetIn_V_keep_V_0_sel_rd;
reg    packetIn_V_keep_V_0_sel_wr;
wire    packetIn_V_keep_V_0_sel;
wire    packetIn_V_keep_V_0_load_A;
wire    packetIn_V_keep_V_0_load_B;
reg   [1:0] packetIn_V_keep_V_0_state;
wire    packetIn_V_keep_V_0_state_cmp_full;
reg   [63:0] packetOut_V_data_V_1_data_in;
reg   [63:0] packetOut_V_data_V_1_data_out;
reg    packetOut_V_data_V_1_vld_in;
wire    packetOut_V_data_V_1_vld_out;
wire    packetOut_V_data_V_1_ack_in;
wire    packetOut_V_data_V_1_ack_out;
reg   [63:0] packetOut_V_data_V_1_payload_A;
reg   [63:0] packetOut_V_data_V_1_payload_B;
reg    packetOut_V_data_V_1_sel_rd;
reg    packetOut_V_data_V_1_sel_wr;
wire    packetOut_V_data_V_1_sel;
wire    packetOut_V_data_V_1_load_A;
wire    packetOut_V_data_V_1_load_B;
reg   [1:0] packetOut_V_data_V_1_state;
wire    packetOut_V_data_V_1_state_cmp_full;
reg   [0:0] packetOut_V_last_V_1_data_in;
reg   [0:0] packetOut_V_last_V_1_data_out;
reg    packetOut_V_last_V_1_vld_in;
wire    packetOut_V_last_V_1_vld_out;
wire    packetOut_V_last_V_1_ack_in;
wire    packetOut_V_last_V_1_ack_out;
reg   [0:0] packetOut_V_last_V_1_payload_A;
reg   [0:0] packetOut_V_last_V_1_payload_B;
reg    packetOut_V_last_V_1_sel_rd;
reg    packetOut_V_last_V_1_sel_wr;
wire    packetOut_V_last_V_1_sel;
wire    packetOut_V_last_V_1_load_A;
wire    packetOut_V_last_V_1_load_B;
reg   [1:0] packetOut_V_last_V_1_state;
wire    packetOut_V_last_V_1_state_cmp_full;
reg   [7:0] packetOut_V_keep_V_1_data_in;
reg   [7:0] packetOut_V_keep_V_1_data_out;
reg    packetOut_V_keep_V_1_vld_in;
wire    packetOut_V_keep_V_1_vld_out;
wire    packetOut_V_keep_V_1_ack_in;
wire    packetOut_V_keep_V_1_ack_out;
reg   [7:0] packetOut_V_keep_V_1_payload_A;
reg   [7:0] packetOut_V_keep_V_1_payload_B;
reg    packetOut_V_keep_V_1_sel_rd;
reg    packetOut_V_keep_V_1_sel_wr;
wire    packetOut_V_keep_V_1_sel;
wire    packetOut_V_keep_V_1_load_A;
wire    packetOut_V_keep_V_1_load_B;
reg   [1:0] packetOut_V_keep_V_1_state;
wire    packetOut_V_keep_V_1_state_cmp_full;
reg    packetIn_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state7;
reg    packetOut_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
reg   [63:0] reg_124;
wire    ap_CS_fsm_state1;
reg   [15:0] tmp_reg_175;
wire   [31:0] temp_V_fu_139_p1;
reg   [31:0] temp_V_reg_180;
wire   [63:0] packetHeader0_data_V_fu_143_p3;
reg   [0:0] tmp_last_V_reg_190;
reg   [7:0] tmp_dest_V_reg_196;
wire   [63:0] p_Result_s_fu_154_p5;
reg   [0:0] tmp_last_V_1_reg_206;
wire   [0:0] ap_phi_mux_p_s_phi_fu_108_p4;
reg   [0:0] p_s_reg_105;
reg   [7:0] ap_NS_fsm;
wire    ap_CS_fsm_state6;
reg    ap_block_state6;

// power-on initialization
initial begin
#0 packetIn_V_data_V_0_sel_rd = 1'b0;
#0 packetIn_V_data_V_0_sel_wr = 1'b0;
#0 packetIn_V_data_V_0_state = 2'd0;
#0 packetIn_V_last_V_0_sel_rd = 1'b0;
#0 packetIn_V_last_V_0_sel_wr = 1'b0;
#0 packetIn_V_last_V_0_state = 2'd0;
#0 packetIn_V_dest_V_0_sel_rd = 1'b0;
#0 packetIn_V_dest_V_0_sel_wr = 1'b0;
#0 packetIn_V_dest_V_0_state = 2'd0;
#0 packetIn_V_keep_V_0_sel_rd = 1'b0;
#0 packetIn_V_keep_V_0_sel_wr = 1'b0;
#0 packetIn_V_keep_V_0_state = 2'd0;
#0 packetOut_V_data_V_1_sel_rd = 1'b0;
#0 packetOut_V_data_V_1_sel_wr = 1'b0;
#0 packetOut_V_data_V_1_state = 2'd0;
#0 packetOut_V_last_V_1_sel_rd = 1'b0;
#0 packetOut_V_last_V_1_sel_wr = 1'b0;
#0 packetOut_V_last_V_1_state = 2'd0;
#0 packetOut_V_keep_V_1_sel_rd = 1'b0;
#0 packetOut_V_keep_V_1_sel_wr = 1'b0;
#0 packetOut_V_keep_V_1_state = 2'd0;
#0 ap_CS_fsm = 8'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((packetIn_V_data_V_0_ack_out == 1'b1) & (packetIn_V_data_V_0_vld_out == 1'b1))) begin
            packetIn_V_data_V_0_sel_rd <= ~packetIn_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((packetIn_V_data_V_0_ack_in == 1'b1) & (packetIn_V_data_V_0_vld_in == 1'b1))) begin
            packetIn_V_data_V_0_sel_wr <= ~packetIn_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((packetIn_V_data_V_0_state == 2'd2) & (packetIn_V_data_V_0_vld_in == 1'b0)) | ((packetIn_V_data_V_0_state == 2'd3) & (packetIn_V_data_V_0_vld_in == 1'b0) & (packetIn_V_data_V_0_ack_out == 1'b1)))) begin
            packetIn_V_data_V_0_state <= 2'd2;
        end else if ((((packetIn_V_data_V_0_state == 2'd1) & (packetIn_V_data_V_0_ack_out == 1'b0)) | ((packetIn_V_data_V_0_state == 2'd3) & (packetIn_V_data_V_0_ack_out == 1'b0) & (packetIn_V_data_V_0_vld_in == 1'b1)))) begin
            packetIn_V_data_V_0_state <= 2'd1;
        end else if (((~((packetIn_V_data_V_0_vld_in == 1'b0) & (packetIn_V_data_V_0_ack_out == 1'b1)) & ~((packetIn_V_data_V_0_ack_out == 1'b0) & (packetIn_V_data_V_0_vld_in == 1'b1)) & (packetIn_V_data_V_0_state == 2'd3)) | ((packetIn_V_data_V_0_state == 2'd1) & (packetIn_V_data_V_0_ack_out == 1'b1)) | ((packetIn_V_data_V_0_state == 2'd2) & (packetIn_V_data_V_0_vld_in == 1'b1)))) begin
            packetIn_V_data_V_0_state <= 2'd3;
        end else begin
            packetIn_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_dest_V_0_sel_rd <= 1'b0;
    end else begin
        if (((packetIn_V_dest_V_0_ack_out == 1'b1) & (packetIn_V_dest_V_0_vld_out == 1'b1))) begin
            packetIn_V_dest_V_0_sel_rd <= ~packetIn_V_dest_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_dest_V_0_sel_wr <= 1'b0;
    end else begin
        if (((packetIn_V_dest_V_0_ack_in == 1'b1) & (packetIn_V_dest_V_0_vld_in == 1'b1))) begin
            packetIn_V_dest_V_0_sel_wr <= ~packetIn_V_dest_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_dest_V_0_state <= 2'd0;
    end else begin
        if ((((packetIn_V_dest_V_0_state == 2'd2) & (packetIn_V_dest_V_0_vld_in == 1'b0)) | ((packetIn_V_dest_V_0_state == 2'd3) & (packetIn_V_dest_V_0_vld_in == 1'b0) & (packetIn_V_dest_V_0_ack_out == 1'b1)))) begin
            packetIn_V_dest_V_0_state <= 2'd2;
        end else if ((((packetIn_V_dest_V_0_state == 2'd1) & (packetIn_V_dest_V_0_ack_out == 1'b0)) | ((packetIn_V_dest_V_0_state == 2'd3) & (packetIn_V_dest_V_0_ack_out == 1'b0) & (packetIn_V_dest_V_0_vld_in == 1'b1)))) begin
            packetIn_V_dest_V_0_state <= 2'd1;
        end else if (((~((packetIn_V_dest_V_0_vld_in == 1'b0) & (packetIn_V_dest_V_0_ack_out == 1'b1)) & ~((packetIn_V_dest_V_0_ack_out == 1'b0) & (packetIn_V_dest_V_0_vld_in == 1'b1)) & (packetIn_V_dest_V_0_state == 2'd3)) | ((packetIn_V_dest_V_0_state == 2'd1) & (packetIn_V_dest_V_0_ack_out == 1'b1)) | ((packetIn_V_dest_V_0_state == 2'd2) & (packetIn_V_dest_V_0_vld_in == 1'b1)))) begin
            packetIn_V_dest_V_0_state <= 2'd3;
        end else begin
            packetIn_V_dest_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_keep_V_0_sel_rd <= 1'b0;
    end else begin
        if (((packetIn_V_keep_V_0_ack_out == 1'b1) & (packetIn_V_keep_V_0_vld_out == 1'b1))) begin
            packetIn_V_keep_V_0_sel_rd <= ~packetIn_V_keep_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_keep_V_0_sel_wr <= 1'b0;
    end else begin
        if (((packetIn_V_keep_V_0_ack_in == 1'b1) & (packetIn_V_keep_V_0_vld_in == 1'b1))) begin
            packetIn_V_keep_V_0_sel_wr <= ~packetIn_V_keep_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_keep_V_0_state <= 2'd0;
    end else begin
        if ((((packetIn_V_keep_V_0_state == 2'd2) & (packetIn_V_keep_V_0_vld_in == 1'b0)) | ((packetIn_V_keep_V_0_state == 2'd3) & (packetIn_V_keep_V_0_vld_in == 1'b0) & (packetIn_V_keep_V_0_ack_out == 1'b1)))) begin
            packetIn_V_keep_V_0_state <= 2'd2;
        end else if ((((packetIn_V_keep_V_0_state == 2'd1) & (packetIn_V_keep_V_0_ack_out == 1'b0)) | ((packetIn_V_keep_V_0_state == 2'd3) & (packetIn_V_keep_V_0_ack_out == 1'b0) & (packetIn_V_keep_V_0_vld_in == 1'b1)))) begin
            packetIn_V_keep_V_0_state <= 2'd1;
        end else if (((~((packetIn_V_keep_V_0_vld_in == 1'b0) & (packetIn_V_keep_V_0_ack_out == 1'b1)) & ~((packetIn_V_keep_V_0_ack_out == 1'b0) & (packetIn_V_keep_V_0_vld_in == 1'b1)) & (packetIn_V_keep_V_0_state == 2'd3)) | ((packetIn_V_keep_V_0_state == 2'd1) & (packetIn_V_keep_V_0_ack_out == 1'b1)) | ((packetIn_V_keep_V_0_state == 2'd2) & (packetIn_V_keep_V_0_vld_in == 1'b1)))) begin
            packetIn_V_keep_V_0_state <= 2'd3;
        end else begin
            packetIn_V_keep_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((packetIn_V_last_V_0_ack_out == 1'b1) & (packetIn_V_last_V_0_vld_out == 1'b1))) begin
            packetIn_V_last_V_0_sel_rd <= ~packetIn_V_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((packetIn_V_last_V_0_ack_in == 1'b1) & (packetIn_V_last_V_0_vld_in == 1'b1))) begin
            packetIn_V_last_V_0_sel_wr <= ~packetIn_V_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetIn_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((packetIn_V_last_V_0_state == 2'd2) & (packetIn_V_last_V_0_vld_in == 1'b0)) | ((packetIn_V_last_V_0_state == 2'd3) & (packetIn_V_last_V_0_vld_in == 1'b0) & (packetIn_V_last_V_0_ack_out == 1'b1)))) begin
            packetIn_V_last_V_0_state <= 2'd2;
        end else if ((((packetIn_V_last_V_0_state == 2'd1) & (packetIn_V_last_V_0_ack_out == 1'b0)) | ((packetIn_V_last_V_0_state == 2'd3) & (packetIn_V_last_V_0_ack_out == 1'b0) & (packetIn_V_last_V_0_vld_in == 1'b1)))) begin
            packetIn_V_last_V_0_state <= 2'd1;
        end else if (((~((packetIn_V_last_V_0_vld_in == 1'b0) & (packetIn_V_last_V_0_ack_out == 1'b1)) & ~((packetIn_V_last_V_0_ack_out == 1'b0) & (packetIn_V_last_V_0_vld_in == 1'b1)) & (packetIn_V_last_V_0_state == 2'd3)) | ((packetIn_V_last_V_0_state == 2'd1) & (packetIn_V_last_V_0_ack_out == 1'b1)) | ((packetIn_V_last_V_0_state == 2'd2) & (packetIn_V_last_V_0_vld_in == 1'b1)))) begin
            packetIn_V_last_V_0_state <= 2'd3;
        end else begin
            packetIn_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((packetOut_V_data_V_1_ack_out == 1'b1) & (packetOut_V_data_V_1_vld_out == 1'b1))) begin
            packetOut_V_data_V_1_sel_rd <= ~packetOut_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((packetOut_V_data_V_1_ack_in == 1'b1) & (packetOut_V_data_V_1_vld_in == 1'b1))) begin
            packetOut_V_data_V_1_sel_wr <= ~packetOut_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((packetOut_V_data_V_1_state == 2'd2) & (packetOut_V_data_V_1_vld_in == 1'b0)) | ((packetOut_V_data_V_1_state == 2'd3) & (packetOut_V_data_V_1_vld_in == 1'b0) & (packetOut_V_data_V_1_ack_out == 1'b1)))) begin
            packetOut_V_data_V_1_state <= 2'd2;
        end else if ((((packetOut_V_data_V_1_state == 2'd1) & (packetOut_V_data_V_1_ack_out == 1'b0)) | ((packetOut_V_data_V_1_state == 2'd3) & (packetOut_V_data_V_1_ack_out == 1'b0) & (packetOut_V_data_V_1_vld_in == 1'b1)))) begin
            packetOut_V_data_V_1_state <= 2'd1;
        end else if (((~((packetOut_V_data_V_1_vld_in == 1'b0) & (packetOut_V_data_V_1_ack_out == 1'b1)) & ~((packetOut_V_data_V_1_ack_out == 1'b0) & (packetOut_V_data_V_1_vld_in == 1'b1)) & (packetOut_V_data_V_1_state == 2'd3)) | ((packetOut_V_data_V_1_state == 2'd1) & (packetOut_V_data_V_1_ack_out == 1'b1)) | ((packetOut_V_data_V_1_state == 2'd2) & (packetOut_V_data_V_1_vld_in == 1'b1)))) begin
            packetOut_V_data_V_1_state <= 2'd3;
        end else begin
            packetOut_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((packetOut_V_keep_V_1_ack_out == 1'b1) & (packetOut_V_keep_V_1_vld_out == 1'b1))) begin
            packetOut_V_keep_V_1_sel_rd <= ~packetOut_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((packetOut_V_keep_V_1_ack_in == 1'b1) & (packetOut_V_keep_V_1_vld_in == 1'b1))) begin
            packetOut_V_keep_V_1_sel_wr <= ~packetOut_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((packetOut_V_keep_V_1_state == 2'd2) & (packetOut_V_keep_V_1_vld_in == 1'b0)) | ((packetOut_V_keep_V_1_state == 2'd3) & (packetOut_V_keep_V_1_vld_in == 1'b0) & (packetOut_V_keep_V_1_ack_out == 1'b1)))) begin
            packetOut_V_keep_V_1_state <= 2'd2;
        end else if ((((packetOut_V_keep_V_1_state == 2'd1) & (packetOut_V_keep_V_1_ack_out == 1'b0)) | ((packetOut_V_keep_V_1_state == 2'd3) & (packetOut_V_keep_V_1_ack_out == 1'b0) & (packetOut_V_keep_V_1_vld_in == 1'b1)))) begin
            packetOut_V_keep_V_1_state <= 2'd1;
        end else if (((~((packetOut_V_keep_V_1_vld_in == 1'b0) & (packetOut_V_keep_V_1_ack_out == 1'b1)) & ~((packetOut_V_keep_V_1_ack_out == 1'b0) & (packetOut_V_keep_V_1_vld_in == 1'b1)) & (packetOut_V_keep_V_1_state == 2'd3)) | ((packetOut_V_keep_V_1_state == 2'd1) & (packetOut_V_keep_V_1_ack_out == 1'b1)) | ((packetOut_V_keep_V_1_state == 2'd2) & (packetOut_V_keep_V_1_vld_in == 1'b1)))) begin
            packetOut_V_keep_V_1_state <= 2'd3;
        end else begin
            packetOut_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((packetOut_V_last_V_1_ack_out == 1'b1) & (packetOut_V_last_V_1_vld_out == 1'b1))) begin
            packetOut_V_last_V_1_sel_rd <= ~packetOut_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((packetOut_V_last_V_1_ack_in == 1'b1) & (packetOut_V_last_V_1_vld_in == 1'b1))) begin
            packetOut_V_last_V_1_sel_wr <= ~packetOut_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetOut_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((packetOut_V_last_V_1_state == 2'd2) & (packetOut_V_last_V_1_vld_in == 1'b0)) | ((packetOut_V_last_V_1_state == 2'd3) & (packetOut_V_last_V_1_vld_in == 1'b0) & (packetOut_V_last_V_1_ack_out == 1'b1)))) begin
            packetOut_V_last_V_1_state <= 2'd2;
        end else if ((((packetOut_V_last_V_1_state == 2'd1) & (packetOut_V_last_V_1_ack_out == 1'b0)) | ((packetOut_V_last_V_1_state == 2'd3) & (packetOut_V_last_V_1_ack_out == 1'b0) & (packetOut_V_last_V_1_vld_in == 1'b1)))) begin
            packetOut_V_last_V_1_state <= 2'd1;
        end else if (((~((packetOut_V_last_V_1_vld_in == 1'b0) & (packetOut_V_last_V_1_ack_out == 1'b1)) & ~((packetOut_V_last_V_1_ack_out == 1'b0) & (packetOut_V_last_V_1_vld_in == 1'b1)) & (packetOut_V_last_V_1_state == 2'd3)) | ((packetOut_V_last_V_1_state == 2'd1) & (packetOut_V_last_V_1_ack_out == 1'b1)) | ((packetOut_V_last_V_1_state == 2'd2) & (packetOut_V_last_V_1_vld_in == 1'b1)))) begin
            packetOut_V_last_V_1_state <= 2'd3;
        end else begin
            packetOut_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((packetOut_V_data_V_1_ack_in == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            p_s_reg_105 <= tmp_last_V_1_reg_206;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            p_s_reg_105 <= tmp_last_V_reg_190;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_data_V_0_load_A == 1'b1)) begin
        packetIn_V_data_V_0_payload_A <= packetIn_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_data_V_0_load_B == 1'b1)) begin
        packetIn_V_data_V_0_payload_B <= packetIn_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_dest_V_0_load_A == 1'b1)) begin
        packetIn_V_dest_V_0_payload_A <= packetIn_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_dest_V_0_load_B == 1'b1)) begin
        packetIn_V_dest_V_0_payload_B <= packetIn_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_keep_V_0_load_A == 1'b1)) begin
        packetIn_V_keep_V_0_payload_A <= packetIn_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_keep_V_0_load_B == 1'b1)) begin
        packetIn_V_keep_V_0_payload_B <= packetIn_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_last_V_0_load_A == 1'b1)) begin
        packetIn_V_last_V_0_payload_A <= packetIn_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((packetIn_V_last_V_0_load_B == 1'b1)) begin
        packetIn_V_last_V_0_payload_B <= packetIn_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((packetOut_V_data_V_1_load_A == 1'b1)) begin
        packetOut_V_data_V_1_payload_A <= packetOut_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((packetOut_V_data_V_1_load_B == 1'b1)) begin
        packetOut_V_data_V_1_payload_B <= packetOut_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((packetOut_V_keep_V_1_load_A == 1'b1)) begin
        packetOut_V_keep_V_1_payload_A <= packetOut_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((packetOut_V_keep_V_1_load_B == 1'b1)) begin
        packetOut_V_keep_V_1_payload_B <= packetOut_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((packetOut_V_last_V_1_load_A == 1'b1)) begin
        packetOut_V_last_V_1_payload_A <= packetOut_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((packetOut_V_last_V_1_load_B == 1'b1)) begin
        packetOut_V_last_V_1_payload_B <= packetOut_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_124 <= packetIn_V_data_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        temp_V_reg_180 <= temp_V_fu_139_p1;
        tmp_reg_175 <= {{eth_src_V[47:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_dest_V_reg_196 <= packetIn_V_dest_V_0_data_out;
        tmp_last_V_reg_190 <= packetIn_V_last_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_last_V_1_reg_206 <= packetIn_V_last_V_0_data_out;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        packetIn_TDATA_blk_n = packetIn_V_data_V_0_state[1'd0];
    end else begin
        packetIn_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetIn_V_data_V_0_ack_out = 1'b1;
    end else begin
        packetIn_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((packetIn_V_data_V_0_sel == 1'b1)) begin
        packetIn_V_data_V_0_data_out = packetIn_V_data_V_0_payload_B;
    end else begin
        packetIn_V_data_V_0_data_out = packetIn_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetIn_V_dest_V_0_ack_out = 1'b1;
    end else begin
        packetIn_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((packetIn_V_dest_V_0_sel == 1'b1)) begin
        packetIn_V_dest_V_0_data_out = packetIn_V_dest_V_0_payload_B;
    end else begin
        packetIn_V_dest_V_0_data_out = packetIn_V_dest_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetIn_V_keep_V_0_ack_out = 1'b1;
    end else begin
        packetIn_V_keep_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((packetIn_V_keep_V_0_sel == 1'b1)) begin
        packetIn_V_keep_V_0_data_out = packetIn_V_keep_V_0_payload_B;
    end else begin
        packetIn_V_keep_V_0_data_out = packetIn_V_keep_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetIn_V_last_V_0_ack_out = 1'b1;
    end else begin
        packetIn_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((packetIn_V_last_V_0_sel == 1'b1)) begin
        packetIn_V_last_V_0_data_out = packetIn_V_last_V_0_payload_B;
    end else begin
        packetIn_V_last_V_0_data_out = packetIn_V_last_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        packetOut_TDATA_blk_n = packetOut_V_data_V_1_state[1'd1];
    end else begin
        packetOut_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((packetIn_V_data_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        packetOut_V_data_V_1_data_in = packetIn_V_data_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        packetOut_V_data_V_1_data_in = reg_124;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        packetOut_V_data_V_1_data_in = p_Result_s_fu_154_p5;
    end else if (((packetIn_V_data_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        packetOut_V_data_V_1_data_in = packetHeader0_data_V_fu_143_p3;
    end else begin
        packetOut_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((packetOut_V_data_V_1_sel == 1'b1)) begin
        packetOut_V_data_V_1_data_out = packetOut_V_data_V_1_payload_B;
    end else begin
        packetOut_V_data_V_1_data_out = packetOut_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetOut_V_data_V_1_vld_in = 1'b1;
    end else begin
        packetOut_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((packetIn_V_data_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        packetOut_V_keep_V_1_data_in = packetIn_V_keep_V_0_data_out;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((packetIn_V_data_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetOut_V_keep_V_1_data_in = 8'd255;
    end else begin
        packetOut_V_keep_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((packetOut_V_keep_V_1_sel == 1'b1)) begin
        packetOut_V_keep_V_1_data_out = packetOut_V_keep_V_1_payload_B;
    end else begin
        packetOut_V_keep_V_1_data_out = packetOut_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetOut_V_keep_V_1_vld_in = 1'b1;
    end else begin
        packetOut_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((packetIn_V_data_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        packetOut_V_last_V_1_data_in = packetIn_V_last_V_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        packetOut_V_last_V_1_data_in = tmp_last_V_reg_190;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((packetIn_V_data_V_0_vld_out == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetOut_V_last_V_1_data_in = 1'd0;
    end else begin
        packetOut_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((packetOut_V_last_V_1_sel == 1'b1)) begin
        packetOut_V_last_V_1_data_out = packetOut_V_last_V_1_payload_B;
    end else begin
        packetOut_V_last_V_1_data_out = packetOut_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        packetOut_V_last_V_1_vld_in = 1'b1;
    end else begin
        packetOut_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if ((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((packetOut_V_keep_V_1_ack_in == 1'b0) | (packetOut_V_last_V_1_ack_in == 1'b0) | (packetOut_V_data_V_1_ack_in == 1'b0)) & (ap_phi_mux_p_s_phi_fu_108_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((packetOut_V_keep_V_1_ack_in == 1'b0) | (packetOut_V_last_V_1_ack_in == 1'b0) | (packetOut_V_data_V_1_ack_in == 1'b0)) & (ap_phi_mux_p_s_phi_fu_108_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((packetOut_V_data_V_1_ack_in == 1'b0) | (packetIn_V_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((packetOut_V_data_V_1_ack_in == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state6 = ((packetOut_V_keep_V_1_ack_in == 1'b0) | (packetOut_V_last_V_1_ack_in == 1'b0) | (packetOut_V_data_V_1_ack_in == 1'b0));
end

assign ap_phi_mux_p_s_phi_fu_108_p4 = p_s_reg_105;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign p_Result_s_fu_154_p5 = {{{{temp_V_reg_180}, {16'd29696}}, {tmp_dest_V_reg_196}}, {8'd0}};

assign packetHeader0_data_V_fu_143_p3 = {{eth_dst_V}, {tmp_reg_175}};

assign packetIn_TREADY = packetIn_V_keep_V_0_state[1'd1];

assign packetIn_V_data_V_0_ack_in = packetIn_V_data_V_0_state[1'd1];

assign packetIn_V_data_V_0_load_A = (packetIn_V_data_V_0_state_cmp_full & ~packetIn_V_data_V_0_sel_wr);

assign packetIn_V_data_V_0_load_B = (packetIn_V_data_V_0_state_cmp_full & packetIn_V_data_V_0_sel_wr);

assign packetIn_V_data_V_0_sel = packetIn_V_data_V_0_sel_rd;

assign packetIn_V_data_V_0_state_cmp_full = ((packetIn_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign packetIn_V_data_V_0_vld_in = packetIn_TVALID;

assign packetIn_V_data_V_0_vld_out = packetIn_V_data_V_0_state[1'd0];

assign packetIn_V_dest_V_0_ack_in = packetIn_V_dest_V_0_state[1'd1];

assign packetIn_V_dest_V_0_load_A = (packetIn_V_dest_V_0_state_cmp_full & ~packetIn_V_dest_V_0_sel_wr);

assign packetIn_V_dest_V_0_load_B = (packetIn_V_dest_V_0_state_cmp_full & packetIn_V_dest_V_0_sel_wr);

assign packetIn_V_dest_V_0_sel = packetIn_V_dest_V_0_sel_rd;

assign packetIn_V_dest_V_0_state_cmp_full = ((packetIn_V_dest_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign packetIn_V_dest_V_0_vld_in = packetIn_TVALID;

assign packetIn_V_dest_V_0_vld_out = packetIn_V_dest_V_0_state[1'd0];

assign packetIn_V_keep_V_0_ack_in = packetIn_V_keep_V_0_state[1'd1];

assign packetIn_V_keep_V_0_load_A = (packetIn_V_keep_V_0_state_cmp_full & ~packetIn_V_keep_V_0_sel_wr);

assign packetIn_V_keep_V_0_load_B = (packetIn_V_keep_V_0_state_cmp_full & packetIn_V_keep_V_0_sel_wr);

assign packetIn_V_keep_V_0_sel = packetIn_V_keep_V_0_sel_rd;

assign packetIn_V_keep_V_0_state_cmp_full = ((packetIn_V_keep_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign packetIn_V_keep_V_0_vld_in = packetIn_TVALID;

assign packetIn_V_keep_V_0_vld_out = packetIn_V_keep_V_0_state[1'd0];

assign packetIn_V_last_V_0_ack_in = packetIn_V_last_V_0_state[1'd1];

assign packetIn_V_last_V_0_load_A = (packetIn_V_last_V_0_state_cmp_full & ~packetIn_V_last_V_0_sel_wr);

assign packetIn_V_last_V_0_load_B = (packetIn_V_last_V_0_state_cmp_full & packetIn_V_last_V_0_sel_wr);

assign packetIn_V_last_V_0_sel = packetIn_V_last_V_0_sel_rd;

assign packetIn_V_last_V_0_state_cmp_full = ((packetIn_V_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign packetIn_V_last_V_0_vld_in = packetIn_TVALID;

assign packetIn_V_last_V_0_vld_out = packetIn_V_last_V_0_state[1'd0];

assign packetOut_TDATA = packetOut_V_data_V_1_data_out;

assign packetOut_TKEEP = packetOut_V_keep_V_1_data_out;

assign packetOut_TLAST = packetOut_V_last_V_1_data_out;

assign packetOut_TVALID = packetOut_V_keep_V_1_state[1'd0];

assign packetOut_V_data_V_1_ack_in = packetOut_V_data_V_1_state[1'd1];

assign packetOut_V_data_V_1_ack_out = packetOut_TREADY;

assign packetOut_V_data_V_1_load_A = (packetOut_V_data_V_1_state_cmp_full & ~packetOut_V_data_V_1_sel_wr);

assign packetOut_V_data_V_1_load_B = (packetOut_V_data_V_1_state_cmp_full & packetOut_V_data_V_1_sel_wr);

assign packetOut_V_data_V_1_sel = packetOut_V_data_V_1_sel_rd;

assign packetOut_V_data_V_1_state_cmp_full = ((packetOut_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign packetOut_V_data_V_1_vld_out = packetOut_V_data_V_1_state[1'd0];

assign packetOut_V_keep_V_1_ack_in = packetOut_V_keep_V_1_state[1'd1];

assign packetOut_V_keep_V_1_ack_out = packetOut_TREADY;

assign packetOut_V_keep_V_1_load_A = (packetOut_V_keep_V_1_state_cmp_full & ~packetOut_V_keep_V_1_sel_wr);

assign packetOut_V_keep_V_1_load_B = (packetOut_V_keep_V_1_state_cmp_full & packetOut_V_keep_V_1_sel_wr);

assign packetOut_V_keep_V_1_sel = packetOut_V_keep_V_1_sel_rd;

assign packetOut_V_keep_V_1_state_cmp_full = ((packetOut_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign packetOut_V_keep_V_1_vld_out = packetOut_V_keep_V_1_state[1'd0];

assign packetOut_V_last_V_1_ack_in = packetOut_V_last_V_1_state[1'd1];

assign packetOut_V_last_V_1_ack_out = packetOut_TREADY;

assign packetOut_V_last_V_1_load_A = (packetOut_V_last_V_1_state_cmp_full & ~packetOut_V_last_V_1_sel_wr);

assign packetOut_V_last_V_1_load_B = (packetOut_V_last_V_1_state_cmp_full & packetOut_V_last_V_1_sel_wr);

assign packetOut_V_last_V_1_sel = packetOut_V_last_V_1_sel_rd;

assign packetOut_V_last_V_1_state_cmp_full = ((packetOut_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign packetOut_V_last_V_1_vld_out = packetOut_V_last_V_1_state[1'd0];

assign temp_V_fu_139_p1 = eth_src_V[31:0];

endmodule //packetFormatter_hardcode_64
