-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity eth_dest_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    mac_table_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    mac_table_V_ce0 : OUT STD_LOGIC;
    mac_table_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    mac_addr : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_in_V_dout : IN STD_LOGIC_VECTOR (80 downto 0);
    stream_in_V_empty_n : IN STD_LOGIC;
    stream_in_V_read : OUT STD_LOGIC;
    stream_out_switch_V_din : OUT STD_LOGIC_VECTOR (80 downto 0);
    stream_out_switch_V_full_n : IN STD_LOGIC;
    stream_out_switch_V_write : OUT STD_LOGIC;
    stream_out_network_V_din : OUT STD_LOGIC_VECTOR (80 downto 0);
    stream_out_network_V_full_n : IN STD_LOGIC;
    stream_out_network_V_write : OUT STD_LOGIC );
end;


architecture behav of eth_dest_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "eth_dest_filter,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.911000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=200,HLS_SYN_LUT=59}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";

    signal stream_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_nbreadreq_fu_62_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_switch_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_reg_127 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_127_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inFPGA_reg_142 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_network_V_blk_n : STD_LOGIC;
    signal mac_addr_read_reg_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op29_write_state3 : BOOLEAN;
    signal ap_predicate_op31_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp22_reg_131 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp22_reg_131_pp0_iter1_reg : STD_LOGIC_VECTOR (80 downto 0);
    signal inFPGA_fu_117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_2_fu_112_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_tdest_V_fu_102_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_127 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                inFPGA_reg_142 <= inFPGA_fu_117_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mac_addr_read_reg_122 <= mac_addr;
                tmp22_reg_131_pp0_iter1_reg <= tmp22_reg_131;
                tmp_reg_127 <= (0=>stream_in_V_empty_n, others=>'-');
                tmp_reg_127_pp0_iter1_reg <= tmp_reg_127;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp22_reg_131 <= stream_in_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(stream_in_V_empty_n, stream_out_switch_V_full_n, stream_out_network_V_full_n, tmp_nbreadreq_fu_62_p3, ap_enable_reg_pp0_iter2, ap_predicate_op29_write_state3, ap_predicate_op31_write_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((stream_out_switch_V_full_n = ap_const_logic_0) and (ap_predicate_op31_write_state3 = ap_const_boolean_1)) or ((stream_out_network_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state3 = ap_const_boolean_1)))) or ((tmp_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (stream_in_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(stream_in_V_empty_n, stream_out_switch_V_full_n, stream_out_network_V_full_n, tmp_nbreadreq_fu_62_p3, ap_enable_reg_pp0_iter2, ap_predicate_op29_write_state3, ap_predicate_op31_write_state3)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((stream_out_switch_V_full_n = ap_const_logic_0) and (ap_predicate_op31_write_state3 = ap_const_boolean_1)) or ((stream_out_network_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state3 = ap_const_boolean_1)))) or ((tmp_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (stream_in_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(stream_in_V_empty_n, stream_out_switch_V_full_n, stream_out_network_V_full_n, tmp_nbreadreq_fu_62_p3, ap_enable_reg_pp0_iter2, ap_predicate_op29_write_state3, ap_predicate_op31_write_state3)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((stream_out_switch_V_full_n = ap_const_logic_0) and (ap_predicate_op31_write_state3 = ap_const_boolean_1)) or ((stream_out_network_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state3 = ap_const_boolean_1)))) or ((tmp_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (stream_in_V_empty_n = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(stream_in_V_empty_n, tmp_nbreadreq_fu_62_p3)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((tmp_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (stream_in_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_out_switch_V_full_n, stream_out_network_V_full_n, ap_predicate_op29_write_state3, ap_predicate_op31_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((stream_out_switch_V_full_n = ap_const_logic_0) and (ap_predicate_op31_write_state3 = ap_const_boolean_1)) or ((stream_out_network_V_full_n = ap_const_logic_0) and (ap_predicate_op29_write_state3 = ap_const_boolean_1)));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op29_write_state3_assign_proc : process(tmp_reg_127_pp0_iter1_reg, inFPGA_reg_142)
    begin
                ap_predicate_op29_write_state3 <= ((inFPGA_reg_142 = ap_const_lv1_0) and (tmp_reg_127_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op31_write_state3_assign_proc : process(tmp_reg_127_pp0_iter1_reg, inFPGA_reg_142)
    begin
                ap_predicate_op31_write_state3 <= ((inFPGA_reg_142 = ap_const_lv1_1) and (tmp_reg_127_pp0_iter1_reg = ap_const_lv1_1));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;
    inFPGA_fu_117_p2 <= "1" when (mac_table_V_q0 = mac_addr_read_reg_122) else "0";
    mac_table_V_address0 <= tmp_2_fu_112_p1(8 - 1 downto 0);

    mac_table_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mac_table_V_ce0 <= ap_const_logic_1;
        else 
            mac_table_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_blk_n_assign_proc : process(stream_in_V_empty_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_nbreadreq_fu_62_p3)
    begin
        if (((tmp_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_blk_n <= stream_in_V_empty_n;
        else 
            stream_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_62_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_62_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_read <= ap_const_logic_1;
        else 
            stream_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_network_V_blk_n_assign_proc : process(stream_out_network_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_reg_127_pp0_iter1_reg, inFPGA_reg_142)
    begin
        if (((inFPGA_reg_142 = ap_const_lv1_0) and (tmp_reg_127_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_network_V_blk_n <= stream_out_network_V_full_n;
        else 
            stream_out_network_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_network_V_din <= tmp22_reg_131_pp0_iter1_reg;

    stream_out_network_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op29_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op29_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_network_V_write <= ap_const_logic_1;
        else 
            stream_out_network_V_write <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_switch_V_blk_n_assign_proc : process(stream_out_switch_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_reg_127_pp0_iter1_reg, inFPGA_reg_142)
    begin
        if (((inFPGA_reg_142 = ap_const_lv1_1) and (tmp_reg_127_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_switch_V_blk_n <= stream_out_switch_V_full_n;
        else 
            stream_out_switch_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_switch_V_din <= tmp22_reg_131_pp0_iter1_reg;

    stream_out_switch_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op31_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op31_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_switch_V_write <= ap_const_logic_1;
        else 
            stream_out_switch_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_tdest_V_fu_102_p4),64));
    tmp_nbreadreq_fu_62_p3 <= (0=>stream_in_V_empty_n, others=>'-');
    tmp_tdest_V_fu_102_p4 <= stream_in_V_dout(72 downto 65);
end behav;
