// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _eth_dest_filter_HH_
#define _eth_dest_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct eth_dest_filter : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<8> > mac_table_V_address0;
    sc_out< sc_logic > mac_table_V_ce0;
    sc_in< sc_lv<32> > mac_table_V_q0;
    sc_in< sc_lv<32> > mac_addr;
    sc_in< sc_lv<81> > stream_in_V_dout;
    sc_in< sc_logic > stream_in_V_empty_n;
    sc_out< sc_logic > stream_in_V_read;
    sc_out< sc_lv<81> > stream_out_switch_V_din;
    sc_in< sc_logic > stream_out_switch_V_full_n;
    sc_out< sc_logic > stream_out_switch_V_write;
    sc_out< sc_lv<81> > stream_out_network_V_din;
    sc_in< sc_logic > stream_out_network_V_full_n;
    sc_out< sc_logic > stream_out_network_V_write;


    // Module declarations
    eth_dest_filter(sc_module_name name);
    SC_HAS_PROCESS(eth_dest_filter);

    ~eth_dest_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > stream_in_V_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_62_p3;
    sc_signal< sc_logic > stream_out_switch_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > tmp_reg_127;
    sc_signal< sc_lv<1> > tmp_reg_127_pp0_iter1_reg;
    sc_signal< sc_lv<1> > inFPGA_reg_142;
    sc_signal< sc_logic > stream_out_network_V_blk_n;
    sc_signal< sc_lv<32> > mac_addr_read_reg_122;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_predicate_op29_write_state3;
    sc_signal< bool > ap_predicate_op31_write_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<81> > tmp22_reg_131;
    sc_signal< sc_lv<81> > tmp22_reg_131_pp0_iter1_reg;
    sc_signal< sc_lv<1> > inFPGA_fu_117_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > tmp_2_fu_112_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > tmp_tdest_V_fu_102_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<32> ap_const_lv32_48;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op29_write_state3();
    void thread_ap_predicate_op31_write_state3();
    void thread_ap_reset_idle_pp0();
    void thread_inFPGA_fu_117_p2();
    void thread_mac_table_V_address0();
    void thread_mac_table_V_ce0();
    void thread_stream_in_V_blk_n();
    void thread_stream_in_V_read();
    void thread_stream_out_network_V_blk_n();
    void thread_stream_out_network_V_din();
    void thread_stream_out_network_V_write();
    void thread_stream_out_switch_V_blk_n();
    void thread_stream_out_switch_V_din();
    void thread_stream_out_switch_V_write();
    void thread_tmp_2_fu_112_p1();
    void thread_tmp_nbreadreq_fu_62_p3();
    void thread_tmp_tdest_V_fu_102_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
