-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity app_to_eth is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    from_app_V_dout : IN STD_LOGIC_VECTOR (80 downto 0);
    from_app_V_empty_n : IN STD_LOGIC;
    from_app_V_read : OUT STD_LOGIC;
    src_mac_address_V_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    src_mac_address_V_empty_n : IN STD_LOGIC;
    src_mac_address_V_read : OUT STD_LOGIC;
    to_eth_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    to_eth_V_full_n : IN STD_LOGIC;
    to_eth_V_write : OUT STD_LOGIC;
    mac_table_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    mac_table_V_ce0 : OUT STD_LOGIC;
    mac_table_V_q0 : IN STD_LOGIC_VECTOR (47 downto 0) );
end;


architecture behav of app_to_eth is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_7400 : STD_LOGIC_VECTOR (15 downto 0) := "0111010000000000";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal state_V_load_load_fu_213_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nbreadreq_fu_128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op9_read_state1 : BOOLEAN;
    signal ap_predicate_op34_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal state_V_load_reg_580 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_reg_601 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op59_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal eth_dst_src_V : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal state_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal app_packet_in_data_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal app_packet_in_last_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal dest_mac_address_V : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    signal app_packet_in_tkeep_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal app_packet_in_tdest_s : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal from_app_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal to_eth_V_blk_n : STD_LOGIC;
    signal src_mac_address_V_blk_n : STD_LOGIC;
    signal lhs_V_reg_584 : STD_LOGIC_VECTOR (63 downto 0);
    signal app_packet_in_tkeep_1_reg_596 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_239_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_reg_605 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_reg_610 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_reg_615 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_reg_620 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_reg_625 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_reg_630 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_reg_635 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_reg_640 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_313_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_reg_645 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_650 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_i_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_520_fu_396_p11 : STD_LOGIC_VECTOR (72 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_3_fu_487_p11 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_2_fu_530_p3 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_1_fu_563_p4 : STD_LOGIC_VECTOR (72 downto 0);
    signal p_Result_s_fu_539_p3 : STD_LOGIC_VECTOR (95 downto 0);
    signal storemerge_i_fu_323_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal storemerge3_i_fu_337_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs_V_1_fu_229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_181_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_478_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_fu_412_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_424_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_433_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_460_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_fu_442_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_469_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_451_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_415_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_V_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_fu_516_p4 : STD_LOGIC_VECTOR (55 downto 0);
    signal tmp_data_V_fu_526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_i_fu_553_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_100 : BOOLEAN;
    signal ap_condition_193 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    app_packet_in_data_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_100)) then
                if ((ap_predicate_op34_read_state1 = ap_const_boolean_1)) then 
                    app_packet_in_data_V <= tmp_39_fu_363_p1;
                elsif ((ap_predicate_op9_read_state1 = ap_const_boolean_1)) then 
                    app_packet_in_data_V <= lhs_V_1_fu_229_p1;
                end if;
            end if; 
        end if;
    end process;

    state_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_100)) then
                if ((ap_predicate_op34_read_state1 = ap_const_boolean_1)) then 
                    state_V <= ap_const_lv3_1;
                elsif ((state_V_load_load_fu_213_p1 = ap_const_lv3_1)) then 
                    state_V <= ap_const_lv3_2;
                elsif ((state_V_load_load_fu_213_p1 = ap_const_lv3_2)) then 
                    state_V <= ap_const_lv3_3;
                elsif ((state_V_load_load_fu_213_p1 = ap_const_lv3_3)) then 
                    state_V <= storemerge3_i_fu_337_p3;
                elsif ((ap_predicate_op9_read_state1 = ap_const_boolean_1)) then 
                    state_V <= storemerge_i_fu_323_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)))) then
                app_packet_in_last_V <= from_app_V_dout(64 downto 64);
                app_packet_in_tdest_s <= from_app_V_dout(72 downto 65);
                app_packet_in_tkeep_s <= from_app_V_dout(80 downto 73);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                app_packet_in_tkeep_1_reg_596 <= app_packet_in_tkeep_s;
                lhs_V_reg_584 <= app_packet_in_data_V;
                state_V_load_reg_580 <= state_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_V_load_reg_580 = ap_const_lv3_0) and (tmp_reg_650 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                dest_mac_address_V <= mac_table_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_V_load_reg_580 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                eth_dst_src_V <= p_Result_s_fu_539_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1))) then
                tmp_27_reg_610 <= from_app_V_dout(63 downto 56);
                tmp_28_reg_615 <= from_app_V_dout(15 downto 8);
                tmp_29_reg_620 <= from_app_V_dout(23 downto 16);
                tmp_30_reg_625 <= from_app_V_dout(39 downto 32);
                tmp_31_reg_630 <= from_app_V_dout(55 downto 48);
                tmp_32_reg_635 <= from_app_V_dout(31 downto 24);
                tmp_33_reg_640 <= from_app_V_dout(47 downto 40);
                tmp_34_reg_645 <= tmp_34_fu_313_p4;
                tmp_43_reg_605 <= tmp_43_fu_239_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_V = ap_const_lv3_4) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_4_reg_601 <= (0=>from_app_V_empty_n, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_V = ap_const_lv3_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_650 <= (0=>from_app_V_empty_n, others=>'-');
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, from_app_V_empty_n, ap_predicate_op9_read_state1, ap_predicate_op34_read_state1, src_mac_address_V_empty_n, to_eth_V_full_n, state_V_load_reg_580, ap_predicate_op59_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((src_mac_address_V_empty_n = ap_const_logic_0) or ((state_V_load_reg_580 = ap_const_lv3_1) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_2) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_3) and (to_eth_V_full_n = ap_const_logic_0)) or ((to_eth_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1)) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, from_app_V_empty_n, ap_predicate_op9_read_state1, ap_predicate_op34_read_state1, src_mac_address_V_empty_n, to_eth_V_full_n, state_V_load_reg_580, ap_predicate_op59_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((src_mac_address_V_empty_n = ap_const_logic_0) or ((state_V_load_reg_580 = ap_const_lv3_1) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_2) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_3) and (to_eth_V_full_n = ap_const_logic_0)) or ((to_eth_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1)) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, from_app_V_empty_n, ap_predicate_op9_read_state1, ap_predicate_op34_read_state1, src_mac_address_V_empty_n, to_eth_V_full_n, state_V_load_reg_580, ap_predicate_op59_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((src_mac_address_V_empty_n = ap_const_logic_0) or ((state_V_load_reg_580 = ap_const_lv3_1) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_2) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_3) and (to_eth_V_full_n = ap_const_logic_0)) or ((to_eth_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)))) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1)) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, from_app_V_empty_n, ap_predicate_op9_read_state1, ap_predicate_op34_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1)) or ((from_app_V_empty_n = ap_const_logic_0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(src_mac_address_V_empty_n, to_eth_V_full_n, state_V_load_reg_580, ap_predicate_op59_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((src_mac_address_V_empty_n = ap_const_logic_0) or ((state_V_load_reg_580 = ap_const_lv3_1) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_2) and (to_eth_V_full_n = ap_const_logic_0)) or ((state_V_load_reg_580 = ap_const_lv3_3) and (to_eth_V_full_n = ap_const_logic_0)) or ((to_eth_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)));
    end process;


    ap_condition_100_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_100 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_193_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_193 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op34_read_state1_assign_proc : process(grp_nbreadreq_fu_128_p3, state_V)
    begin
                ap_predicate_op34_read_state1 <= ((grp_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (state_V = ap_const_lv3_0));
    end process;


    ap_predicate_op59_write_state2_assign_proc : process(state_V_load_reg_580, tmp_4_reg_601)
    begin
                ap_predicate_op59_write_state2 <= ((tmp_4_reg_601 = ap_const_lv1_1) and (state_V_load_reg_580 = ap_const_lv3_4));
    end process;


    ap_predicate_op9_read_state1_assign_proc : process(grp_nbreadreq_fu_128_p3, state_V)
    begin
                ap_predicate_op9_read_state1 <= ((grp_nbreadreq_fu_128_p3 = ap_const_lv1_1) and (state_V = ap_const_lv3_4));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    from_app_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, from_app_V_empty_n, ap_predicate_op9_read_state1, ap_predicate_op34_read_state1, ap_block_pp0_stage0)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            from_app_V_blk_n <= from_app_V_empty_n;
        else 
            from_app_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    from_app_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op9_read_state1, ap_predicate_op34_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op9_read_state1 = ap_const_boolean_1)))) then 
            from_app_V_read <= ap_const_logic_1;
        else 
            from_app_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_167_p3 <= from_app_V_dout(64 downto 64);
    grp_fu_181_p4 <= from_app_V_dout(72 downto 65);
    grp_nbreadreq_fu_128_p3 <= (0=>from_app_V_empty_n, others=>'-');
    lhs_V_1_fu_229_p1 <= from_app_V_dout(64 - 1 downto 0);
    mac_table_V_address0 <= tmp_i_fu_373_p1(8 - 1 downto 0);

    mac_table_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            mac_table_V_ce0 <= ap_const_logic_1;
        else 
            mac_table_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_516_p4 <= ((temp_V_fu_388_p1 & ap_const_lv16_7400) & app_packet_in_tdest_s);
    p_Result_s_fu_539_p3 <= (dest_mac_address_V & src_mac_address_V_dout);

    src_mac_address_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, src_mac_address_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            src_mac_address_V_blk_n <= src_mac_address_V_empty_n;
        else 
            src_mac_address_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_mac_address_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_mac_address_V_read <= ap_const_logic_1;
        else 
            src_mac_address_V_read <= ap_const_logic_0;
        end if; 
    end process;

    state_V_load_load_fu_213_p1 <= state_V;
    storemerge3_i_fu_337_p3 <= 
        ap_const_lv3_0 when (app_packet_in_last_V(0) = '1') else 
        ap_const_lv3_4;
    storemerge_i_fu_323_p3 <= 
        ap_const_lv3_0 when (grp_fu_167_p3(0) = '1') else 
        ap_const_lv3_4;
    temp_V_fu_388_p1 <= eth_dst_src_V(32 - 1 downto 0);
    tmp_1_fu_563_p4 <= ((ap_const_lv9_1FE & dest_mac_address_V) & tmp_5_i_fu_553_p4);
    tmp_20_fu_424_p4 <= lhs_V_reg_584(15 downto 8);
    tmp_21_fu_433_p4 <= lhs_V_reg_584(23 downto 16);
    tmp_22_fu_442_p4 <= lhs_V_reg_584(39 downto 32);
    tmp_23_fu_451_p4 <= lhs_V_reg_584(55 downto 48);
    tmp_24_fu_460_p4 <= lhs_V_reg_584(31 downto 24);
    tmp_25_fu_469_p4 <= lhs_V_reg_584(47 downto 40);
    
    tmp_26_fu_478_p4_proc : process(app_packet_in_tkeep_1_reg_596)
    variable vlo_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable tmp_26_fu_478_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(3 - 1 downto 0) := ap_const_lv32_7(3 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(3 - 1 downto 0) := ap_const_lv32_0(3 - 1 downto 0);
        v0_cpy := app_packet_in_tkeep_1_reg_596;
        if (vlo_cpy(3 - 1 downto 0) > vhi_cpy(3 - 1 downto 0)) then
            vhi_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_0(3-1 downto 0)));
            vlo_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_7(3-1 downto 0)));
            for tmp_26_fu_478_p4_i in 0 to 8-1 loop
                v0_cpy(tmp_26_fu_478_p4_i) := app_packet_in_tkeep_1_reg_596(8-1-tmp_26_fu_478_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(3-1 downto 0)))));

        section := (others=>'0');
        section(3-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(3-1 downto 0)) - unsigned(vlo_cpy(3-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(8-1 downto 0)))));
        res_mask := res_mask(8-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_26_fu_478_p4 <= resvalue(8-1 downto 0);
    end process;

    tmp_2_fu_530_p3 <= (ap_const_lv9_1FE & tmp_data_V_fu_526_p1);
    
    tmp_34_fu_313_p4_proc : process(from_app_V_dout)
    variable vlo_cpy : STD_LOGIC_VECTOR(81+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(81+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(81 - 1 downto 0);
    variable tmp_34_fu_313_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(81 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(81 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(81 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_50(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_49(7 - 1 downto 0);
        v0_cpy := from_app_V_dout;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(81-1-unsigned(ap_const_lv32_49(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(81-1-unsigned(ap_const_lv32_50(7-1 downto 0)));
            for tmp_34_fu_313_p4_i in 0 to 81-1 loop
                v0_cpy(tmp_34_fu_313_p4_i) := from_app_V_dout(81-1-tmp_34_fu_313_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(81-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_34_fu_313_p4 <= resvalue(8-1 downto 0);
    end process;

    tmp_38_fu_412_p1 <= lhs_V_reg_584(8 - 1 downto 0);
    tmp_39_fu_363_p1 <= from_app_V_dout(64 - 1 downto 0);
    tmp_3_fu_487_p11 <= (((((((((tmp_26_fu_478_p4 & ap_const_lv1_0) & tmp_38_fu_412_p1) & tmp_20_fu_424_p4) & tmp_21_fu_433_p4) & tmp_24_fu_460_p4) & tmp_22_fu_442_p4) & tmp_25_fu_469_p4) & tmp_23_fu_451_p4) & tmp_s_fu_415_p4);
    tmp_43_fu_239_p1 <= from_app_V_dout(8 - 1 downto 0);
    tmp_520_fu_396_p11 <= (((((((((tmp_34_reg_645 & ap_const_lv1_0) & tmp_43_reg_605) & tmp_28_reg_615) & tmp_29_reg_620) & tmp_32_reg_635) & tmp_30_reg_625) & tmp_33_reg_640) & tmp_31_reg_630) & tmp_27_reg_610);
    tmp_5_i_fu_553_p4 <= src_mac_address_V_dout(47 downto 32);
    tmp_data_V_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_516_p4),64));
    tmp_i_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_181_p4),64));
    tmp_s_fu_415_p4 <= lhs_V_reg_584(63 downto 56);

    to_eth_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, to_eth_V_full_n, state_V_load_reg_580, ap_predicate_op59_write_state2, ap_block_pp0_stage0)
    begin
        if ((((state_V_load_reg_580 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((state_V_load_reg_580 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((state_V_load_reg_580 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            to_eth_V_blk_n <= to_eth_V_full_n;
        else 
            to_eth_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    to_eth_V_din_assign_proc : process(state_V_load_reg_580, ap_predicate_op59_write_state2, tmp_520_fu_396_p11, tmp_3_fu_487_p11, tmp_2_fu_530_p3, tmp_1_fu_563_p4, ap_condition_193)
    begin
        if ((ap_const_boolean_1 = ap_condition_193)) then
            if ((state_V_load_reg_580 = ap_const_lv3_1)) then 
                to_eth_V_din <= tmp_1_fu_563_p4;
            elsif ((state_V_load_reg_580 = ap_const_lv3_2)) then 
                to_eth_V_din <= tmp_2_fu_530_p3;
            elsif ((state_V_load_reg_580 = ap_const_lv3_3)) then 
                to_eth_V_din <= tmp_3_fu_487_p11;
            elsif ((ap_predicate_op59_write_state2 = ap_const_boolean_1)) then 
                to_eth_V_din <= tmp_520_fu_396_p11;
            else 
                to_eth_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            to_eth_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    to_eth_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, state_V_load_reg_580, ap_predicate_op59_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_V_load_reg_580 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_V_load_reg_580 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (state_V_load_reg_580 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op59_write_state2 = ap_const_boolean_1)))) then 
            to_eth_V_write <= ap_const_logic_1;
        else 
            to_eth_V_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
