// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module ethernet_bridge_top (
mac_table_V_Clk_A,
mac_table_V_Rst_A,
mac_table_V_EN_A,
mac_table_V_WEN_A,
mac_table_V_Addr_A,
mac_table_V_Dout_A,
mac_table_V_Din_A,
mac_table_V_Clk_B,
mac_table_V_Rst_B,
mac_table_V_EN_B,
mac_table_V_WEN_B,
mac_table_V_Addr_B,
mac_table_V_Dout_B,
mac_table_V_Din_B,
from_app_V_TVALID,
from_app_V_TREADY,
from_app_V_TDATA,
from_app_V_TLAST,
from_app_V_TDEST,
from_app_V_TKEEP,
from_eth_V_TVALID,
from_eth_V_TREADY,
from_eth_V_TDATA,
from_eth_V_TLAST,
from_eth_V_TKEEP,
to_app_V_TVALID,
to_app_V_TREADY,
to_app_V_TDATA,
to_app_V_TLAST,
to_app_V_TDEST,
to_app_V_TKEEP,
to_eth_V_TVALID,
to_eth_V_TREADY,
to_eth_V_TDATA,
to_eth_V_TLAST,
to_eth_V_TKEEP,
aresetn,
aclk,
mac_addr_V
);

parameter RESET_ACTIVE_LOW = 1;

output mac_table_V_Clk_A ;
output mac_table_V_Rst_A ;
output mac_table_V_EN_A ;
output [8 - 1:0] mac_table_V_WEN_A ;
output [32 - 1:0] mac_table_V_Addr_A ;
output [64 - 1:0] mac_table_V_Dout_A ;
input [64 - 1:0] mac_table_V_Din_A ;
output mac_table_V_Clk_B ;
output mac_table_V_Rst_B ;
output mac_table_V_EN_B ;
output [8 - 1:0] mac_table_V_WEN_B ;
output [32 - 1:0] mac_table_V_Addr_B ;
output [64 - 1:0] mac_table_V_Dout_B ;
input [64 - 1:0] mac_table_V_Din_B ;


input from_app_V_TVALID ;
output from_app_V_TREADY ;
input [64 - 1:0] from_app_V_TDATA ;
input [1 - 1:0] from_app_V_TLAST ;
input [8 - 1:0] from_app_V_TDEST ;
input [8 - 1:0] from_app_V_TKEEP ;


input from_eth_V_TVALID ;
output from_eth_V_TREADY ;
input [64 - 1:0] from_eth_V_TDATA ;
input [1 - 1:0] from_eth_V_TLAST ;
input [8 - 1:0] from_eth_V_TKEEP ;


output to_app_V_TVALID ;
input to_app_V_TREADY ;
output [64 - 1:0] to_app_V_TDATA ;
output [1 - 1:0] to_app_V_TLAST ;
output [8 - 1:0] to_app_V_TDEST ;
output [8 - 1:0] to_app_V_TKEEP ;


output to_eth_V_TVALID ;
input to_eth_V_TREADY ;
output [64 - 1:0] to_eth_V_TDATA ;
output [1 - 1:0] to_eth_V_TLAST ;
output [8 - 1:0] to_eth_V_TKEEP ;

input aresetn ;

input aclk ;

input [48 - 1:0] mac_addr_V ;


wire mac_table_V_Clk_A;
wire mac_table_V_Rst_A;
wire mac_table_V_EN_A;
wire [8 - 1:0] mac_table_V_WEN_A;
wire [32 - 1:0] mac_table_V_Addr_A;
wire [64 - 1:0] mac_table_V_Dout_A;
wire [64 - 1:0] mac_table_V_Din_A;
wire mac_table_V_Clk_B;
wire mac_table_V_Rst_B;
wire mac_table_V_EN_B;
wire [8 - 1:0] mac_table_V_WEN_B;
wire [32 - 1:0] mac_table_V_Addr_B;
wire [64 - 1:0] mac_table_V_Dout_B;
wire [64 - 1:0] mac_table_V_Din_B;


wire from_app_V_TVALID;
wire from_app_V_TREADY;
wire [64 - 1:0] from_app_V_TDATA;
wire [1 - 1:0] from_app_V_TLAST;
wire [8 - 1:0] from_app_V_TDEST;
wire [8 - 1:0] from_app_V_TKEEP;


wire from_eth_V_TVALID;
wire from_eth_V_TREADY;
wire [64 - 1:0] from_eth_V_TDATA;
wire [1 - 1:0] from_eth_V_TLAST;
wire [8 - 1:0] from_eth_V_TKEEP;


wire to_app_V_TVALID;
wire to_app_V_TREADY;
wire [64 - 1:0] to_app_V_TDATA;
wire [1 - 1:0] to_app_V_TLAST;
wire [8 - 1:0] to_app_V_TDEST;
wire [8 - 1:0] to_app_V_TKEEP;


wire to_eth_V_TVALID;
wire to_eth_V_TREADY;
wire [64 - 1:0] to_eth_V_TDATA;
wire [1 - 1:0] to_eth_V_TLAST;
wire [8 - 1:0] to_eth_V_TKEEP;

wire aresetn;



wire [8 - 1:0] sig_ethernet_bridge_mac_table_V_address0;
wire sig_ethernet_bridge_mac_table_V_ce0;
wire [48 - 1:0] sig_ethernet_bridge_mac_table_V_d0;
wire [48 - 1:0] sig_ethernet_bridge_mac_table_V_q0;
wire sig_ethernet_bridge_mac_table_V_we0;
wire [8 - 1:0] sig_ethernet_bridge_mac_table_V_address1;
wire sig_ethernet_bridge_mac_table_V_ce1;
wire [48 - 1:0] sig_ethernet_bridge_mac_table_V_d1;
wire [48 - 1:0] sig_ethernet_bridge_mac_table_V_q1;
wire sig_ethernet_bridge_mac_table_V_we1;

wire [81 - 1:0] sig_ethernet_bridge_from_app_V_dout;
wire sig_ethernet_bridge_from_app_V_empty_n;
wire sig_ethernet_bridge_from_app_V_read;

wire [73 - 1:0] sig_ethernet_bridge_from_eth_V_dout;
wire sig_ethernet_bridge_from_eth_V_empty_n;
wire sig_ethernet_bridge_from_eth_V_read;

wire [81 - 1:0] sig_ethernet_bridge_to_app_V_din;
wire sig_ethernet_bridge_to_app_V_full_n;
wire sig_ethernet_bridge_to_app_V_write;

wire [73 - 1:0] sig_ethernet_bridge_to_eth_V_din;
wire sig_ethernet_bridge_to_eth_V_full_n;
wire sig_ethernet_bridge_to_eth_V_write;

wire sig_ethernet_bridge_ap_rst;



ethernet_bridge ethernet_bridge_U(
    .mac_table_V_address0(sig_ethernet_bridge_mac_table_V_address0),
    .mac_table_V_ce0(sig_ethernet_bridge_mac_table_V_ce0),
    .mac_table_V_d0(sig_ethernet_bridge_mac_table_V_d0),
    .mac_table_V_q0(sig_ethernet_bridge_mac_table_V_q0),
    .mac_table_V_we0(sig_ethernet_bridge_mac_table_V_we0),
    .mac_table_V_address1(sig_ethernet_bridge_mac_table_V_address1),
    .mac_table_V_ce1(sig_ethernet_bridge_mac_table_V_ce1),
    .mac_table_V_d1(sig_ethernet_bridge_mac_table_V_d1),
    .mac_table_V_q1(sig_ethernet_bridge_mac_table_V_q1),
    .mac_table_V_we1(sig_ethernet_bridge_mac_table_V_we1),
    .from_app_V_dout(sig_ethernet_bridge_from_app_V_dout),
    .from_app_V_empty_n(sig_ethernet_bridge_from_app_V_empty_n),
    .from_app_V_read(sig_ethernet_bridge_from_app_V_read),
    .from_eth_V_dout(sig_ethernet_bridge_from_eth_V_dout),
    .from_eth_V_empty_n(sig_ethernet_bridge_from_eth_V_empty_n),
    .from_eth_V_read(sig_ethernet_bridge_from_eth_V_read),
    .to_app_V_din(sig_ethernet_bridge_to_app_V_din),
    .to_app_V_full_n(sig_ethernet_bridge_to_app_V_full_n),
    .to_app_V_write(sig_ethernet_bridge_to_app_V_write),
    .to_eth_V_din(sig_ethernet_bridge_to_eth_V_din),
    .to_eth_V_full_n(sig_ethernet_bridge_to_eth_V_full_n),
    .to_eth_V_write(sig_ethernet_bridge_to_eth_V_write),
    .ap_rst(sig_ethernet_bridge_ap_rst),
    .ap_clk(aclk),
    .mac_addr_V(mac_addr_V)
);

ethernet_bridge_mac_table_V_if ethernet_bridge_mac_table_V_if_U(
    .clk(aclk),
    .reset(sig_ethernet_bridge_ap_rst_n),
    .mac_table_V_address0(sig_ethernet_bridge_mac_table_V_address0),
    .mac_table_V_ce0(sig_ethernet_bridge_mac_table_V_ce0),
    .mac_table_V_d0(sig_ethernet_bridge_mac_table_V_d0),
    .mac_table_V_q0(sig_ethernet_bridge_mac_table_V_q0),
    .mac_table_V_we0(sig_ethernet_bridge_mac_table_V_we0),
    .mac_table_V_address1(sig_ethernet_bridge_mac_table_V_address1),
    .mac_table_V_ce1(sig_ethernet_bridge_mac_table_V_ce1),
    .mac_table_V_d1(sig_ethernet_bridge_mac_table_V_d1),
    .mac_table_V_q1(sig_ethernet_bridge_mac_table_V_q1),
    .mac_table_V_we1(sig_ethernet_bridge_mac_table_V_we1),
    .Clk_A(mac_table_V_Clk_A),
    .Rst_A(mac_table_V_Rst_A),
    .EN_A(mac_table_V_EN_A),
    .WEN_A(mac_table_V_WEN_A),
    .Addr_A(mac_table_V_Addr_A),
    .Dout_A(mac_table_V_Dout_A),
    .Din_A(mac_table_V_Din_A),
    .Clk_B(mac_table_V_Clk_B),
    .Rst_B(mac_table_V_Rst_B),
    .EN_B(mac_table_V_EN_B),
    .WEN_B(mac_table_V_WEN_B),
    .Addr_B(mac_table_V_Addr_B),
    .Dout_B(mac_table_V_Dout_B),
    .Din_B(mac_table_V_Din_B));

ethernet_bridge_from_app_V_if ethernet_bridge_from_app_V_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .from_app_V_dout(sig_ethernet_bridge_from_app_V_dout),
    .from_app_V_empty_n(sig_ethernet_bridge_from_app_V_empty_n),
    .from_app_V_read(sig_ethernet_bridge_from_app_V_read),
    .TVALID(from_app_V_TVALID),
    .TREADY(from_app_V_TREADY),
    .TDATA(from_app_V_TDATA),
    .TLAST(from_app_V_TLAST),
    .TDEST(from_app_V_TDEST),
    .TKEEP(from_app_V_TKEEP));

ethernet_bridge_from_eth_V_if ethernet_bridge_from_eth_V_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .from_eth_V_dout(sig_ethernet_bridge_from_eth_V_dout),
    .from_eth_V_empty_n(sig_ethernet_bridge_from_eth_V_empty_n),
    .from_eth_V_read(sig_ethernet_bridge_from_eth_V_read),
    .TVALID(from_eth_V_TVALID),
    .TREADY(from_eth_V_TREADY),
    .TDATA(from_eth_V_TDATA),
    .TLAST(from_eth_V_TLAST),
    .TKEEP(from_eth_V_TKEEP));

ethernet_bridge_to_app_V_if ethernet_bridge_to_app_V_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .to_app_V_din(sig_ethernet_bridge_to_app_V_din),
    .to_app_V_full_n(sig_ethernet_bridge_to_app_V_full_n),
    .to_app_V_write(sig_ethernet_bridge_to_app_V_write),
    .TVALID(to_app_V_TVALID),
    .TREADY(to_app_V_TREADY),
    .TDATA(to_app_V_TDATA),
    .TLAST(to_app_V_TLAST),
    .TDEST(to_app_V_TDEST),
    .TKEEP(to_app_V_TKEEP));

ethernet_bridge_to_eth_V_if ethernet_bridge_to_eth_V_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .to_eth_V_din(sig_ethernet_bridge_to_eth_V_din),
    .to_eth_V_full_n(sig_ethernet_bridge_to_eth_V_full_n),
    .to_eth_V_write(sig_ethernet_bridge_to_eth_V_write),
    .TVALID(to_eth_V_TVALID),
    .TREADY(to_eth_V_TREADY),
    .TDATA(to_eth_V_TDATA),
    .TLAST(to_eth_V_TLAST),
    .TKEEP(to_eth_V_TKEEP));

ethernet_bridge_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_ethernet_bridge_ap_rst),
    .din(aresetn));

endmodule
