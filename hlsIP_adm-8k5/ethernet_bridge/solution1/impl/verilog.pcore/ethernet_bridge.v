// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ethernet_bridge,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.330200,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=483,HLS_SYN_LUT=398}" *)

module ethernet_bridge (
        to_app_V_din,
        to_app_V_full_n,
        to_app_V_write,
        from_eth_V_dout,
        from_eth_V_empty_n,
        from_eth_V_read,
        from_app_V_dout,
        from_app_V_empty_n,
        from_app_V_read,
        to_eth_V_din,
        to_eth_V_full_n,
        to_eth_V_write,
        mac_addr_V,
        mac_table_V_address0,
        mac_table_V_ce0,
        mac_table_V_d0,
        mac_table_V_q0,
        mac_table_V_we0,
        mac_table_V_address1,
        mac_table_V_ce1,
        mac_table_V_d1,
        mac_table_V_q1,
        mac_table_V_we1,
        ap_clk,
        ap_rst
);


output  [80:0] to_app_V_din;
input   to_app_V_full_n;
output   to_app_V_write;
input  [72:0] from_eth_V_dout;
input   from_eth_V_empty_n;
output   from_eth_V_read;
input  [80:0] from_app_V_dout;
input   from_app_V_empty_n;
output   from_app_V_read;
output  [72:0] to_eth_V_din;
input   to_eth_V_full_n;
output   to_eth_V_write;
input  [47:0] mac_addr_V;
output  [7:0] mac_table_V_address0;
output   mac_table_V_ce0;
output  [47:0] mac_table_V_d0;
input  [47:0] mac_table_V_q0;
output   mac_table_V_we0;
output  [7:0] mac_table_V_address1;
output   mac_table_V_ce1;
output  [47:0] mac_table_V_d1;
input  [47:0] mac_table_V_q1;
output   mac_table_V_we1;
input   ap_clk;
input   ap_rst;

wire    ethernet_bridge_entr_U0_ap_start;
wire    ethernet_bridge_entr_U0_ap_done;
wire    ethernet_bridge_entr_U0_ap_continue;
wire    ethernet_bridge_entr_U0_ap_idle;
wire    ethernet_bridge_entr_U0_ap_ready;
wire   [47:0] ethernet_bridge_entr_U0_mac_addr_V_out_din;
wire    ethernet_bridge_entr_U0_mac_addr_V_out_write;
wire   [47:0] ethernet_bridge_entr_U0_mac_addr_V_out1_din;
wire    ethernet_bridge_entr_U0_mac_addr_V_out1_write;
reg    eth_to_app_U0_ap_start;
wire    eth_to_app_U0_ap_done;
wire    eth_to_app_U0_ap_continue;
wire    eth_to_app_U0_ap_idle;
wire    eth_to_app_U0_ap_ready;
wire    eth_to_app_U0_mac_address_V_read;
wire    eth_to_app_U0_from_eth_V_read;
wire   [80:0] eth_to_app_U0_to_app_V_din;
wire    eth_to_app_U0_to_app_V_write;
wire    ap_sync_continue;
wire    app_to_eth_U0_ap_start;
wire    app_to_eth_U0_ap_done;
wire    app_to_eth_U0_ap_continue;
wire    app_to_eth_U0_ap_idle;
wire    app_to_eth_U0_ap_ready;
wire    app_to_eth_U0_from_app_V_read;
wire    app_to_eth_U0_src_mac_address_V_read;
wire   [72:0] app_to_eth_U0_to_eth_V_din;
wire    app_to_eth_U0_to_eth_V_write;
wire   [7:0] app_to_eth_U0_mac_table_V_address0;
wire    app_to_eth_U0_mac_table_V_ce0;
wire    mac_addr_V_c_full_n;
wire   [47:0] mac_addr_V_c_dout;
wire    mac_addr_V_c_empty_n;
wire    mac_addr_V_c42_full_n;
wire   [47:0] mac_addr_V_c42_dout;
wire    mac_addr_V_c42_empty_n;
wire    ethernet_bridge_entr_U0_start_full_n;
wire    ethernet_bridge_entr_U0_start_write;
wire    eth_to_app_U0_start_full_n;
wire    eth_to_app_U0_start_write;
wire    app_to_eth_U0_start_full_n;
wire    app_to_eth_U0_start_write;

// power-on initialization
initial begin
#0 eth_to_app_U0_ap_start = 1'b0;
end

ethernet_bridge_entr ethernet_bridge_entr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ethernet_bridge_entr_U0_ap_start),
    .ap_done(ethernet_bridge_entr_U0_ap_done),
    .ap_continue(ethernet_bridge_entr_U0_ap_continue),
    .ap_idle(ethernet_bridge_entr_U0_ap_idle),
    .ap_ready(ethernet_bridge_entr_U0_ap_ready),
    .mac_addr_V(mac_addr_V),
    .mac_addr_V_out_din(ethernet_bridge_entr_U0_mac_addr_V_out_din),
    .mac_addr_V_out_full_n(mac_addr_V_c_full_n),
    .mac_addr_V_out_write(ethernet_bridge_entr_U0_mac_addr_V_out_write),
    .mac_addr_V_out1_din(ethernet_bridge_entr_U0_mac_addr_V_out1_din),
    .mac_addr_V_out1_full_n(mac_addr_V_c42_full_n),
    .mac_addr_V_out1_write(ethernet_bridge_entr_U0_mac_addr_V_out1_write)
);

eth_to_app eth_to_app_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(eth_to_app_U0_ap_start),
    .ap_done(eth_to_app_U0_ap_done),
    .ap_continue(eth_to_app_U0_ap_continue),
    .ap_idle(eth_to_app_U0_ap_idle),
    .ap_ready(eth_to_app_U0_ap_ready),
    .mac_address_V_dout(mac_addr_V_c_dout),
    .mac_address_V_empty_n(mac_addr_V_c_empty_n),
    .mac_address_V_read(eth_to_app_U0_mac_address_V_read),
    .from_eth_V_dout(from_eth_V_dout),
    .from_eth_V_empty_n(from_eth_V_empty_n),
    .from_eth_V_read(eth_to_app_U0_from_eth_V_read),
    .to_app_V_din(eth_to_app_U0_to_app_V_din),
    .to_app_V_full_n(to_app_V_full_n),
    .to_app_V_write(eth_to_app_U0_to_app_V_write)
);

app_to_eth app_to_eth_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(app_to_eth_U0_ap_start),
    .ap_done(app_to_eth_U0_ap_done),
    .ap_continue(app_to_eth_U0_ap_continue),
    .ap_idle(app_to_eth_U0_ap_idle),
    .ap_ready(app_to_eth_U0_ap_ready),
    .from_app_V_dout(from_app_V_dout),
    .from_app_V_empty_n(from_app_V_empty_n),
    .from_app_V_read(app_to_eth_U0_from_app_V_read),
    .src_mac_address_V_dout(mac_addr_V_c42_dout),
    .src_mac_address_V_empty_n(mac_addr_V_c42_empty_n),
    .src_mac_address_V_read(app_to_eth_U0_src_mac_address_V_read),
    .to_eth_V_din(app_to_eth_U0_to_eth_V_din),
    .to_eth_V_full_n(to_eth_V_full_n),
    .to_eth_V_write(app_to_eth_U0_to_eth_V_write),
    .mac_table_V_address0(app_to_eth_U0_mac_table_V_address0),
    .mac_table_V_ce0(app_to_eth_U0_mac_table_V_ce0),
    .mac_table_V_q0(mac_table_V_q0)
);

fifo_w48_d2_A mac_addr_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ethernet_bridge_entr_U0_mac_addr_V_out_din),
    .if_full_n(mac_addr_V_c_full_n),
    .if_write(ethernet_bridge_entr_U0_mac_addr_V_out_write),
    .if_dout(mac_addr_V_c_dout),
    .if_empty_n(mac_addr_V_c_empty_n),
    .if_read(eth_to_app_U0_mac_address_V_read)
);

fifo_w48_d2_A mac_addr_V_c42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ethernet_bridge_entr_U0_mac_addr_V_out1_din),
    .if_full_n(mac_addr_V_c42_full_n),
    .if_write(ethernet_bridge_entr_U0_mac_addr_V_out1_write),
    .if_dout(mac_addr_V_c42_dout),
    .if_empty_n(mac_addr_V_c42_empty_n),
    .if_read(app_to_eth_U0_src_mac_address_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        eth_to_app_U0_ap_start <= 1'b0;
    end else begin
        eth_to_app_U0_ap_start <= 1'b1;
    end
end

assign ap_sync_continue = 1'b0;

assign app_to_eth_U0_ap_continue = 1'b1;

assign app_to_eth_U0_ap_start = 1'b1;

assign app_to_eth_U0_start_full_n = 1'b1;

assign app_to_eth_U0_start_write = 1'b0;

assign eth_to_app_U0_ap_continue = 1'b1;

assign eth_to_app_U0_start_full_n = 1'b1;

assign eth_to_app_U0_start_write = 1'b0;

assign ethernet_bridge_entr_U0_ap_continue = 1'b1;

assign ethernet_bridge_entr_U0_ap_start = 1'b1;

assign ethernet_bridge_entr_U0_start_full_n = 1'b1;

assign ethernet_bridge_entr_U0_start_write = 1'b0;

assign from_app_V_read = app_to_eth_U0_from_app_V_read;

assign from_eth_V_read = eth_to_app_U0_from_eth_V_read;

assign mac_table_V_address0 = app_to_eth_U0_mac_table_V_address0;

assign mac_table_V_address1 = 8'd0;

assign mac_table_V_ce0 = app_to_eth_U0_mac_table_V_ce0;

assign mac_table_V_ce1 = 1'b0;

assign mac_table_V_d0 = 48'd0;

assign mac_table_V_d1 = 48'd0;

assign mac_table_V_we0 = 1'b0;

assign mac_table_V_we1 = 1'b0;

assign to_app_V_din = eth_to_app_U0_to_app_V_din;

assign to_app_V_write = eth_to_app_U0_to_app_V_write;

assign to_eth_V_din = app_to_eth_U0_to_eth_V_din;

assign to_eth_V_write = app_to_eth_U0_to_eth_V_write;

endmodule //ethernet_bridge
